buildscript {
    repositories {
        jcenter()
        maven {url 'http://developer.marklogic.com/maven2/'}
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'net.saliman.properties' version '1.4.5'
    id 'com.marklogic.ml-data-hub-plugin' version '1.0.0-beta.4'
    id 'com.marklogic.ml-gradle' version '2.1.0'
}

repositories {
    jcenter()
    maven {url 'http://developer.marklogic.com/maven2/'}
}

dependencies {
    compile 'com.marklogic:marklogic-data-hub:+'
    compile 'com.marklogic:marklogic-xcc:8.0.5'
}

ext {
    // mlAppConfig is an instance of com.marklogic.appdeployer.AppConfig
    mlAppConfig {
        // override some default values with our values
        modulesDatabaseName = mlModulesDbName
        triggersDatabaseName = mlTriggersDbName
        schemasDatabaseName = mlSchemasDbName
        restPort = Integer.parseInt(mlStagingPort)

        // Configure custom tokens for our json files
        customTokens.put("%%STAGING_SERVER_NAME%%", mlStagingAppserverName)
        customTokens.put("%%STAGING_SERVER_PORT%%", mlStagingPort)
        customTokens.put("%%STAGING_DB_NAME%%", mlStagingDbName)

        customTokens.put("%%FINAL_SERVER_NAME%%", mlFinalAppserverName)
        customTokens.put("%%FINAL_SERVER_PORT%%", mlFinalPort)
        customTokens.put("%%FINAL_DB_NAME%%", mlFinalDbName)

        customTokens.put("%%TRACE_SERVER_NAME%%", mlTraceAppserverName)
        customTokens.put("%%TRACE_SERVER_PORT%%", mlTracePort)
        customTokens.put("%%TRACE_DB_NAME%%", mlTraceDbName)

        customTokens.put("%%MODULES_DB_NAME%%", mlModulesDbName)
    }
}

ext {
    // don't create the REST Api. We will do it manually
    mlAppDeployer.commands.remove(mlAppDeployer.getCommand("DeployRestApiServersCommand"))
    mlAppDeployer.commands.remove(mlAppDeployer.getCommand("UpdateRestApiServersCommand"))

    // remove the original deploy content database command
    // as we do not need it.
    def deployDbCmd = mlAppDeployer.getCommand("DeployContentDatabasesCommand")
    mlAppDeployer.commands.remove(deployDbCmd)

    // install the staging database
    def stagingDbCommand = new com.marklogic.appdeployer.command.databases.DeployDatabaseCommand("staging-database.json")
    stagingDbCommand.setForestsPerHost(Integer.parseInt(mlStagingForestsPerHost));
    mlAppDeployer.commands.add(stagingDbCommand)
    mlDatabaseCommands.add(stagingDbCommand)

    // install the final database
    def finalDbCommand = new com.marklogic.appdeployer.command.databases.DeployDatabaseCommand("final-database.json")
    finalDbCommand.setForestsPerHost(Integer.parseInt(mlFinalForestsPerHost));
    mlAppDeployer.commands.add(finalDbCommand)
    mlDatabaseCommands.add(finalDbCommand)

    // install the trace database
    def traceDbCommand = new com.marklogic.appdeployer.command.databases.DeployDatabaseCommand("trace-database.json")
    traceDbCommand.setForestsPerHost(Integer.parseInt(mlTraceForestsPerHost));
    mlAppDeployer.commands.add(traceDbCommand)
    mlDatabaseCommands.add(traceDbCommand)

    // install the modules database
    def modulesDbCommand = new com.marklogic.appdeployer.command.databases.DeployDatabaseCommand("modules-database.json")
    mlAppDeployer.commands.add(modulesDbCommand)
    mlDatabaseCommands.add(modulesDbCommand)

    // temp workaround for ml-gradle issue #78
    // https://github.com/rjrudin/ml-gradle/issues/78
    def lmc = mlAppDeployer.getCommand("LoadModulesCommand")
    lmc.setModulesLoader(new com.marklogic.client.modulesloader.impl.DefaultModulesLoader(mlAppConfig.newXccAssetLoader()))
}

// This task will deploy the Data Hub Modules into MarkLogic
task deployHubModules(type: com.marklogic.gradle.task.MarkLogicTask) {
    description = "Call this task to deploy the MarkLogic Data Hub Modules"
    doLast {
        def cmd = new com.marklogic.hub.commands.LoadModulesCommand()
        cmd.execute(getCommandContext())
    }
}

// Set up a dependency on deployHubModules. This forces the hub
// modules to be deployed whenever you deploy your custom modules.
// This is necessary for the Hub to function properly.
mlLoadModules.dependsOn deployHubModules
