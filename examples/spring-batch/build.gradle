plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'net.saliman.properties' version '1.4.6'
    id 'com.marklogic.ml-data-hub' version '4.0.3'
}

repositories {
    jcenter()
    maven {url 'http://developer.marklogic.com/maven2/'}
}

dependencies {
    compile 'com.marklogic:marklogic-data-hub:4.0.3'
    compile "com.marklogic:marklogic-spring-batch-core:1.7.0"
    compile 'com.marklogic:spring-batch-rdbms:1.7.0'

    testCompile "com.h2database:h2:1.4.193"
    testCompile "com.marklogic:marklogic-spring-batch-test:1.7.0"

    runtime "com.h2database:h2:1.4.193"
    runtime "ch.qos.logback:logback-classic:1.1.8"
    runtime "org.slf4j:jcl-over-slf4j:1.7.22"
    runtime "org.slf4j:slf4j-api:1.7.22"
}

mainClassName = "com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner"

task runInputCustomersFlow(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = "com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner"
    args = [
            "--job_path", "com.marklogic.hub.job.SqlDbToHubJobConfig",
            "--job_id", "sqlDbToHubJob",
            "--entity", "customer",
            "--flow", "customerInput",
            "--hubJobId", UUID.randomUUID().toString()
    ]
}

// This task is for running the examples
task runH2DataManager(type: JavaExec) {
    classpath = configurations.runtime
    main = "org.h2.tools.Console"
    args = [
        "-url", "jdbc:h2:file:./input/sample",
        "-user", "sa"
    ]
}

task loadH2Data(type: JavaExec) {
    classpath = configurations.runtime
    main = "org.h2.tools.RunScript"
    args = [
        "-url", "jdbc:h2:file:./input/sample",
        "-user", "sa",
        "-script", "./src/test/resources/db/sampledata.sql"
    ]
}

runInputCustomersFlow.dependsOn loadH2Data
