buildscript {
  repositories {
    maven {url 'http://developer.marklogic.com/maven2/'}
  }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'

    // This plugin allows you to create different environments
    // for your gradle deploy. Each environment is represented
    // by a gradle-${env}.properties file
    // See https://github.com/stevesaliman/gradle-properties-plugin
    // specify the env on the command line with:
    // gradle -PenvironmentName=x ...
    id 'net.saliman.properties' version '1.4.6'

    // This gradle plugin extends the ml-gradle plugin with
    // commands that make Data Hub do its magic
    id 'com.marklogic.ml-data-hub' version '4.1.0'
}

repositories {
	// To use gradle in disconnected mode, you just need to set the 'disconnected' property. E.g. gradle compileJava -Pdisconnected
	if (project.hasProperty("disconnected") && !"FALSE".equalsIgnoreCase(disconnected)) {
		println "Using offline repositories"
		maven { url uri(projectMavenRepo) }
	} else {
		println "Using online repositories"
		jcenter()
		maven { url "https://developer.marklogic.com/maven2/" }
	}
}

configurations {
	mlcp //example if you want to use mlcp. Delete otherwise
}

dependencies {
    // this allows you to write custom java code that depends
    // on the Data Hub library
	// Remove if not needed
    compile 'com.marklogic:marklogic-data-hub:4.0.3'
    compile 'com.marklogic:marklogic-xcc:9.0.7'

    //sample mlcp dependency. Remove if not required
	mlcp "com.marklogic:mlcp:9.0.7"
	/**
	 * mlcp uses Log4j for logging, and if Log4j can't find a configuration file, it will complain and you'll
	 * get none of mlcp's usually-useful logging. It is recommended then that your Gradle configuration for
	 * mlcp include a directory or some other resource that provides a log4j.properties file.
	 */
	mlcp files("lib")
}


/**
 * START: Disconnected gradle tasks
 */
gradle.taskGraph.whenReady { graph ->
	if (graph.hasTask(downloadToProjectMavenRepo)) {
		println project.gradle.gradleUserHomeDir
		if (!project.gradle.gradleUserHomeDir.equals(new File(rootDir, projectGradleHome))) {
			throw new GradleException("Please set the gradle user home property to $projectGradleHome on the gradle command line - e.g. \n " +
				(System.getProperty("os.name").startsWith("Windows") ? "" : "./") +
				"gradlew -Dgradle.user.home=$projectGradleHome <task_to_execute>")
		}
	}
}

task downloadToProjectMavenRepo(type: Copy) {
	/*
	 * Include any configuration dependencies here that you want to copy the dependencies for.
	 * These are defined in the 'dependencies' block. E.g. you need to include
	 * configurations.compile.files if you want your java 'compile' dependencies downloaded
	 */
	configurations.compile.files //includes 'java' compile dependencies. Remove if not needed
	configurations.mlcp.files //includes 'mlcp' dependencies. Remove if not needed

	from new File(gradle.gradleUserHomeDir, 'caches/modules-2/files-2.1') // correct as of gradle 4.7
	into new File(rootDir, projectMavenRepo)
	eachFile {
		List<String> parts = it.path.split('/')
		it.path = (parts[0].replace('.', '/') + '/' + parts[1]) + '/' + parts[2] + '/' + parts[4]
	}
	includeEmptyDirs false
}

task makeOfflineZip(type: Zip, dependsOn: downloadToProjectMavenRepo) {
	from rootDir
	excludes = ['.tmp', '.gradle', 'build/gradle-home', 'build/distributions', 'build/offline/gradle/wrapper/dists']
	destinationDir(file('build/distributions'))
	archiveName = 'offline.zip'
	doLast {
		println "Created offline project zip at build/distributions/offline.zip"
	}
}

/**
 * END: Disconnected gradle tasks
 */

 /**
 * Start mlcpExample
 */
task mlcpExample(type: com.marklogic.gradle.task.MlcpTask) {
	classpath = configurations.mlcp
	command = "IMPORT"
	port = Integer.parseInt(mlStagingPort)
	input_file_path = "data/sample.csv" //assumes a csv file exists at "data/sample.csv" 
	input_file_type = "delimited_text"
	delimiter = ";"
	document_type = "json"
	output_collections = "/type/data"
	output_uri_prefix = "/data/"
	output_uri_replace = ".*/data/,''"
}

