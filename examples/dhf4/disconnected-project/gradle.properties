# START: Disconnected build
projectMavenRepo=build/offline/maven-repo
# if you change this, you need to modify gradlew and gradlew.bat also
projectGradleHome=build/gradle-home
# END: Disconnected build

# These settings are used by Data Hub when
# communicating with MarkLogic.
# The values in this file are meant as project-wide settings.
# You can override these properties for a specific environment
# by creating a gradle-{environment}.properties file.
# For example, to create a properties file for your prod environment create a file
# named gradle-prod.properties.
#
# ....
mlDHFVersion=4.0.3
mlHost=localhost

# If you are working with a load balancer please specify it here
# mlIsHostLoadBalancer=true/false

# Your MarkLogic Username and Password
mlUsername=
mlPassword=

# If specified, the manage username/password combo is used with the ML Management REST API for managing application
# resources; this user must have the manage-admin and rest-admin roles.
#
# If these are not set, then mlUsername/mlPassword is used for managing application resources.
# mlManageUsername=
# mlManagePassword=
#
# To change the Manage Port
# mlManagePort=8002
#
# To use SSL on the Manage appserver (port 8002 by default)
# mlManageScheme=https
# mlManageSimpleSsl=true
#
# If specified, mlSecurityUsername/mlSecurityPassword is used for talking to Security end points on port 8002; this 
# user must have the "manage-admin" and "security" roles.
#
# mlSecurityUsername=
# mlSecurityPassword=
#
# If specified, the admin username/password combo is used with the ML Management REST API for creating users and roles. This
# user must have the manage-admin or admin role. A good practice is to use your admin account here to create app-specific
# users and roles, which can then be used as mlManageUsername/mlManagePassword and mlUsername/mlPassword.
#
# These properties are also used for connecting to the admin application on port 8001 - e.g. for initializing ML and for
# waiting for ML to restart.
#
# If these properties are not set, then mlUsername/mlPassword will be used.
# mlAdminUsername=
# mlAdminPassword=
#
# To change the Admin Port
# mlAdminPort=8001
#
# To use SSL on the Admin appserver (port 8001 by default)
# mlAdminScheme=https
# mlAdminSimpleSsl=true


# If specified, these values can override where the DHF thinks
# MarkLogic default ports are at. You would only use this if you
# have changed the ports on which MarkLogic listens
#
# mlAppServicesPort=8000
#
# To use SSL on the AppServices appserver (port 8000 by default)
# mlAppServicesSimpleSsl=true


mlStagingAppserverName=data-hub-STAGING
mlStagingPort=8010
mlStagingDbName=data-hub-STAGING
mlStagingForestsPerHost=4
mlStagingAuth=digest
# To enable SSL for staging
# mlStagingSimpleSsl=true

mlFinalAppserverName=data-hub-FINAL
mlFinalPort=8011
mlFinalDbName=data-hub-FINAL
mlFinalForestsPerHost=4
mlFinalAuth=digest
# To enable SSL for final
# mlFinalSimpleSsl=true


mlJobAppserverName=data-hub-JOBS
mlJobPort=8013
mlJobDbName=data-hub-JOBS
mlJobForestsPerHost=1
mlJobAuth=digest
# To enable SSL for jobs
# mlJobSimpleSsl=true

mlModulesDbName=data-hub-MODULES
mlModulesForestsPerHost=1

mlStagingTriggersDbName=data-hub-staging-TRIGGERS
mlStagingTriggersForestsPerHost=1

mlStagingSchemasDbName=data-hub-staging-SCHEMAS
mlStagingSchemasForestsPerHost=1

mlFinalTriggersDbName=data-hub-final-TRIGGERS
mlFinalTriggersForestsPerHost=1

mlFinalSchemasDbName=data-hub-final-SCHEMAS
mlFinalSchemasForestsPerHost=1

# You can override this to specify an alternate folder for your
# custom forest info. Defaults to user-config/forests/
# mlCustomForestPath=forests

# The name of the Role to create for Hub Access
mlFlowOperatorRole=flow-operator-role
mlFlowOperatorUserName=flow-operator
# this password is autogenerated for you via the 'gradle hubInit' task
mlFlowOperatorUserPassword=_RK6_vC*eR9J&6<PEE6V

# The name of the role to create for hub deployment/development
mlFlowDeveloperRole=flow-developer-role
mlFlowDeveloperUserName=flow-developer
mlFlowDeveloperUserPassword=o@r*'.2HAt(3iAoXR/*v

# Deprecated property
# If you are working with a load balancer please indicate so using
# property "mlIsHostLoadBalancer"
# When "mlIsHostLoadBalancer" is set to "true", the value specified for "mlHost" will be used as the load balancer.
# You do not need to explicitly set the value of "mlLoadBalancerHosts" but if you do it must match the value of the property "mlHost"
# mlLoadBalancerHosts=your-load-balancer-hostname

# Default module permissions which allow flow-operator-role to execute flows
mlModulePermissions=rest-reader,read,rest-writer,insert,rest-writer,update,rest-extension-user,execute,flow-operator-role,read,flow-operator-role,execute

# If DHF is running in a provisioned environment please specify it here
# mlIsProvisionedEnvironment=false
