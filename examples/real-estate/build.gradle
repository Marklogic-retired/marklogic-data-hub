buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "com.marklogic:ml-data-hub:5.8-SNAPSHOT"
    }
}

plugins {
    id "net.saliman.properties" version "1.5.1"
    id "java"
}
apply plugin: "com.marklogic.ml-data-hub"

repositories {
    mavenCentral()
    maven { url "https://developer.marklogic.com/maven2/" }
}

configurations {
    mlcp
}

dependencies {
    mlcp "com.marklogic:mlcp:10.0.8.2"
    mlcp files("lib")
}

task extractData(type: Copy) {
    fileTree(dir: 'dataset', includes: ['**/*.zip']).each { zipFile ->
        from zipTree(zipFile)
    }
    into 'dataset'
}

["Data_Ingestion", "Data_Mapping", "Generate_Dictonaries", "Data_Matching", "Data_Merging"].each {theFlowName ->
    task "run${theFlowName}" (type: com.marklogic.gradle.task.RunFlowTask, group: "Run flow") {
        description = "Run the ingestion and mapping steps for flow ${theFlowName}"
        flowName = theFlowName
    }
}

task runFlows() {
    def tasks = [runData_Ingestion, runData_Mapping, runGenerate_Dictonaries, runData_Matching, runData_Merging]
    for (int i = 1; i < tasks.size(); i++) {
        tasks[i].mustRunAfter(tasks[i-1])
    }
    dependsOn(tasks)
}

task loadThesaurus(type: com.marklogic.gradle.task.MlcpTask) {
    classpath = configurations.mlcp
    username = project.findProperty("mlUsername")
    password = project.findProperty("mlPassword")
    command = "IMPORT"
    database = "data-hub-FINAL"
    input_file_path = "dataset/thesaurus"
    output_collections = "http://marklogic.com/xdmp/thesaurus,http://marklogic.com/xdmp/documents"
    output_permissions = "data-hub-common,read,data-hub-common,update"
    output_uri_replace = ".*dataset,''"
}

mlPostDeploy.dependsOn loadThesaurus
mlPostDeploy.dependsOn extractData

