
{
  "collections": ["mapCustomersWithRelatedEntitiesXML", "Customer"],
  "permissions": "data-hub-common,read,data-hub-common,update",
  "targetFormat": "xml",
  "name": "mapCustomersWithRelatedEntitiesXML",
  "targetEntityType": "http://example.org/Customer-0.0.1/Customer",
  "selectedSource": "collection",
  "sourceQuery": "cts.collectionQuery(['loadCustomersWithRelatedEntitiesXML'])",
  "sourceDatabase": "data-hub-STAGING",
  "targetDatabase": "data-hub-FINAL",
  "stepDefinitionName": "entity-services-mapping",
  "stepDefinitionType": "mapping",
  "stepId": "mapCustomersWithRelatedEntitiesXML-mapping",
  "uriExpression": "$URI",
  "namespaces": {
    "entity-services": "http://marklogic.com/entity-services",
    "customerInfo": "customerInfo"
  },
  "properties": {
    "customerId": {
      "sourcedFrom": "/node()/customerInfo:CustomerID"
    },
    "name": {
      "sourcedFrom": "concat(customerInfo:Customer/customerInfo:Name/customerInfo:FirstName, ' ', customerInfo:Customer/customerInfo:Name/customerInfo:LastName)"
    },
    "nicknames": {
      "sourcedFrom": "//customerInfo:nickname"
    },
    "shipping": {
      "sourcedFrom": "//*:Shipping",
      "properties": {
        "street": {
          "sourcedFrom": "*:Street"
        },
        "city": {
          "sourcedFrom": "*:City"
        },
        "zip": {
          "sourcedFrom": ".",
          "properties": {
            "fiveDigit": {
              "sourcedFrom": "substring(*:Postal, 1, 5)"
            },
            "plusFour": {
              "sourcedFrom": "substring(*:Postal, 7)"
            }
          },
          "targetEntityType": "#/definitions/Zip"
        },
        "state": {
          "sourcedFrom": "*:State"
        }
      },
      "targetEntityType": "#/definitions/Address"
    },
    "billing": {
      "sourcedFrom": "//*:Billing",
      "properties": {
        "street": {
          "sourcedFrom": "*:Street"
        },
        "zip": {
          "sourcedFrom": ".",
          "properties": {
            "fiveDigit": {
              "sourcedFrom": "substring(*:Postal, 1, 5)"
            },
            "plusFour": {
              "sourcedFrom": "substring(*:Postal, 7)"
            }
          },
          "targetEntityType": "#/definitions/Zip"
        },
        "city": {
          "sourcedFrom": "*:City"
        },
        "state": {
          "sourcedFrom": "*:State"
        }
      },
      "targetEntityType": "#/definitions/Address"
    }
  },
  "relatedEntityMappings": [
    {
      "relatedEntityMappingId": "Order:Customer.customerId",
      "collections": ["mapCustomersWithRelatedEntitiesXML", "Order"],
      "expressionContext": "/customerInfo:Customer/customerInfo:Orders/customerInfo:Order",
      "permissions": "data-hub-common,read,data-hub-common,update",
      "uriExpression": "concat('/Order/', customerInfo:OrderID)",
      "properties": {
        "orderId": {
          "sourcedFrom": "customerInfo:OrderID"
        },
        "orderDateTime": {
          "sourcedFrom": "parseDateTime(customerInfo:DateAndTime/text(), 'YYYY/MM/DD-hh:mm:ss')"
        },
        "orderedBy": {
          "sourcedFrom": "//*:CustomerID"
        },
        "deliveredTo": {
          "sourcedFrom": "customerInfo:SendToID"
        },
        "lineItems": {
          "sourcedFrom": "customerInfo:Products/customerInfo:Product",
          "properties": {
            "quantity": {
              "sourcedFrom": "*:Quantity"
            },
            "includes": {
              "sourcedFrom": "*:ProductId"
            }
          },
          "targetEntityType": "#/definitions/LineItem"
        }
      },
      "targetEntityType": "http://example.org/Order-0.0.1/Order"
    },
    {
      "relatedEntityMappingId": "Product:Order.lineItems.includes",
      "collections": ["mapCustomersWithRelatedEntitiesXML", "Product"],
      "permissions": "data-hub-operator,read,data-hub-operator,update",
      "expressionContext": "/customerInfo:Customer/customerInfo:Orders/customerInfo:Order/customerInfo:Products/customerInfo:Product",
      "uriExpression": "concat('/Product/', *:ProductId)",
      "properties": {
        "productId": {
          "sourcedFrom": "*:ProductId"
        },
        "productName": {
          "sourcedFrom": "*:Name"
        }
      },
      "targetEntityType": "http://example.org/Product-1.0.0/Product"
    },
    {
      "relatedEntityMappingId": "BabyRegistry:Customer.customerId",
      "collections": ["mapCustomersWithRelatedEntitiesXML", "BabyRegistry"],
      "expressionContext": "/customerInfo:Customer/customerInfo:BabyRegistry",
      "uriExpression": "concat('/BabyRegistry/', *:BabyRegistryId)",
      "permissions": "data-hub-common,read,data-hub-common,update",
      "properties": {
        "babyRegistryId": {
          "sourcedFrom": "*:BabyRegistryId"
        },
        "arrivalDate": {
          "sourcedFrom": "parseDate(customerInfo:Arrival_Date/text(), 'YYYY-MM-DD')"
        },
        "ownedBy": {
          "sourcedFrom": "/customerInfo:Customer/customerInfo:CustomerID"
        },
        "includes": {
          "sourcedFrom": "customerInfo:Products/*:Product/*:ProductId"
        }
      },
      "targetEntityType": "http://example.org/BabyRegistry-0.0.1/BabyRegistry"
    },
    {
      "relatedEntityMappingId": "Product:BabyRegistry.includes",
      "collections": ["mapCustomersWithRelatedEntitiesXML", "Product"],
      "permissions": "data-hub-operator,read,data-hub-operator,update",
      "expressionContext": "/*:Customer/customerInfo:BabyRegistry/customerInfo:Products/customerInfo:Product",
      "uriExpression": "concat('/Product/', customerInfo:ProductId)",
      "properties": {
        "productId": {
          "sourcedFrom": "customerInfo:ProductId"
        },
        "productName": {
          "sourcedFrom": "customerInfo:Name"
        }
      },
      "targetEntityType": "http://example.org/Product-1.0.0/Product"
    }
  ]
}
