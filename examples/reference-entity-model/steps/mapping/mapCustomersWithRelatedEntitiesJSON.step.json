
{
  "collections": ["mapCustomersWithRelatedEntitiesJSON", "Customer"],
  "permissions": "data-hub-common,read,data-hub-common,update",
  "targetFormat": "JSON",
  "name": "mapCustomersWithRelatedEntitiesJSON",
  "targetEntityType": "http://example.org/Customer-0.0.1/Customer",
  "selectedSource": "collection",
  "sourceQuery": "cts.collectionQuery(['loadCustomersWithRelatedEntitiesJSON'])",
  "sourceDatabase": "data-hub-STAGING",
  "targetDatabase": "data-hub-FINAL",
  "stepDefinitionName": "entity-services-mapping",
  "stepDefinitionType": "mapping",
  "stepId": "mapCustomersWithRelatedEntitiesJSON-mapping",
  "properties": {
    "customerId": {
      "sourcedFrom": "CustomerID"
    },
    "name": {
      "sourcedFrom": "concat(Name/FirstName, ' ', Name/LastName)"
    },
    "nicknames": {
      "sourcedFrom": "nicknames"
    },
    "shipping": {
      "sourcedFrom": "/Address/Shipping",
      "properties": {
        "street": {
          "sourcedFrom": "Street"
        },
        "city": {
          "sourcedFrom": "City"
        },
        "state": {
          "sourcedFrom": "State"
        },
        "zip": {
          "sourcedFrom": ".",
          "properties": {
            "fiveDigit": {
              "sourcedFrom": "substring(Postal, 1, 5)"
            },
            "plusFour": {
              "sourcedFrom": "substring(Postal, 7)"
            }
          },
          "targetEntityType": "#/definitions/Zip"
        }
      },
      "targetEntityType": "#/definitions/Address"
    },
    "billing": {
      "sourcedFrom": "/Address/Billing",
      "properties": {
        "street": {
          "sourcedFrom": "Street"
        },
        "city": {
          "sourcedFrom": "City"
        },
        "state": {
          "sourcedFrom": "State"
        },
        "zip": {
          "sourcedFrom": ".",
          "properties": {
            "fiveDigit": {
              "sourcedFrom": "substring(Postal, 1, 5)"
            },
            "plusFour": {
              "sourcedFrom": "substring(Postal, 7)"
            }
          },
          "targetEntityType": "#/definitions/Zip"
        }
      },
      "targetEntityType": "#/definitions/Address"
    }
  },
  "relatedEntityMappings": [
    {
      "relatedEntityMappingId": "Customer.customerId:Order",
      "collections": ["mapCustomersWithRelatedEntitiesJSON", "Order"],
      "expressionContext": "/Orders",
      "uriExpression": "hubURI('Order')",
      "permissions": "data-hub-common,read,data-hub-common,update",
      "properties": {
        "orderId": {
          "sourcedFrom": "OrderId"
        },
        "orderDateTime": {
          "sourcedFrom": "parseDateTime(DateAndTime, 'YYYY/MM/DD-hh:mm:ss')"
        },
        "orderedBy": {
          "sourcedFrom": "/CustomerID"
        },
        "deliveredTo": {
          "sourcedFrom": "SendToID"
        },
        "lineItems": {
          "sourcedFrom": "Products",
          "properties": {
            "quantity": {
              "sourcedFrom": "Quantity"
            },
            "includes": {
              "sourcedFrom": "ProductId"
            }
          },
          "targetEntityType": "#/definitions/LineItem"
        }
      },
      "targetEntityType": "http://marklogic.com/example/Order-0.0.1/Order"
    },
    {
      "relatedEntityMappingId": "Customer.customerId:Order.lineItems.includes:Product",
      "collections": ["mapCustomersWithRelatedEntitiesJSON", "Product"],
      "permissions": "data-hub-operator,read,data-hub-operator,update",
      "expressionContext": "/Orders/Products",
      "uriExpression": "concat('/Product/', ProductId)",
      "properties": {
        "productId": {
          "sourcedFrom": "ProductId"
        },
        "productName": {
          "sourcedFrom": "Name"
        }
      },
      "targetEntityType": "http://example.org/Product-1.0.0/Product"
    },
    {
      "relatedEntityMappingId": "Customer.customerId:BabyRegistry",
      "collections": ["mapCustomersWithRelatedEntitiesJSON", "BabyRegistry"],
      "expressionContext": "BabyRegistry",
      "uriExpression": "concat('/BabyRegistry/', BabyRegistryId)",
      "permissions": "data-hub-common,read,data-hub-common,update",
      "properties": {
        "babyRegistryId": {
          "sourcedFrom": "BabyRegistryId"
        },
        "arrivalDate": {
          "sourcedFrom": "parseDate(Arrival_Date, 'YYYY-MM-DD')"
        },
        "ownedBy": {
          "sourcedFrom": "/CustomerID"
        },
        "includes": {
          "sourcedFrom": "Products/ProductId"
        }
      },
      "targetEntityType": "http://marklogic.com/example/BabyRegistry-0.0.1/BabyRegistry"
    },
    {
      "relatedEntityMappingId": "Customer.customerId:BabyRegistry.includes:Product",
      "collections": ["mapCustomersWithRelatedEntitiesJSON", "Product"],
      "permissions": "data-hub-operator,read,data-hub-operator,update",
      "expressionContext": "/BabyRegistry/Products",
      "uriExpression": "concat('/Product/', ProductId)",
      "properties": {
        "productId": {
          "sourcedFrom": "ProductId"
        },
        "productName": {
          "sourcedFrom": "Name"
        }
      },
      "targetEntityType": "http://example.org/Product-1.0.0/Product"
    }
  ]
}
