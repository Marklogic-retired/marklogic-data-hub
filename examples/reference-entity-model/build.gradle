buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        if (project.hasProperty("testing")) {
            classpath "com.marklogic:ml-data-hub:5.5-SNAPSHOT"
        } else {
            classpath "gradle.plugin.com.marklogic:ml-data-hub:5.4.0"
        }
    }
}

plugins {
    id "net.saliman.properties" version "1.5.1"
    id "java"
}
apply plugin: "com.marklogic.ml-data-hub"

configurations {
    mlcp
}

["CurateCustomerJSON", "CurateCustomerXML", "CurateNamespacedCustomers"].each {theFlowName ->
    task "run${theFlowName}" (type: com.marklogic.gradle.task.RunFlowTask, group: "Run flow") {
        description = "Run the ingestion and mapping steps for flow ${theFlowName}"
        flowName = theFlowName
        steps = ["1", "2"]
    }
}

task runFlows {
    dependsOn {
        tasks.findAll { task -> "Run flow".equals(task.group) }
    }
}

task mergeJsonCustomers(type: com.marklogic.gradle.task.RunFlowTask) {
    flowName = "CurateCustomerJSON"
    steps = ["3", "4"]
}

mlDeploy.finalizedBy runFlows, mergeJsonCustomers
mergeJsonCustomers.mustRunAfter runFlows


// The following config is used for manual ad hoc testing of loading data via MLCP and the DHF MLCP transform
repositories {
    jcenter()
    maven { url "http://developer.marklogic.com/maven2/" }
}
dependencies {
    mlcp "com.marklogic:mlcp:10.0.5"
    mlcp files("lib")
}
task loadCustomersViaMlcp(type: com.marklogic.gradle.task.MlcpTask) {
    description = "Example of using the MLCP DHF transform to load documents via MLCP"
    classpath = configurations.mlcp
    command = "IMPORT"
    port = 8010
    output_collections = "MlcpCustomer"
    input_file_path = "input/json"
    output_permissions = "data-hub-common,read,data-hub-common,update"
    transform_module = "/data-hub/5/transforms/mlcp-flow-transform.sjs"
    transform_param = "flow-name=CurateCustomerJSON,step=1"
}

task exportCustomers(type: com.marklogic.gradle.task.MlcpTask) {
    description = "Example of using MLCP via Gradle via a minimally-privileged user to export data"
	classpath = configurations.mlcp
	command = "EXPORT"
	port = 8011
	username = "common-user"
	password = testPassword
	output_file_path = "build/export"
	collection_filter = "Customer"
}
