plugins {
    id "java"
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "io.snyk.gradle.plugin.snykplugin" version "0.4"
    id 'maven-publish'
}

sourceCompatibility = "8"
targetCompatibility = "8"

group = 'com.marklogic'

// See https://github.com/snyk/gradle-plugin for docs
snyk {
    severity = 'medium'
    api = snykToken
    autoDownload = true
    autoUpdate = true
}

repositories {
    jcenter()
}

ext {
    junitPlatformVersion = '1.4.2'
    junitJupiterVersion = '5.4.2'
}

dependencies {
    implementation project(":marklogic-data-hub")
    implementation "com.beust:jcommander:1.72"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    testImplementation(testFixtures(project(":marklogic-data-hub")))
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.junit.platform:junit-platform-commons:${junitPlatformVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

test {
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName = "marklogic-data-hub"
    archiveClassifier = "client"
    manifest {
        attributes "Main-Class": "com.marklogic.hub.clientjar.Main"
    }
}
build.dependsOn shadowJar

Node pomCustomizations = new NodeBuilder(). project {
    name 'marklogic-data-hub-client-jar'
    packaging 'jar'
    textdescription 'Library for Creating an Operational Data Hub on MarkLogic'
    url 'https://github.com/marklogic/marklogic-data-hub'

    scm {
        url 'git@github.com:marklogic/marklogic-data-hub.git'
        connection 'scm:git@github.com:marklogic/marklogic-data-hub.git'
        developerConnection 'scm:git@github.com:marklogic/marklogic-data-hub.git'
    }

    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    developers {
        developer {
            name 'MarkLogic'
            email 'java-sig@marklogic.com'
            organization 'MarkLogic'
            organizationUrl 'https://www.marklogic.com'
        }
        developer {
            name 'MarkLogic Github Contributors'
            email 'general@developer.marklogic.com'
            organization 'Github Contributors'
            organizationUrl 'https://github.com/marklogic/marklogic-data-hub/graphs/contributors'
        }
    }
}


publishing {
    publications {
        main(MavenPublication) {
            from components.java

            pom.withXml {
                asNode().appendNode('description', pomCustomizations.textdescription.text())
                asNode().append(pomCustomizations.developers)
                asNode().append(pomCustomizations.name)
                asNode().append(pomCustomizations.packaging)
                asNode().append(pomCustomizations.url)
                asNode().append(pomCustomizations.scm)
                asNode().append(pomCustomizations.licenses)
            }
        }
    }
    repositories {
        maven {
            if (project.hasProperty("mavenUser")) {
                credentials {
                    username mavenUser
                    password mavenPassword
                }
            }
            url publishUrl
        }
    }
}
