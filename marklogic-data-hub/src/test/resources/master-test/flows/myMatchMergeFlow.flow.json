{
  "name": "myMatchMergeFlow",
  "options": {
    "collections": ["myMatchMergeFlow"]
  },
  "description": "flow description",
  "steps": {
    "1": {
      "stepDefinitionName": "ingest",
      "stepDefinitionType": "INGESTION",
      "fileLocations": {
        "inputFilePath": "input",
        "inputFileType": "json",
        "outputURIReplacement": ".*/input,''"
      },
      "options": {
        "sourceDatabase": "data-hub-STAGING",
        "targetDatabase": "data-hub-STAGING",
        "sourceQuery": null,
        "outputFormat": "json",
        "collections": ["default-ingestion"]
      }
    },
    "2": {
      "stepDefinitionName": "mapping",
      "stepDefinitionType": "MAPPING",
      "options": {
        "sourceDatabase": "data-hub-STAGING",
        "targetDatabase": "data-hub-FINAL"
      }
    },
    "3": {
      "stepDefinitionName": "default-matching",
      "stepDefinitionType": "MATCHING",
      "options": {
        "targetEntity": "person",
        "sourceQuery": "cts.collectionQuery('mapping')",
        "collections": ["myMatchingCollection"],
        "provenanceGranularityLevel": "fine",
        "sourceDatabase": "data-hub-FINAL",
        "targetDatabase": "data-hub-FINAL",
        "matchOptions": {
          "dataFormat": "json",
          "propertyDefs": {
            "property": [
              {
                "namespace": "",
                "localname": "firstName",
                "name": "firstName"
              },
              {
                "namespace": "",
                "localname": "lastName",
                "name": "lastName"
              },
              {
                "namespace": "",
                "localname": "email",
                "name": "email"
              },
              {
                "namespace": "",
                "localname": "gender",
                "name": "gender"
              }
            ]
          },
          "algorithms": {
            "algorithm": []
          },
          "scoring": {
            "add": [
              {
                "propertyName": "email",
                "weight": "50"
              },
              {
                "propertyName": "lastName",
                "weight": "12"
              },
              {
                "propertyName": "firstName",
                "weight": "6"
              },
              {
                "propertyName": "gender",
                "weight": "3"
              }
            ],
            "expand": [],
            "reduce": []
          },
          "thresholds": {
            "threshold": [
              {
                "above": "30",
                "label": "Possible Match"
              },
              {
                "above": "50",
                "label": "Likely Match",
                "action": "notify"
              },
              {
                "above": "68",
                "label": "Definitive Match",
                "action": "merge"
              }
            ]
          },
          "tuning": {
            "maxScan": "200"
          }
        }
      }
    },
    "4": {
      "stepDefinitionName": "default-merging",
      "stepDefinitionType": "MERGING",
      "options": {
        "targetEntity": "person",
        "provenanceGranularityLevel": "fine",
        "sourceQuery": "cts.collectionQuery('myMatchingCollection')",
        "sourceDatabase": "data-hub-FINAL",
        "targetDatabase": "data-hub-FINAL",
        "mergeOptions": {
          "propertyDefs": {
            "properties": [
              {
                "namespace": "",
                "localname": "id",
                "name": "id"
              },
              {
                "namespace": "",
                "localname": "firstName",
                "name": "firstName"
              },
              {
                "namespace": "",
                "localname": "lastName",
                "name": "lastName"
              },
              {
                "namespace": "",
                "localname": "Address",
                "name": "address"
              }
            ]
          },
          "algorithms": {
            "stdAlgorithm": {
              "timestamp": {
                "path": "/envelope/headers/ingestDateTime"
              }
            }
          },
          "merging": [
            {
              "default": "true",
              "maxSources": "1",
              "sourceWeights": [{
                "source": {
                  "name": "A",
                  "weight": "10"
                }
              }]
            }
          ]
        }
      }
    }
  }
}
