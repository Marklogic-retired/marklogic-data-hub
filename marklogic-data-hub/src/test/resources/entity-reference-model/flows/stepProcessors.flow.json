{
  "name": "stepProcessors",
  "stopOnError": true,
  "steps": {
    "1": {
      "name": "stepOne",
      "stepDefinitionName": "echoStep",
      "stepDefinitionType": "CUSTOM",
      "options": {
        "sourceQuery": "cts.collectionQuery('customer-input')",
        "permissions": "data-hub-common,read,data-hub-common,update"
      },
      "processors": [
        {
          "path": "/custom-modules/step-processors/addHeaders.sjs",
          "when": "beforeContentPersisted",
          "vars": {
            "headerValueToAdd": "world"
          }
        },
        {
          "path": "/custom-modules/step-processors/addPermissions.sjs",
          "when": "beforeContentPersisted"
        }
      ]
    },
    "2": {
      "name": "missingProcessorModule",
      "stepDefinitionName": "echoStep",
      "stepDefinitionType": "CUSTOM",
      "options": {
        "sourceQuery": "cts.collectionQuery('customer-input')",
        "permissions": "data-hub-common,read,data-hub-common,update"
      },
      "processors": [
        {
          "path": "/missing/module.sjs",
          "when": "beforeContentPersisted"
        }
      ]
    },
    "3": {
      "name": "missingWhen",
      "stepDefinitionName": "echoStep",
      "stepDefinitionType": "CUSTOM",
      "options": {
        "sourceQuery": "cts.collectionQuery('customer-input')",
        "permissions": "data-hub-common,read,data-hub-common,update"
      },
      "processors": [
        {
          "path": "/custom-modules/step-processors/addHeaders.sjs",
          "vars": {
            "headerValueToAdd": "world"
          }
        }
      ]
    },
    "4": {
      "name": "ingester",
      "stepDefinitionName": "default-ingestion",
      "stepDefinitionType": "INGESTION",
      "options": {
        "outputFormat": "json",
        "targetDatabase": "data-hub-STAGING"
      },
      "fileLocations": {
        "inputFilePath": "data/customers",
        "inputFileType": "json"
      },
      "processors": [
        {
          "path": "/custom-modules/step-processors/onIngest.sjs",
          "when": "beforeContentPersisted"
        }
      ]
    },
    "5": {
      "name": "processorModuleThrowsError",
      "stepDefinitionName": "echoStep",
      "stepDefinitionType": "CUSTOM",
      "options": {
        "sourceQuery": "cts.collectionQuery('customer-input')"
      },
      "processors": [
        {
          "path": "/custom-modules/step-processors/moduleThrowsError.sjs",
          "when": "beforeContentPersisted"
        }
      ]
    }
  }
}
