# These settings are used by the Data Hub Framework when
# communicating with MarkLogic.
# The values in this file are meant as project-wide settings.
# You can override these properties for a specific environment
# by creating a gradle-{environment}.properties file.
# For example, to create a properties file for your prod environment create a file
# named gradle-prod.properties.
#
# ....
mlDHFVersion=%%mlDHFVersion%%
mlHost=%%mlHost%%

# Your MarkLogic Username and Password
mlUsername=
mlPassword=

# If specified, the manage username/password combo is used with the ML Management REST API for managing application
# resources; this user must have the manage-admin and rest-admin roles.
#
# If these are not set, then mlUsername/mlPassword is used for managing application resources.
# mlManageUsername=
# mlManagePassword=
#
# To change the Manage Port
# mlManagePort=8002
#
# To use SSL on the Manage appserver (port 8002 by default)
# mlManageScheme=https
# mlManageSimpleSsl=true

# If specified, the admin username/password combo is used with the ML Management REST API for creating users and roles. This
# user must have the manage-admin or admin role. A good practice is to use your admin account here to create app-specific
# users and roles, which can then be used as mlManageUsername/mlManagePassword and mlUsername/mlPassword.
#
# These properties are also used for connecting to the admin application on port 8001 - e.g. for initializing ML and for
# waiting for ML to restart.
#
# If these properties are not set, then mlUsername/mlPassword will be used.
# mlAdminUsername=
# mlAdminPassword=
#
# To change the Admin Port
# mlAdminPort=8001
#
# To use SSL on the Admin appserver (port 8001 by default)
# mlAdminScheme=https
# mlAdminSimpleSsl=true


# If specified, these values can override where the DHF thinks
# MarkLogic default ports are at. You would only use this if you
# have changed the ports on which MarkLogic listens
#
# mlAppServicesPort=8000
#
# To use SSL on the AppServices appserver (port 8000 by default)
# mlAppServicesSimpleSsl=true


mlStagingAppserverName=%%mlStagingAppserverName%%
mlStagingPort="%%mlStagingPort%%"
mlStagingDbName=%%mlStagingDbName%%
mlStagingForestsPerHost=%%mlStagingForestsPerHost%%
mlStagingAuth=%%mlStagingAuth%%
# To enable SSL for staging
# mlStagingSimpleSsl=true

mlFinalAppserverName=%%mlFinalAppserverName%%
mlFinalPort="%%mlFinalPort%%"
mlFinalDbName=%%mlFinalDbName%%
mlFinalForestsPerHost=%%mlFinalForestsPerHost%%
mlFinalAuth=%%mlFinalAuth%%
# To enable SSL for final
# mlFinalSimpleSsl=true


mlJobAppserverName=%%mlJobAppserverName%%
mlJobPort="%%mlJobPort%%"
mlJobDbName=%%mlJobDbName%%
mlJobForestsPerHost=%%mlJobForestsPerHost%%
mlJobAuth=%%mlJobAuth%%
# To enable SSL for jobs
# mlJobSimpleSsl=true

mlStagingModulesDbName=%%mlStagingModulesDbName%%
mlStagingModulesForestsPerHost=%%mlStagingModulesForestsPerHost%%

mlStagingTriggersDbName=%%mlStagingTriggersDbName%%
mlStagingTriggersForestsPerHost=%%mlStagingTriggersForestsPerHost%%

mlStagingSchemasDbName=%%mlStagingSchemasDbName%%
mlStagingSchemasForestsPerHost=%%mlStagingSchemasForestsPerHost%%

mlFinalModulesDbName=%%mlFinalModulesDbName%%
mlFinalModulesForestsPerHost=%%mlFinalModulesForestsPerHost%%

mlFinalTriggersDbName=%%mlFinalTriggersDbName%%
mlFinalTriggersForestsPerHost=%%mlFinalTriggersForestsPerHost%%

mlFinalSchemasDbName=%%mlFinalSchemasDbName%%
mlFinalSchemasForestsPerHost=%%mlFinalSchemasForestsPerHost%%

# You can override this to specify an alternate folder for your
# custom forest info. Defaults to user-config/forests/
# mlCustomForestPath=%%mlCustomForestPath%%

# The name of the Role to create for Hub Access
mlHubUserRole=%%mlHubUserRole%%
mlHubUserName=%%mlHubUserName%%
# this password is autogenerated for you via the 'gradle hubInit' task
mlHubUserPassword=%%mlHubUserPassword%%

# The name of the role to create for hub deployment/development
mlHubAdminRole=%%mlHubAdminRole%%
mlHubAdminUserName=%%mlHubAdminUserName%%
mlHubAdminUserPassword=%%mlHubAdminUserPassword%%

# If you are working with a load balancer you can
# specify the hostname(s) of the load balancer here separated by commas
# see: https://docs.marklogic.com/guide/java/data-movement#id_26583
# for more info about what's happening under the hood
# mlLoadBalancerHosts=your-load-balancer-hostnames,separated,by-commas

# Default module permissions which allow data-hub-role to execute flows
mlStagingModulePermissions=rest-reader,read,rest-writer,insert,rest-writer,update,rest-extension-user,execute,%%mlHubUserRole%%,read,%%mlHubUserRole%%,execute
mlFinalModulePermissions=rest-reader,read,rest-writer,insert,rest-writer,update,rest-extension-user,execute,%%mlHubUserRole%%,read,%%mlHubUserRole%%,execute
