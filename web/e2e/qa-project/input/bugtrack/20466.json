{"id":20466, "kind":"Bug", "createdAt":"2012-02-29T14:42:21.45903-08:00", "status":"Closed", "title":"Seeing 'Alarm/Abort in thread' message in Errorlogs in regression occasionally", "category":"xdmp", "severity":"Major", "priority":{"level":"2", "title":"Not required for product release"}, "submittedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"We have been seeing these messages for quite sometime in regression, but they are very inconsistent in the sense that they show up while running different tests on different days and most of the times we see this after an SVC-EXTIME: Time limit exceeded\r\n\r\nPlease note that so far this Abort/Alarm has not show up while running the actual test cases, but only while the test is cleaning up the databases forests and assignments.\r\n\r\nPasting part of the Error logs from today's regression around the time when this happened.\r\n\r\n2012-02-29 02:57:41.430 Debug: Recovered redo of 1 record at {fsn=0, off=512, sk=5321754663185226065} on forest Triggers, lmfsn=18446744073709551615\r\n2012-02-29 02:57:41.430 Debug: Found FSN 0 in journal /var/opt/MarkLogic/Forests/Triggers/Journals/Journal1 with fsns 0..0\r\n2012-02-29 02:57:41.430 Debug: Opening journal /var/opt/MarkLogic/Forests/Triggers/Journals/Journal1 0..0 at {fsn=0, off=512, sk=5321754663185226065}\r\n2012-02-29 02:57:41.430 Debug: Recovering undo on forest Triggers\r\n2012-02-29 02:57:41.430 Debug: Recovered undo at endTimestamp 0 on forest Triggers\r\n2012-02-29 02:57:41.431 Debug: OnDiskStand /var/opt/MarkLogic/Forests/Fab/00000000, disk=15MB, memory=16MB\r\n2012-02-29 02:57:41.432 Debug: Recovering redo from {fsn=38, off=56728, sk=2529311536737856341} on forest Fab\r\n2012-02-29 02:57:41.432 Info: Mounted forest Last-Login locally on /var/opt/MarkLogic/Forests/Last-Login\r\n2012-02-29 02:57:41.432 Debug: Found journal /var/opt/MarkLogic/Forests/Fab/Journals/Journal1 with fsns 0..38\r\n2012-02-29 02:57:41.432 Debug: Recovered redo of 0 records at {fsn=38, off=56728, sk=2529311536737856341} on forest Fab, lmfsn=18446744073709551615\r\n2012-02-29 02:57:41.432 Debug: Found FSN 38 in journal /var/opt/MarkLogic/Forests/Fab/Journals/Journal1 with fsns 0..38\r\n2012-02-29 02:57:41.432 Debug: Recovering redo from {fsn=-1, off=0, sk=0} on forest Last-Login\r\n2012-02-29 02:57:41.432 Debug: Opening journal /var/opt/MarkLogic/Forests/Fab/Journals/Journal1 0..38 at {fsn=38, off=56728, sk=2529311536737856341}\r\n2012-02-29 02:57:41.432 Debug: Found journal /var/opt/MarkLogic/Forests/Last-Login/Journals/Journal1 with fsns 0..0\r\n2012-02-29 02:57:41.432 Debug: Recovered redo of 1 record at {fsn=0, off=512, sk=1167838521407776328} on forest Last-Login, lmfsn=18446744073709551615\r\n2012-02-29 02:57:41.432 Debug: Found FSN 0 in journal /var/opt/MarkLogic/Forests/Last-Login/Journals/Journal1 with fsns 0..0\r\n2012-02-29 02:57:41.432 Debug: Opening journal /var/opt/MarkLogic/Forests/Last-Login/Journals/Journal1 0..0 at {fsn=0, off=512, sk=1167838521407776328}\r\n2012-02-29 02:57:41.433 Debug: Recovering undo on forest Fab\r\n2012-02-29 02:57:41.433 Debug: Recovered undo at endTimestamp 13305056913059980 minQueryTimestamp 0 on forest Fab\r\n2012-02-29 02:57:41.433 Debug: Recovering undo on forest Last-Login\r\n2012-02-29 02:57:41.433 Debug: Recovered undo at endTimestamp 0 on forest Last-Login\r\n2012-02-29 02:57:41.435 Info: Mounted forest Schemas locally on /var/opt/MarkLogic/Forests/Schemas\r\n2012-02-29 02:57:41.436 Debug: OnDiskStand /var/opt/MarkLogic/Forests/Schemas/00000008, disk=0MB, memory=1MB\r\n2012-02-29 02:57:41.436 Debug: Recovering redo from {fsn=41, off=54172, sk=14248160220276870052} on forest Schemas\r\n2012-02-29 02:57:41.436 Debug: Found journal /var/opt/MarkLogic/Forests/Schemas/Journals/Journal1 with fsns 0..41\r\n2012-02-29 02:57:41.436 Debug: Recovered redo of 0 records at {fsn=41, off=54172, sk=14248160220276870052} on forest Schemas, lmfsn=18446744073709551615\r\n2012-02-29 02:57:41.436 Debug: Found FSN 41 in journal /var/opt/MarkLogic/Forests/Schemas/Journals/Journal1 with fsns 0..41\r\n2012-02-29 02:57:41.436 Debug: Opening journal /var/opt/MarkLogic/Forests/Schemas/Journals/Journal1 0..41 at {fsn=41, off=54172, sk=14248160220276870052}\r\n2012-02-29 02:57:41.437 Debug: Recovering undo on forest Schemas\r\n2012-02-29 02:57:41.437 Debug: Recovered undo at endTimestamp 13305081998933930 minQueryTimestamp 13305082156585521 on forest Schemas\r\n2012-02-29 02:57:41.437 Info: Mounted forest App-Services locally on /var/opt/MarkLogic/Forests/App-Services\r\n2012-02-29 02:57:41.438 Debug: Detecting indexes for database Security\r\n2012-02-29 02:57:41.438 Debug: OnDiskStand /var/opt/MarkLogic/Forests/App-Services/00000002, disk=0MB, memory=1MB\r\n2012-02-29 02:57:41.438 Debug: Recovering redo from {fsn=284, off=382528, sk=6317253016226432063} on forest App-Services\r\n2012-02-29 02:57:41.439 Debug: Found journal /var/opt/MarkLogic/Forests/App-Services/Journals/Journal1 with fsns 0..284\r\n2012-02-29 02:57:41.439 Debug: Recovered redo of 0 records at {fsn=284, off=382528, sk=6317253016226432063} on forest App-Services, lmfsn=18446744073709551615\r\n2012-02-29 02:57:41.439 Debug: Found FSN 284 in journal /var/opt/MarkLogic/Forests/App-Services/Journals/Journal1 with fsns 0..284\r\n2012-02-29 02:57:41.439 Debug: Opening journal /var/opt/MarkLogic/Forests/App-Services/Journals/Journal1 0..284 at {fsn=284, off=382528, sk=6317253016226432063}\r\n2012-02-29 02:57:41.445 Debug: Recovering undo on forest App-Services\r\n2012-02-29 02:57:41.445 Debug: Recovered undo at endTimestamp 13305057382527030 minQueryTimestamp 13305057499092610 on forest App-Services\r\n2012-02-29 02:57:41.446 Debug: Detected indexes for database Security: sln\r\n2012-02-29 02:57:41.446 Debug: Detecting compatibility for database Security\r\n2012-02-29 02:57:41.457 Debug: Detected compatibility for database Security\r\n2012-02-29 02:57:41.457 Debug: Detecting indexes for database Security\r\n2012-02-29 02:57:41.457 Debug: Detected indexes for database Security: sln\r\n2012-02-29 02:57:41.457 Debug: Detecting compatibility for database Security\r\n2012-02-29 02:57:41.457 Debug: Detected compatibility for database Security\r\n2012-02-29 02:57:41.457 Debug: Detecting indexes for database Security\r\n2012-02-29 02:57:41.457 Debug: Detected indexes for database Security: sln\r\n2012-02-29 02:57:41.457 Debug: Detecting compatibility for database Security\r\n2012-02-29 02:57:41.457 Debug: Detected compatibility for database Security\r\n2012-02-29 02:57:41.502 Debug: Detecting indexes for database Documents\r\n\r\nAbort in thread 140530616309568\r\n\r\n2012-02-29 03:27:42.351 Notice: QAxdbcServer: SVC-EXTIME: Time limit exceeded\r\n2012-02-29 03:27:42.351 Notice: QAxdbcServer:  [0.9-ml]\r\n\r\nAlarm in thread 140530616309568\r\n\r\n2012-02-29 03:28:12.330 Notice: Starting MarkLogic Server 5.0-20120229 x86_64 in /opt/MarkLogic with data in /var/opt/MarkLogic\r\n2012-02-29 03:28:12.336 Info: Host rh6-intel64-43-test-1.marklogic.com running Linux 2.6.32-71.el6.x86_64 (Red Hat Enterprise Linux Server release 6.0 (Santiago))\r\n2012-02-29 03:28:42.354 Critical: HostManager::updateConfig: SVC-SOCBIND: Socket bind error: bind 0.0.0.0:7999: Address already in use\r\n2012-02-29 03:28:43.331 Notice: Starting MarkLogic Server 5.0-20120229 x86_64 in /opt/MarkLogic with data in /var/opt/MarkLogic\r\n2012-02-29 03:28:43.337 Info: Host rh6-intel64-43-test-1.marklogic.com running Linux 2.6.32-71.el6.x86_64 (Red Hat Enterprise Linux Server release 6.0 (Santiago))\r\n2012-02-29 03:28:43.343 Debug: Setting trace events for group 14043086795696170771\r\n2012-02-29 03:28:43.343 Debug: Trace events activated flag is false\r\n2012-02-29 03:28:43.343 Debug: Setting audit configuration for group 14043086795696170771\r\n\r\nGiven the inconsistency of the issue and the fact that it does not come from any specific feature in regression, I'm putting it in 5.0-4.", "samplequery":"", "sampledata":"", "version":"6.0-1", "tofixin":"6.0-3", "fixedin":"6.0-3", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, {"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, {"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, {"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}, {"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, {"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, {"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":16375, "support":{"headline":"", "supportDescription":"", "publishStatus":"Never Publish", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["xdmp", "msrinivasan"], "changeHistory":[{"time":"2012-02-29T14:42:21.45903-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "to":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-10-08T09:54:10.931649-07:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "to":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-10-08T11:38:28.365231-07:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"assignTo":{"from":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "to":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-06T14:26:34.975305-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"does it happen again?"}, {"time":"2012-12-06T14:26:34.975305-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "to":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-12T10:41:05.112945-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"This does seem to be happening even now inconsistently:\r\n\r\n[msrinivasan@rh6-intel64-43-test-1 b5_0]$ find ./logs.*/reg-results -name ErrorLog.txt | xargs grep 'Alarm in thread' * | more\r\n./logs.20120616.0/reg-results/ErrorLog.txt:Alarm in thread 140624771790656\r\n./logs.20120625.0/reg-results/ErrorLog.txt:Alarm in thread 139860130047808\r\n./logs.20120627.0/reg-results/ErrorLog.txt:Alarm in thread 140711927056192\r\n./logs.20120628.0/reg-results/ErrorLog.txt:Alarm in thread 140603405952832\r\n./logs.20120630.0/reg-results/ErrorLog.txt:Alarm in thread 140456585611072\r\n./logs.20120707.0/reg-results/ErrorLog.txt:Alarm in thread 139645352777536\r\n./logs.20120708.0/reg-results/ErrorLog.txt:Alarm in thread 140007882577728\r\n./logs.20120708.0/reg-results/ErrorLog.txt:Alarm in thread 140569239516992\r\n./logs.20120709.0/reg-results/ErrorLog.txt:Alarm in thread 140049841030976\r\n./logs.20120710.0/reg-results/ErrorLog.txt:Alarm in thread 140400355817280\r\n./logs.20120715.0/reg-results/ErrorLog.txt:Alarm in thread 139905929369408\r\n./logs.20120718.0/reg-results/ErrorLog.txt:Alarm in thread 140141346363200\r\n./logs.20120720.0/reg-results/ErrorLog.txt:Alarm in thread 140471992317760\r\n./logs.20120723.0/reg-results/ErrorLog.txt:Alarm in thread 140484069783360\r\n./logs.20120725.1/reg-results/ErrorLog.txt:Alarm in thread 139661295793984\r\n./logs.20120728.0/reg-results/ErrorLog.txt:Alarm in thread 140044459059008\r\n./logs.20120729.0/reg-results/ErrorLog.txt:Alarm in thread 140217596651328\r\n./logs.20120801.0/reg-results/ErrorLog.txt:Alarm in thread 139904757700416\r\n./logs.20120809.0/reg-results/ErrorLog.txt:Alarm in thread 140093784917824\r\n./logs.20120809.0/reg-results/ErrorLog.txt:Alarm in thread 140013624293184\r\n./logs.20120817.0/reg-results/ErrorLog.txt:Alarm in thread 140083820066624\r\n./logs.20120823.0/reg-results/ErrorLog.txt:Alarm in thread 140256111716160\r\n./logs.20120827.0/reg-results/ErrorLog.txt:Alarm in thread 140651248629568\r\n./logs.20120827.0/reg-results/ErrorLog.txt:Alarm in thread 140479067875136\r\n./logs.20120901.0/reg-results/ErrorLog.txt:Alarm in thread 139671835031360\r\n./logs.20120910.0/reg-results/ErrorLog.txt:Alarm in thread 139978874328896\r\n./logs.20120911.0/reg-results/ErrorLog.txt:Alarm in thread 140268949120832\r\n./logs.20120913.0/reg-results/ErrorLog.txt:Alarm in thread 140561238251328\r\n./logs.20120920.0/reg-results/ErrorLog.txt:Alarm in thread 139804185163584\r\n./logs.20120927.1/reg-results/ErrorLog.txt:Alarm in thread 140510464059200\r\n./logs.20121005.0/reg-results/ErrorLog.txt:Alarm in thread 140479463696192\r\n./logs.20121007.0/reg-results/ErrorLog.txt:Alarm in thread 140356097996608\r\n./logs.20121010.0/reg-results/ErrorLog.txt:Alarm in thread 140267544721216\r\n./logs.20121011.0/reg-results/ErrorLog.txt:Alarm in thread 140599593584448\r\n./logs.20121013.0/reg-results/ErrorLog.txt:Alarm in thread 140369935329088\r\n./logs.20121015.0/reg-results/ErrorLog.txt:Alarm in thread 140572124661568\r\n./logs.20121029.0/reg-results/ErrorLog.txt:Alarm in thread 139963708675904\r\n./logs.20121102.0/reg-results/ErrorLog.txt:Alarm in thread 140457765394240\r\n./logs.20121114.0/reg-results/ErrorLog.txt:Alarm in thread 139822827865920\r\n./logs.20121114.0/reg-results/ErrorLog.txt:Alarm in thread 140253792720704\r\n./logs.20121117.0/reg-results/ErrorLog.txt:Alarm in thread 139929580521280\r\n./logs.20121126.0/reg-results/ErrorLog.txt:Alarm in thread 140374026516288\r\n./logs.20121129.0/reg-results/ErrorLog.txt:Alarm in thread 139658379007808\r\n./logs.20121204.0/reg-results/ErrorLog.txt:Alarm in thread 140433818060608\r\n/logs.20121204.0/reg-results/ErrorLog.txt:Alarm in thread 140381498853184\r\n./logs.20121205.0/reg-results/ErrorLog.txt:Alarm in thread 140076897347392\r\n./logs.20121206.0/reg-results/ErrorLog.txt:Alarm in thread 140313686189888"}, {"time":"2012-12-12T10:49:55.292668-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Please note that the Alarm/Abort does not happen in the same test everyday."}, {"time":"2012-12-12T11:27:13.842579-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Interestingly I don't see any Alarm/Abort in thread in 6.0 regression."}, {"time":"2013-01-07T13:27:07.491274-08:00", "updatedBy":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "change":{"assignTo":{"from":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-10T15:26:22.229951-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Haitao,\r\nwe are still seeing this issue intermittently in flex-rep-binary-same-uri-diff-content.xml just in 5.0 but we haven't seen this in 6.0. I am pasting the part of the ErrorLog where this message is seen:\r\n\r\n2013-01-10 02:32:53.721 Debug: RuleBasedCollation http://marklogic.com/collation/\r\n2013-01-10 02:32:53.733 Debug: Detecting indexes for database Security\r\n2013-01-10 02:32:53.735 Debug: Detected indexes for database Security: sln\r\n2013-01-10 02:32:53.735 Debug: Detecting compatibility for database Security\r\n2013-01-10 02:32:53.740 Debug: Detected compatibility for database Security\r\n2013-01-10 02:32:53.778 Debug: Detecting indexes for database Documents\r\nAbort in thread 140470129248064\r\n2013-01-10 03:03:35.405 Notice: QAxdbcServer: SVC-EXTIME: Time limit exceeded\r\n2013-01-10 03:03:35.405 Notice: QAxdbcServer:  [0.9-ml]\r\nAlarm in thread 140470129248064\r\n2013-01-10 03:04:05.407 Notice: Starting MarkLogic Server 5.0-20130110 x86_64 in /opt/MarkLogic with data in /var/opt/MarkLogic\r\n2013-01-10 03:04:05.420 Info: Host rh6-intel64-43-test-1.marklogic.com running Linux 2.6.32-71.el6.x86_64 (Red Hat Enterprise Linux Server release 6.0 (Santiago))\r\n2013-01-10 03:04:35.439 Critical: HostManager::updateConfig: SVC-SOCBIND: Socket bind error: bind 0.0.0.0:7999: Address already in use\r\n2013-01-10 03:04:36.419 Notice: Starting MarkLogic Server 5.0-20130110 x86_64 in /opt/MarkLogic with data in /var/opt/MarkLogic\r\n2013-01-10 03:04:36.426 Info: Host rh6-intel64-43-test-1.marklogic.com running Linux 2.6.32-71.el6.x86_64 (Red Hat Enterprise Linux Server release 6.0 (Santiago))\r\n2013-01-10 03:04:36.433 Debug: Setting trace events for group 1554681503826602021\r\n\r\nI am wondering if the previous test (which has passed) did not completely re-assign QAxdbcServer\r\n"}, {"time":"2013-01-10T15:26:22.229951-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "to":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-10T15:30:43.023121-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Does the issue happen if you run only this test case (flex-rep-binary-same-uri-diff-content.xml)?"}, {"time":"2013-01-10T15:31:21.503323-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-14T16:45:10.174383-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Haitao helped me investigate this issue and we found that this 'Alarm/Abort in thread' message is the same which happens when there is no activity for 1/2 hour and the harness calls a 'sigabrt', gets the stack trace and restarts the server. There is no test issue here. This is the same issue as in bug20260.  I am pasting the pstack here and will close the bug 20260.\r\n\r\n2013-01-11 01:51:05.285 Debug: Recovering redo from {fsn=14, off=12668, sk=18357895756914757118} on forest dls3\r\n2013-01-11 01:51:05.285 Debug: Found journal /var/opt/MarkLogic/Forests/dls3/Journals/Journal1 with fsns 0..14\r\n2013-01-11 01:51:05.285 Debug: Recovered redo of 0 records at {fsn=14, off=12668, sk=18357895756914757118} on forest dls3, lmfsn=18446744073709551615\r\n2013-01-11 01:51:05.285 Debug: Found FSN 14 in journal /var/opt/MarkLogic/Forests/dls3/Journals/Journal1 with fsns 0..14\r\n2013-01-11 01:51:05.285 Debug: Opening journal /var/opt/MarkLogic/Forests/dls3/Journals/Journal1 0..14 at {fsn=14, off=12668, sk=18357895756914757118}\r\n2013-01-11 01:51:05.289 Debug: Recovering undo on forest dls3\r\n2013-01-11 01:51:05.289 Debug: Recovered undo at endTimestamp 13578965385409300 minQueryTimestamp 0 on forest dls3\r\nAbort in thread 139936389531456\r\nThread 35 (Thread 0x7f43953ff710 (LWP 18795)):\r\n#0  0x0000003279206ea0 in pthread_create@@GLIBC_2.2.5 () from /lib64/libpthread.so.0\r\n#1  0x0000000002ab1bf1 in svc::Thread::_start() ()\r\n#2  0x0000000002ab1dbb in svc::StarterThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 34 (Thread 0x7f43953e0710 (LWP 18796)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x00000000028d7ab3 in xdmp::XDQPServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 33 (Thread 0x7f43953c1710 (LWP 18797)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x000000000196973a in xdmp::ClusterManager::startIdentifyForeignForestsTask() ()\r\n#6  0x000000000198072f in xdmp::ClusterManager::backgroundCommon(long, long) ()\r\n#7  0x0000000001980ece in xdmp::ClusterManager::clusterThread() ()\r\n#8  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#9  0x0000000002ab2f89 in runThread ()\r\n#10 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#11 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 32 (Thread 0x7f457ac9e710 (LWP 18798)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x0000000002224564 in xdmp::RandomReader::read(long, unsigned int, bool, svc::Handle<xdmp::RandomReadResultFuture>&) ()\r\n#6  0x0000000001ec6fb6 in xdmp::Indexed64FileRandomReadResultIteratorFutureImpl::Indexed64FileRandomReadResultIteratorFutureImpl(svc::Handle<xdmp::Indexed64FileRandomReaderRep> const&, unsigned long, long, unsigned int, bool) ()\r\n#7  0x0000000001ece0be in xdmp::Indexed64FileRandomReader::read(unsigned long, unsigned int, bool, svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture>&) ()\r\n#8  0x0000000001fc4bdf in xdmp::CacheListStorage::load(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#9  0x0000000001fc5f95 in xdmp::CacheListStorage::eval(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, xdmp::Meters&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#10 0x00000000025f87e0 in xdmp::OnDiskStand::eval(xdmp::QueryKind, unsigned long, unsigned long, xdmp::ScoreKind, int, svc::Handle<svc::ThreadControl> const&, svc::Handle<xdmp::Moment> const&, bool, xdmp::Meters&, svc::Handle<xdmp::QueryTracer> const&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#11 0x00000000021c38e3 in xdmp::TermQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#12 0x00000000021c3066 in xdmp::AndNotTwoQueries::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#13 0x0000000001fab10d in xdmp::CacheListStorage::load(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, unsigned int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#14 0x0000000001fcaee9 in xdmp::CacheListStorage::eval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#15 0x00000000025f843c in xdmp::OnDiskStand::registeredEval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, float, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#16 0x00000000021b2a41 in xdmp::RegisteredQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#17 0x0000000001d2a70a in xdmp::ForestQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#18 0x0000000001a8e907 in xdmp::DatabaseExistsFuture::DatabaseExistsFuture(svc::Handle<xdmp::DatabaseQueryPath> const&, svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#19 0x0000000001a8eff2 in xdmp::DatabaseQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#20 0x00000000021d8418 in xdmp::ConcurrentExistsTask::run() ()\r\n#21 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#22 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#23 0x0000000002ab2f89 in runThread ()\r\n#24 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#25 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 31 (Thread 0x7f43943ff710 (LWP 18799)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 30 (Thread 0x7f457a5f2710 (LWP 18800)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x0000000002224564 in xdmp::RandomReader::read(long, unsigned int, bool, svc::Handle<xdmp::RandomReadResultFuture>&) ()\r\n#6  0x0000000001ec6fb6 in xdmp::Indexed64FileRandomReadResultIteratorFutureImpl::Indexed64FileRandomReadResultIteratorFutureImpl(svc::Handle<xdmp::Indexed64FileRandomReaderRep> const&, unsigned long, long, unsigned int, bool) ()\r\n#7  0x0000000001ece0be in xdmp::Indexed64FileRandomReader::read(unsigned long, unsigned int, bool, svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture>&) ()\r\n#8  0x0000000001fc4bdf in xdmp::CacheListStorage::load(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#9  0x0000000001fc5f95 in xdmp::CacheListStorage::eval(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, xdmp::Meters&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#10 0x00000000025f87e0 in xdmp::OnDiskStand::eval(xdmp::QueryKind, unsigned long, unsigned long, xdmp::ScoreKind, int, svc::Handle<svc::ThreadControl> const&, svc::Handle<xdmp::Moment> const&, bool, xdmp::Meters&, svc::Handle<xdmp::QueryTracer> const&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#11 0x00000000021c38e3 in xdmp::TermQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#12 0x00000000021c3066 in xdmp::AndNotTwoQueries::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#13 0x0000000001fab10d in xdmp::CacheListStorage::load(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, unsigned int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#14 0x0000000001fcaee9 in xdmp::CacheListStorage::eval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#15 0x00000000025f843c in xdmp::OnDiskStand::registeredEval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, float, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#16 0x00000000021b2a41 in xdmp::RegisteredQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#17 0x0000000001d2a70a in xdmp::ForestQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#18 0x0000000001a8e907 in xdmp::DatabaseExistsFuture::DatabaseExistsFuture(svc::Handle<xdmp::DatabaseQueryPath> const&, svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#19 0x0000000001a8eff2 in xdmp::DatabaseQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#20 0x00000000021d8418 in xdmp::ConcurrentExistsTask::run() ()\r\n#21 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#22 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#23 0x0000000002ab2f89 in runThread ()\r\n#24 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#25 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 29 (Thread 0x7f4394000710 (LWP 18801)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 28 (Thread 0x7f457a573710 (LWP 18802)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x0000000002224564 in xdmp::RandomReader::read(long, unsigned int, bool, svc::Handle<xdmp::RandomReadResultFuture>&) ()\r\n#6  0x0000000001ec6fb6 in xdmp::Indexed64FileRandomReadResultIteratorFutureImpl::Indexed64FileRandomReadResultIteratorFutureImpl(svc::Handle<xdmp::Indexed64FileRandomReaderRep> const&, unsigned long, long, unsigned int, bool) ()\r\n#7  0x0000000001ece0be in xdmp::Indexed64FileRandomReader::read(unsigned long, unsigned int, bool, svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture>&) ()\r\n#8  0x0000000001fc4bdf in xdmp::CacheListStorage::load(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#9  0x0000000001fc5f95 in xdmp::CacheListStorage::eval(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, xdmp::Meters&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#10 0x00000000025f87e0 in xdmp::OnDiskStand::eval(xdmp::QueryKind, unsigned long, unsigned long, xdmp::ScoreKind, int, svc::Handle<svc::ThreadControl> const&, svc::Handle<xdmp::Moment> const&, bool, xdmp::Meters&, svc::Handle<xdmp::QueryTracer> const&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#11 0x00000000021c38e3 in xdmp::TermQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#12 0x00000000021c3066 in xdmp::AndNotTwoQueries::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#13 0x0000000001fab10d in xdmp::CacheListStorage::load(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, unsigned int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#14 0x0000000001fcaee9 in xdmp::CacheListStorage::eval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#15 0x00000000025f843c in xdmp::OnDiskStand::registeredEval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, float, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#16 0x00000000021b2a41 in xdmp::RegisteredQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#17 0x0000000001d2a70a in xdmp::ForestQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#18 0x0000000001a8e907 in xdmp::DatabaseExistsFuture::DatabaseExistsFuture(svc::Handle<xdmp::DatabaseQueryPath> const&, svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#19 0x0000000001a8eff2 in xdmp::DatabaseQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#20 0x00000000021d8418 in xdmp::ConcurrentExistsTask::run() ()\r\n#21 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#22 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#23 0x0000000002ab2f89 in runThread ()\r\n#24 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#25 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 27 (Thread 0x7f457ac1f710 (LWP 18803)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 26 (Thread 0x7f457a4f4710 (LWP 18804)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x0000000002224564 in xdmp::RandomReader::read(long, unsigned int, bool, svc::Handle<xdmp::RandomReadResultFuture>&) ()\r\n#6  0x0000000001ec6fb6 in xdmp::Indexed64FileRandomReadResultIteratorFutureImpl::Indexed64FileRandomReadResultIteratorFutureImpl(svc::Handle<xdmp::Indexed64FileRandomReaderRep> const&, unsigned long, long, unsigned int, bool) ()\r\n#7  0x0000000001ece0be in xdmp::Indexed64FileRandomReader::read(unsigned long, unsigned int, bool, svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture>&) ()\r\n#8  0x0000000001fc4bdf in xdmp::CacheListStorage::load(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#9  0x0000000001fc5f95 in xdmp::CacheListStorage::eval(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, xdmp::Meters&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#10 0x00000000025f87e0 in xdmp::OnDiskStand::eval(xdmp::QueryKind, unsigned long, unsigned long, xdmp::ScoreKind, int, svc::Handle<svc::ThreadControl> const&, svc::Handle<xdmp::Moment> const&, bool, xdmp::Meters&, svc::Handle<xdmp::QueryTracer> const&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#11 0x00000000021c38e3 in xdmp::TermQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#12 0x00000000021c3066 in xdmp::AndNotTwoQueries::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#13 0x0000000001fab10d in xdmp::CacheListStorage::load(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, unsigned int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#14 0x0000000001fcaee9 in xdmp::CacheListStorage::eval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#15 0x00000000025f843c in xdmp::OnDiskStand::registeredEval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, float, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#16 0x00000000021b2a41 in xdmp::RegisteredQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#17 0x0000000001d2a70a in xdmp::ForestQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#18 0x0000000001a8e907 in xdmp::DatabaseExistsFuture::DatabaseExistsFuture(svc::Handle<xdmp::DatabaseQueryPath> const&, svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#19 0x0000000001a8eff2 in xdmp::DatabaseQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#20 0x00000000021d8418 in xdmp::ConcurrentExistsTask::run() ()\r\n#21 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#22 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#23 0x0000000002ab2f89 in runThread ()\r\n#24 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#25 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 25 (Thread 0x7f43923ff710 (LWP 18805)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 24 (Thread 0x7f4395042710 (LWP 18806)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 23 (Thread 0x7f4392000710 (LWP 18807)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x0000000002224564 in xdmp::RandomReader::read(long, unsigned int, bool, svc::Handle<xdmp::RandomReadResultFuture>&) ()\r\n#6  0x0000000001ec6fb6 in xdmp::Indexed64FileRandomReadResultIteratorFutureImpl::Indexed64FileRandomReadResultIteratorFutureImpl(svc::Handle<xdmp::Indexed64FileRandomReaderRep> const&, unsigned long, long, unsigned int, bool) ()\r\n#7  0x0000000001ece0be in xdmp::Indexed64FileRandomReader::read(unsigned long, unsigned int, bool, svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture>&) ()\r\n#8  0x0000000001fc4bdf in xdmp::CacheListStorage::load(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#9  0x0000000001fc5f95 in xdmp::CacheListStorage::eval(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, xdmp::Meters&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#10 0x00000000025f87e0 in xdmp::OnDiskStand::eval(xdmp::QueryKind, unsigned long, unsigned long, xdmp::ScoreKind, int, svc::Handle<svc::ThreadControl> const&, svc::Handle<xdmp::Moment> const&, bool, xdmp::Meters&, svc::Handle<xdmp::QueryTracer> const&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#11 0x00000000021c38e3 in xdmp::TermQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#12 0x00000000021c3066 in xdmp::AndNotTwoQueries::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#13 0x0000000001fab10d in xdmp::CacheListStorage::load(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, unsigned int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#14 0x0000000001fcaee9 in xdmp::CacheListStorage::eval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#15 0x00000000025f843c in xdmp::OnDiskStand::registeredEval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, float, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#16 0x00000000021b2a41 in xdmp::RegisteredQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#17 0x0000000001d2a70a in xdmp::ForestQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#18 0x0000000001a8e907 in xdmp::DatabaseExistsFuture::DatabaseExistsFuture(svc::Handle<xdmp::DatabaseQueryPath> const&, svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#19 0x0000000001a8eff2 in xdmp::DatabaseQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#20 0x00000000021d8418 in xdmp::ConcurrentExistsTask::run() ()\r\n#21 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#22 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#23 0x0000000002ab2f89 in runThread ()\r\n#24 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#25 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 22 (Thread 0x7f43917ff710 (LWP 18808)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 21 (Thread 0x7f457a475710 (LWP 18809)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 20 (Thread 0x7f43903ff710 (LWP 18810)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 19 (Thread 0x7f438e200710 (LWP 18811)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 18 (Thread 0x7f438dbff710 (LWP 18812)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 17 (Thread 0x7f438e580710 (LWP 18813)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x0000000002224564 in xdmp::RandomReader::read(long, unsigned int, bool, svc::Handle<xdmp::RandomReadResultFuture>&) ()\r\n#6  0x0000000001ec6fb6 in xdmp::Indexed64FileRandomReadResultIteratorFutureImpl::Indexed64FileRandomReadResultIteratorFutureImpl(svc::Handle<xdmp::Indexed64FileRandomReaderRep> const&, unsigned long, long, unsigned int, bool) ()\r\n#7  0x0000000001ece0be in xdmp::Indexed64FileRandomReader::read(unsigned long, unsigned int, bool, svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture>&) ()\r\n#8  0x0000000001fc4bdf in xdmp::CacheListStorage::load(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#9  0x0000000001fc5f95 in xdmp::CacheListStorage::eval(xdmp::QueryKind, unsigned long, xdmp::Indexed64FileRandomReader&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, svc::Handle<svc::ThreadControl> const&, xdmp::OnDiskStand const*, svc::Handle<xdmp::Moment> const&, xdmp::ScoreKind, int, bool, svc::Handle<xdmp::QueryTracer> const&, xdmp::Meters&, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#10 0x00000000025f87e0 in xdmp::OnDiskStand::eval(xdmp::QueryKind, unsigned long, unsigned long, xdmp::ScoreKind, int, svc::Handle<svc::ThreadControl> const&, svc::Handle<xdmp::Moment> const&, bool, xdmp::Meters&, svc::Handle<xdmp::QueryTracer> const&, svc::Hash64Table<svc::Handle<xdmp::Indexed64FileRandomReadResultIteratorFuture> >*, unsigned int, unsigned int, bool, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#11 0x00000000021c38e3 in xdmp::TermQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#12 0x00000000021c3066 in xdmp::AndNotTwoQueries::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#13 0x0000000001fab10d in xdmp::CacheListStorage::load(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, unsigned int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#14 0x0000000001fcaee9 in xdmp::CacheListStorage::eval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, int, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#15 0x00000000025f843c in xdmp::OnDiskStand::registeredEval(unsigned long, xdmp::QueryEnv&, xdmp::Query const&, float, svc::Handle<xdmp::PostingIteratorFuture>&) ()\r\n#16 0x00000000021b2a41 in xdmp::RegisteredQuery::_eval(xdmp::QueryEnv&, svc::Handle<xdmp::PostingIteratorFuture>&) const ()\r\n#17 0x0000000001d2a70a in xdmp::ForestQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#18 0x0000000001a8e907 in xdmp::DatabaseExistsFuture::DatabaseExistsFuture(svc::Handle<xdmp::DatabaseQueryPath> const&, svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#19 0x0000000001a8eff2 in xdmp::DatabaseQueryPath::exists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#20 0x00000000021d8418 in xdmp::ConcurrentExistsTask::run() ()\r\n#21 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#22 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#23 0x0000000002ab2f89 in runThread ()\r\n#24 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#25 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 16 (Thread 0x7f438e061710 (LWP 18814)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 15 (Thread 0x7f438c3ff710 (LWP 18815)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 14 (Thread 0x7f457a446710 (LWP 18816)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 13 (Thread 0x7f438a7ff710 (LWP 18817)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 12 (Thread 0x7f4395023710 (LWP 18818)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 11 (Thread 0x7f438a200710 (LWP 18819)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab50f1 in svc::PooledThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 10 (Thread 0x7f4391c79710 (LWP 18820)):\r\n#0  0x000000327920e80d in accept () from /lib64/libpthread.so.0\r\n#1  0x0000000002aa1a26 in svc::Socket::accept(sockaddr_in&) ()\r\n#2  0x0000000001842f09 in xdmp::AppServerThread::run() ()\r\n#3  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4  0x0000000002ab2f89 in runThread ()\r\n#5  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 9 (Thread 0x7f4389e01710 (LWP 18821)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x00000000021f1bc9 in xdmp::QueryPath::concurrentExists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#6  0x00000000022191a5 in xdmp::QueryPath::fetchQueryPathConfig(svc::Handle<xdmp::PathConfig> const&) ()\r\n#7  0x0000000002140669 in xdmp::PathConfigCache::getQueryPathConfig(svc::Handle<xdmp::QueryPath> const&) const ()\r\n#8  0x0000000001a81bac in xdmp::DatabaseQueryPath::initConfig() ()\r\n#9  0x0000000001a30219 in xdmp::Database::queryPath(unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) const ()\r\n#10 0x00000000025643b7 in xdmp::Server::queryPath(unsigned long, unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) ()\r\n#11 0x0000000001745240 in xdmp::GlobalDynamicEnv::createAuxQueryPath(unsigned long, svc::Handle<xdmp::QueryPath>&) const ()\r\n#12 0x00000000017455d7 in xdmp::GlobalDynamicEnv::securityPath(xdmp::LocationInfo const&, xdmp::DynamicEnv const&, svc::Handle<xdmp::StaticEnv> const&) const ()\r\n#13 0x0000000001e90b2f in xdmp::HTTPServer::authenticate(xdmp::DynamicEnv&, svc::Handle<xdmp::StaticEnv> const&, xdmp::HTTPRequest&) const ()\r\n#14 0x0000000002893590 in xdmp::XDBCConnectionTask::handleConnection() ()\r\n#15 0x0000000002896eba in xdmp::XDBCConnectionTask::run() ()\r\n#16 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#17 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#18 0x0000000002ab2f89 in runThread ()\r\n#19 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#20 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 8 (Thread 0x7f4391c5a710 (LWP 18822)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x00000000028904b5 in xdmp::XDBCServerThread::run() ()\r\n#6  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#7  0x0000000002ab2f89 in runThread ()\r\n#8  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#9  0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 7 (Thread 0x7f4389902710 (LWP 18823)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000001bfb2e9 in xdmp::Forest::startReindexer(unsigned int) ()\r\n#5  0x0000000001a49215 in xdmp::DatabaseOnlineTask::run() ()\r\n#6  0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#7  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#8  0x0000000002ab2f89 in runThread ()\r\n#9  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#10 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 6 (Thread 0x7f4388fff710 (LWP 18824)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab1548 in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x00000000021f1bc9 in xdmp::QueryPath::concurrentExists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#6  0x0000000002211dcb in xdmp::QueryPath::fetchQueryPathConfig(svc::Handle<xdmp::PathConfig> const&) ()\r\n#7  0x0000000002140669 in xdmp::PathConfigCache::getQueryPathConfig(svc::Handle<xdmp::QueryPath> const&) const ()\r\n#8  0x0000000001a81bac in xdmp::DatabaseQueryPath::initConfig() ()\r\n#9  0x0000000001a30219 in xdmp::Database::queryPath(unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) const ()\r\n#10 0x00000000025643b7 in xdmp::Server::queryPath(unsigned long, unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) ()\r\n#11 0x0000000002564a8f in xdmp::Server::queryPath(std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) ()\r\n#12 0x000000000275a321 in xdmp::ETransaction::ETransaction(unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::TransactionMode, unsigned long, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, svc::Handle<xdmp::User> const&, bool) ()\r\n#13 0x0000000001a4a113 in xdmp::DatabaseOnlineTask::run() ()\r\n#14 0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#15 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#16 0x0000000002ab2f89 in runThread ()\r\n#17 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#18 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 5 (Thread 0x7f4388401710 (LWP 18825)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#5  0x00000000021f1bc9 in xdmp::QueryPath::concurrentExists(svc::Handle<xdmp::Query> const&, unsigned long, bool, std::vector<unsigned long, std::allocator<unsigned long> > const&, xdmp::DocKind) ()\r\n#6  0x0000000002211dcb in xdmp::QueryPath::fetchQueryPathConfig(svc::Handle<xdmp::PathConfig> const&) ()\r\n#7  0x0000000002140669 in xdmp::PathConfigCache::getQueryPathConfig(svc::Handle<xdmp::QueryPath> const&) const ()\r\n#8  0x0000000001a81bac in xdmp::DatabaseQueryPath::initConfig() ()\r\n#9  0x0000000001a30219 in xdmp::Database::queryPath(unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) const ()\r\n#10 0x0000000001c20883 in xdmp::ForestReindexerThread::init() ()\r\n#11 0x0000000001c31d3f in xdmp::ForestReindexerThread::run() ()\r\n#12 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#13 0x0000000002ab2f89 in runThread ()\r\n#14 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#15 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 4 (Thread 0x7f4388800710 (LWP 18826)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002140575 in xdmp::PathConfigCache::getQueryPathConfig(svc::Handle<xdmp::QueryPath> const&) const ()\r\n#3  0x0000000001a81bac in xdmp::DatabaseQueryPath::initConfig() ()\r\n#4  0x0000000001a30219 in xdmp::Database::queryPath(unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) const ()\r\n#5  0x0000000001c20883 in xdmp::ForestReindexerThread::init() ()\r\n#6  0x0000000001c31d3f in xdmp::ForestReindexerThread::run() ()\r\n#7  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#8  0x0000000002ab2f89 in runThread ()\r\n#9  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#10 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 3 (Thread 0x7f4387bff710 (LWP 18827)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#3  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4  0x0000000001bfb2e9 in xdmp::Forest::startReindexer(unsigned int) ()\r\n#5  0x0000000001a49215 in xdmp::DatabaseOnlineTask::run() ()\r\n#6  0x0000000002ab51e0 in svc::PooledThread::run() ()\r\n#7  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#8  0x0000000002ab2f89 in runThread ()\r\n#9  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#10 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 2 (Thread 0x7f4388c00710 (LWP 18828)):\r\n#0  0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2  0x0000000002140575 in xdmp::PathConfigCache::getQueryPathConfig(svc::Handle<xdmp::QueryPath> const&) const ()\r\n#3  0x0000000001a81bac in xdmp::DatabaseQueryPath::initConfig() ()\r\n#4  0x0000000001a30219 in xdmp::Database::queryPath(unsigned long, svc::Handle<xdmp::Moment> const&, svc::Handle<svc::ThreadControl> const&, unsigned int, svc::Handle<xdmp::Meters> const&, bool, bool, bool) const ()\r\n#5  0x0000000001c20883 in xdmp::ForestReindexerThread::init() ()\r\n#6  0x0000000001c31d3f in xdmp::ForestReindexerThread::run() ()\r\n#7  0x0000000002ab23c8 in svc::Thread::top() ()\r\n#8  0x0000000002ab2f89 in runThread ()\r\n#9  0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#10 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\nThread 1 (Thread 0x7f457aca0740 (LWP 18794)):\r\n#0  0x000000327920f05d in waitpid () from /lib64/libpthread.so.0\r\n#1  0x000000000254e089 in xdmp::pstack(char const*) ()\r\n#2  0x000000000254e20a in sigabrtHandler ()\r\n#3  <signal handler called>\r\n#4  0x000000327920d71e in sem_wait () from /lib64/libpthread.so.0\r\n#5  0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#6  0x0000000002ab150f in svc::StarterThread::start(svc::Thread*) ()\r\n#7  0x0000000002ab1d1b in svc::Thread::start() ()\r\n#8  0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n#9  0x0000000001a4650c in xdmp::Database::startOnlineTask() ()\r\n#10 0x0000000001a46e9c in xdmp::Database::background(long) ()\r\n#11 0x00000000025677c2 in xdmp::Server::background() ()\r\n#12 0x000000000257b475 in xdmp::run() ()\r\n#13 0x000000000257df6c in xdmp::Server::main(int, char const**) ()\r\n#14 0x0000003278a1ec5d in __libc_start_main () from /lib64/libc.so.6\r\n#15 0x00000000009a8ef9 in _start ()\r\n2013-01-11 02:21:41.440 Notice: Starting MarkLogic Server 5.0-20130111 x86_64 in /opt/MarkLogic with data in /var/opt/MarkLogic\r\n2013-01-11 02:21:41.447 Info: Host rh6-intel64-43-test-1.marklogic.com running Linux 2.6.32-71.el6.x86_64 (Red Hat Enterprise Linux Server release 6.0 (Santiago))\r\n2013-01-11 02:21:41.454 Debug: Setting trace events for group 7127581401821757010\r\n2013-01-11 02:21:41.454 Debug: Trace events activated flag is false\r\n2013-01-11 02:21:41.454 Debug: Setting audit configuration for group 7127581401821757010\r\n2013-01-11 02:21:41.454 Debug: Audit enabled flag is false\r\n2013-01-11 02:21:41.455 Config: Loading /opt/MarkLogic/Config/languages.xml\r\n2013-01-11 02:21:41.458 Config: Loading /opt/MarkLogic/Config/calendars.xml\r\n2013-01-11 02:21:41.458 Config: Loading /opt/MarkLogic/Config/countries.xml\r\n2013-01-11 02:21:41.466 Info: Loaded Basis entity extraction\r\n\r\n"}, {"time":"2013-01-14T16:45:10.174383-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "to":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-14T21:45:36.563305-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"From what I see in the stack, we have one thread trying to create a pthread.\r\n\r\nThread 35 (Thread 0x7f43953ff710 (LWP 18795)):\r\n#0 0x0000003279206ea0 in pthread_create@@GLIBC_2.2.5 () from /lib64/libpthread.so.0\r\n#1 0x0000000002ab1bf1 in svc::Thread::_start() ()\r\n#2 0x0000000002ab1dbb in svc::StarterThread::run() ()\r\n#3 0x0000000002ab23c8 in svc::Thread::top() ()\r\n#4 0x0000000002ab2f89 in runThread ()\r\n#5 0x00000032792077e1 in start_thread () from /lib64/libpthread.so.0\r\n#6 0x0000003278ae153d in clone () from /lib64/libc.so.6\r\n\r\nand multiple other threads trying to start new tasks. For example:\r\n\r\nThread 6 (Thread 0x7f4388fff710 (LWP 18824)):\r\n#0 0x000000327920d720 in sem_wait () from /lib64/libpthread.so.0\r\n#1 0x0000000002a9ad98 in svc::Semaphore::wait(bool) const ()\r\n#2 0x0000000002ab1548 in svc::StarterThread::start(svc::Thread*) ()\r\n#3 0x0000000002ab1d1b in svc::Thread::start() ()\r\n#4 0x0000000002ab41de in svc::ThreadPoolImpl::run(svc::Handle<svc::PoolTask> const&, bool) ()\r\n\r\nLooking at Thread::_start(), there is a pthread creation loop:\r\n\r\n  for (;;) {\r\n    if (pthread_create(&thread,&attr,runThread,this)==0) break;\r\n    if (errno==0) continue;\r\n    if (errno==EINTR) { errno=0; continue; }\r\n    int oerrno = errno;\r\n    pthread_attr_destroy(&attr);\r\n    decrementRefCount();\r\n    errno = oerrno;\r\n    error(\"SVC-THRCREAT\", \"pthread_create\");\r\n  }\r\n\r\nLooking at the pthread_create() man page, it says the error number is returned and makes no mention of errno. The example code assigns the return value to errno before calling perror().\r\n"}, {"time":"2013-01-14T21:47:20.38309-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"127785", "paths":["xdmp/branches/b5_0/src/services/Thread.cpp"], "affectedBugs":[]}, "comment":"bug:16375 Use return code from pthread_create() as error code rather than errno."}, {"time":"2013-01-14T21:50:43.419965-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"127786", "paths":["xdmp/branches/b6_0/src/services/Thread.cpp"], "affectedBugs":[]}, "comment":"bug:16375 Use return code from pthread_create() as error code rather than errno."}, {"time":"2013-01-14T21:52:09.106679-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"127787", "paths":["xdmp/trunk/src/services/Thread.cpp"], "affectedBugs":[]}, "comment":"bug:16375 Use return code from pthread_create() as error code rather than errno."}, {"time":"2013-01-14T21:54:20.543703-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "to":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-14T21:54:20.543703-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"assignTo":{"from":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "to":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-14T21:54:20.543703-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-03-26T13:22:37.48082-07:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"I do not  see any 'Abort in thread' messages after 2012-11-29 build on 6.0. Hence moving to 'ship'."}], "updatedAt":"2013-03-26T13:22:37.48082-07:00", "fixedAt":"2013-01-14T21:54:20.543703-08:00", "fixedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "shippedAt":"2013-03-26T13:22:37.48082-07:00", "shippedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "renderDescriptionAs":"normal"}