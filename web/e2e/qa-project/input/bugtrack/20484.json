{"id":20484, "kind":"Bug", "createdAt":"2013-01-16T15:43:47.345406-08:00", "status":"Closed", "title":"Diff in reverse_query2.xml starting 01/03/2013 in 5.0", "category":"xdmp", "severity":"Major", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"MarkLogic 5.0-20130103\r\n\r\nQuery: \r\nxquery version \"1.0-ml\";\r\ndeclare boundary-space preserve;\r\nimport module namespace ridx=\"http://marklogic.com/rev-idx\" at \"rev-idx.xqy\";\r\n\r\nlet $docs := for $doc in (/test)\r\n             order by base-uri($doc) collation \"http://marklogic.com/collation//MO\"\r\n             return $doc\r\nfor $doc in $docs[1 to 10]\r\nreturn ridx:validate-reverse-query-results($doc, fn:false() )\r\n        \r\nExpected result: Empty sequence\r\nObserved result:\r\n\r\n<result count=\"1544\" doc=\"/docs/dir1/doc1.xml\" estimate=\"1544\" expected-count=\"1614\" expected-estimate=\"1614\"><m-f-a-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-q><m-f-a-u-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-u-q></result><result count=\"1500\" doc=\"/docs/dir1/doc2.xml\" estimate=\"1500\" expected-count=\"1570\" expected-estimate=\"1570\"><m-f-a-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-q><m-f-a-u-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-u-q></result><result count=\"828\" doc=\"/docs/dir1/doc3.xml\" estimate=\"828\" expected-count=\"868\" expected-estimate=\"868\"><m-f-a-q>Too many to display(40). Displaying first 10: n-q2-en-stemmed-diacritic-insensitive-ordered-d0 n-q2-en-stemmed-diacritic-insensitive-ordered-d1 n-q2-en-stemmed-diacritic-insensitive-ordered-d2 n-q2-en-stemmed-diacritic-insensitive-ordered-d3 n-q2-en-stemmed-diacritic-insensitive-ordered-d4 n-q2-en-stemmed-diacritic-insensitive-unordered-d0 n-q2-en-stemmed-diacritic-insensitive-unordered-d1 n-q2-en-stemmed-diacritic-insensitive-unordered-d2 n-q2-en-stemmed-diacritic-insensitive-unordered-d3 n-q2-en-stemmed-diacritic-insensitive-unordered-d4</m-f-a-q><m-f-a-u-q>Too many to display(40). Displaying first 10: n-q2-en-stemmed-diacritic-insensitive-ordered-d0 n-q2-en-stemmed-diacritic-insensitive-ordered-d1 n-q2-en-stemmed-diacritic-insensitive-ordered-d2 n-q2-en-stemmed-diacritic-insensitive-ordered-d3 n-q2-en-stemmed-diacritic-insensitive-ordered-d4 n-q2-en-stemmed-diacritic-insensitive-unordered-d0 n-q2-en-stemmed-diacritic-insensitive-unordered-d1 n-q2-en-stemmed-diacritic-insensitive-unordered-d2 n-q2-en-stemmed-diacritic-insensitive-unordered-d3 n-q2-en-stemmed-diacritic-insensitive-unordered-d4</m-f-a-u-q></result><result count=\"1308\" doc=\"/docs/dir1/doc4.xml\" estimate=\"1452\" expected-count=\"1548\" expected-estimate=\"1732\"><m-f-a-q>Too many to display(240). Displaying first 10: n-q2-en-stemmed-case-insensitive-ordered-d0 n-q2-en-stemmed-case-insensitive-ordered-d1 n-q2-en-stemmed-case-insensitive-ordered-d2 n-q2-en-stemmed-case-insensitive-ordered-d3 n-q2-en-stemmed-case-insensitive-ordered-d4 n-q2-en-stemmed-case-insensitive-unordered-d0 n-q2-en-stemmed-case-insensitive-unordered-d1 n-q2-en-stemmed-case-insensitive-unordered-d2 n-q2-en-stemmed-case-insensitive-unordered-d3 n-q2-en-stemmed-case-insensitive-unordered-d4</m-f-a-q><m-f-a-u-q>Too many to display(280). Displaying first 10: n-q2-en-stemmed-case-insensitive-ordered-d0 n-q2-en-stemmed-case-insensitive-ordered-d1 n-q2-en-stemmed-case-insensitive-ordered-d2 n-q2-en-stemmed-case-insensitive-ordered-d3 n-q2-en-stemmed-case-insensitive-ordered-d4 n-q2-en-stemmed-case-insensitive-unordered-d0 n-q2-en-stemmed-case-insensitive-unordered-d1 n-q2-en-stemmed-case-insensitive-unordered-d2 n-q2-en-stemmed-case-insensitive-unordered-d3 n-q2-en-stemmed-case-insensitive-unordered-d4</m-f-a-u-q></result><result count=\"1466\" doc=\"/docs/dir1/doc6.xml\" estimate=\"1816\" expected-count=\"1646\" expected-estimate=\"2198\"><m-f-a-q>Too many to display(180). Displaying first 10: e-wq-both-7 e-wq-both-7-case-insensitive e-wq-both-7-case-sensitive e-wq-both-7-diacritic-insensitive e-wq-both-7-diacritic-sensitive e-wq-both-7-en e-wq-both-7-en-case-insensitive e-wq-both-7-en-case-sensitive e-wq-both-7-en-diacritic-insensitive e-wq-both-7-en-diacritic-sensitive</m-f-a-q><m-f-a-u-q>Too many to display(382). Displaying first 10: e-wq-both-7 e-wq-both-7-case-insensitive e-wq-both-7-case-sensitive e-wq-both-7-diacritic-insensitive e-wq-both-7-diacritic-sensitive e-wq-both-7-en e-wq-both-7-en-case-insensitive e-wq-both-7-en-case-sensitive e-wq-both-7-en-diacritic-insensitive e-wq-both-7-en-diacritic-sensitive</m-f-a-u-q></result><result count=\"488\" doc=\"/docs/dir1/doc7.xml\" estimate=\"852\" expected-count=\"586\" expected-estimate=\"1182\"><m-f-a-q>Too many to display(98). Displaying first 10: e-wq-both-7-en-punctuation-insensitive e-wq-both-7-en-stemmed-punctuation-insensitive e-wq-both-7-en-unstemmed-punctuation-insensitive e-wq-both-7-foobar-unstemmed-punctuation-insensitive e-wq-both-7-fr-unstemmed-punctuation-insensitive e-wq-both-7-punctuation-insensitive e-wq-both-7-stemmed-punctuation-insensitive e-wq-both-7-unstemmed-punctuation-insensitive e-wq-both-8 e-wq-both-8-case-insensitive</m-f-a-q><m-f-a-u-q>Too many to display(330). Displaying first 10: e-wq-both-7 e-wq-both-7-case-insensitive e-wq-both-7-case-sensitive e-wq-both-7-diacritic-insensitive e-wq-both-7-diacritic-sensitive e-wq-both-7-en e-wq-both-7-en-case-insensitive e-wq-both-7-en-case-sensitive e-wq-both-7-en-diacritic-insensitive e-wq-both-7-en-diacritic-sensitive</m-f-a-u-q></result><result count=\"1260\" doc=\"/docs/dir1/doc8.xml\" estimate=\"1260\" expected-count=\"1488\" expected-estimate=\"1488\"><m-f-a-q>Too many to display(228). Displaying first 10: e-wq-both-18 e-wq-both-18-case-insensitive e-wq-both-18-case-sensitive e-wq-both-18-diacritic-insensitive e-wq-both-18-diacritic-sensitive e-wq-both-18-en e-wq-both-18-en-case-insensitive e-wq-both-18-en-case-sensitive e-wq-both-18-en-diacritic-insensitive e-wq-both-18-en-diacritic-sensitive</m-f-a-q><m-f-a-u-q>Too many to display(228). Displaying first 10: e-wq-both-18 e-wq-both-18-case-insensitive e-wq-both-18-case-sensitive e-wq-both-18-diacritic-insensitive e-wq-both-18-diacritic-sensitive e-wq-both-18-en e-wq-both-18-en-case-insensitive e-wq-both-18-en-case-sensitive e-wq-both-18-en-diacritic-insensitive e-wq-both-18-en-diacritic-sensitive</m-f-a-u-q></result><result count=\"1668\" doc=\"/docs/dir2/doc9.xml\" estimate=\"1668\" expected-count=\"1738\" expected-estimate=\"1738\"><m-f-a-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-q><m-f-a-u-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-u-q></result><result count=\"1624\" doc=\"/docs/dir2/doc10.xml\" estimate=\"1624\" expected-count=\"1694\" expected-estimate=\"1694\"><m-f-a-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-q><m-f-a-u-q>Too many to display(70). Displaying first 10: n-q1-en-stemmed-case-insensitive-ordered-d0 n-q1-en-stemmed-case-insensitive-ordered-d1 n-q1-en-stemmed-case-insensitive-ordered-d2 n-q1-en-stemmed-case-insensitive-ordered-d3 n-q1-en-stemmed-case-insensitive-ordered-d4 n-q1-en-stemmed-case-insensitive-unordered-d0 n-q1-en-stemmed-case-insensitive-unordered-d1 n-q1-en-stemmed-case-insensitive-unordered-d2 n-q1-en-stemmed-case-insensitive-unordered-d3 n-q1-en-stemmed-case-insensitive-unordered-d4</m-f-a-u-q></result>", "samplequery":"", "sampledata":"", "version":"5.0-nightly", "tofixin":"5.0-5", "fixedin":"N/A", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, {"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[20485, 20486], "cloneOf":"", "support":{"headline":"", "supportDescription":"", "publishStatus":"Not Ready", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["xdmp", "msrinivasan"], "changeHistory":[{"time":"2013-01-16T15:43:47.345406-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "to":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-18T15:40:47.702855-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Jane, you have some experience with the reverse index. Could you take a look at this?"}, {"time":"2013-01-18T15:40:47.702855-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"assignTo":{"from":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "to":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-21T11:19:05.87951-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Maha,\r\n\r\nI just looked at reverse_query2.xml.  There are multiple test cases in it.  Can you narrow it down to a minimal set of step to reproduce?  That'll help us a lot in investigating the problem.\r\n\r\nThanks,\r\nJane"}, {"time":"2013-01-23T10:55:35.260165-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I was able to reproduce this on my machine with just the setup and the query given above. Here is the simplified steps:\r\n1. Create db, forest and attach them.\r\n2. Enable index options:\r\ndeclare namespace admin=\"http://marklogic.com/xdmp/admin\";\r\n        import module \"http://marklogic.com/xdmp/admin\" at \"/MarkLogic/admin.xqy\";\r\n\r\n        let $config := admin:get-configuration()\r\n        let $dbid := admin:database-get-id($config, \"revq2DB\")\r\n        let $word-searches := admin:database-set-word-searches($config, $dbid, fn:true())\r\n        let $word-positions := admin:database-set-word-positions($word-searches, $dbid, fn:true())\r\n        let $rev-idx := admin:database-set-fast-reverse-searches($word-positions, $dbid, fn:true())\r\n        return\r\n         admin:save-configuration($rev-idx)\r\n3. Load test data:\r\nfor $doc at $idx in\r\nxdmp:document-get(\"QA_HOME/testdata/3.2/lang_q1.xml\")//test\r\nlet $doc-uri := concat( \"/docs/dir\", xs:string(ceiling($idx div 8)), \"/doc\", $idx, \".xml\")\r\nlet $collections := ( \"coll-all\", if ( $doc[@xml:lang=\"en\"]) then \"en\" else if\r\n                        ( $doc[@xml:lang=\"fr\"]) then \"fr\" else ())\r\nreturn xdmp:document-insert($doc-uri, $doc, xdmp:default-permissions(), $collections)\r\n\r\n4. Fragment root:\r\n declare namespace admin=\"http://marklogic.com/xdmp/admin\";\r\n        import module \"http://marklogic.com/xdmp/admin\" at \"/MarkLogic/admin.xqy\";\r\n\r\n        let $config := admin:get-configuration()\r\n        let $dbid := admin:database-get-id($config, \"revq2DB\")\r\n        let $frag-root := admin:database-fragment-root( \"\", \"res-set\") \r\n        let $set-frag-root := admin:database-add-fragment-root($config, $dbid, $frag-root)\r\n        return\r\n         admin:save-configuration($set-frag-root)\r\n\r\n5. Load word-queries into the DB:\r\nlet $terms := (\"run\", \"runs\", \"running\", \"Run\",\"Runs\", \"is not\", \"test-plan\", \"test plan\", \"isn't\" , \"is n't\",\"etes\", \"&#234;tes\", \"&#234;tre\",\"&#233;t&#233;\",  \"?sn* ?aghu's\", \"?sn* raghu's\",\"?sn* Raghu's\", \"&#x6f22;&#x8a9e; &#x0441;&#x0442;&#x0443;&#x043b;\", \"&#x6f22;&#x8a9e; &#x0441;&#x0442;&#x0443;&#x043b;&#x0430;\",\"good &#x6f22;&#x8a9e;\", \"&#x6f22;&#x8a9e; &#x0441;&#x0442;&#x0443;&#x043b;&#x0430; parlez\")\r\nlet $langs := (\"default\", \"en\", \"fr\", \"foobar\")\r\nlet $stemming := (\"default\", \"stemmed\", \"unstemmed\")\r\nlet $options := (\"default\", \"case-insensitive\", \"case-sensitive\",\"punctuation-insensitive\", \"punctuation-sensitive\", \"diacritic-insensitive\", \"diacritic-sensitive\")\r\nfor $term at $idx in $terms\r\n return\r\n  for $lang in $langs\r\n   return\r\n    for $stem in $stemming\r\n     return\r\n      for $option in $options\r\n       return\r\n        let $opt := if( $stem eq \"default\" and $option eq \"default\" and $lang eq \"default\") then ()\r\n                    else if($stem eq \"default\" and $option eq \"default\") then concat(\"lang=\",$lang)\r\n                    else if($stem eq \"default\" and $lang eq \"default\") then $option\r\n                    else if($option eq \"default\" and $lang eq \"default\") then $stem\r\n                    else if($stem eq \"default\") then ($option, concat(\"lang=\",$lang))                     \r\n                    else if($lang eq \"default\") then ($option, $stem)\r\n                    else if($option eq \"default\") then ($stem, concat(\"lang=\",$lang))\r\n                    else ($option, $stem, concat(\"lang=\",$lang))\r\n        let $query := cts:word-query($term, $opt)\r\n        let $save-exact-query := if($stem eq \"default\" and $option eq \"default\") then\r\n                                  let $q := cts:word-query($term, ($opt, \"exact\"))\r\n                                  return xdmp:document-insert(concat(\"/queries/w-q/w-q\", $idx, if($lang eq \"default\") then () else concat(\"-\",$lang),\"-exact\", \".xml\"), <query>{$q}</query>) \r\n                                  else ()\r\n        let $save-srch := xdmp:document-insert(concat(\"/queries/w-q/w-q\", $idx, if($lang eq \"default\") then () else concat(\"-\",$lang), if($stem eq \"default\") then () else concat(\"-\", $stem), if($option eq \"default\") then () else concat(\"-\", $option), \".xml\"), <query>{$query}</query>)\r\n        return $save-srch\r\n\r\n6. Run reverse queries:\r\n\r\ndeclare boundary-space preserve;\r\nimport module namespace ridx=\"http://marklogic.com/rev-idx\" at \"rev-idx.xqy\";\r\n\r\nlet $docs := for $doc in (/test)\r\n             order by base-uri($doc) collation \"http://marklogic.com/collation//MO\"\r\n             return $doc\r\nfor $doc in $docs[1 to 10]\r\nreturn ridx:validate-reverse-query-results($doc, fn:false() )\r\n\r\nThis expects empty sequence..but seeing a series of\r\n<result doc=\"/docs/dir1/doc1.xml\" estimate=\"128\" expected-estimate=\"0\" count=\"128\" expected-count=\"0\">\r\n<m-f-e-q>Too many to display(128). Displaying first 10: w-q1 w-q1-case-insensitive w-q1-case-sensitive w-q1-diacritic-insensitive w-q1-diacritic-sensitive w-q1-en w-q1-en-case-insensitive w-q1-en-case-sensitive w-q1-en-diacritic-insensitive w-q1-en-diacritic-sensitive</m-f-e-q>\r\n<m-f-e-u-q>Too many to display(128). Displaying first 10: w-q1 w-q1-case-insensitive w-q1-case-sensitive w-q1-diacritic-insensitive w-q1-diacritic-sensitive w-q1-en w-q1-en-case-insensitive w-q1-en-case-sensitive w-q1-en-diacritic-insensitive w-q1-en-diacritic-sensitive</m-f-e-u-q>\r\n</result>\r\n\r\n\r\n"}, {"time":"2013-01-24T19:21:08.66462-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I used the nightly of 20130102.  The above still reproduces.  "}, {"time":"2013-01-24T21:16:24.040251-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Following the above steps, I reproduced the result against a 5.0-4.3 release build too.\r\n\r\nWhat is the test trying to verify?  Why is the result wrong?"}, {"time":"2013-01-25T13:35:42.312105-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"After inserting the docs and the queries as described above, run the following query: \r\n\r\nlet $docs := for $doc in (/test)\r\n             order by base-uri($doc) collation \"http://marklogic.com/collation//MO\"\r\n             return $doc\r\nlet $qry := cts:reverse-query(doc(base-uri($docs[1])))\r\nlet $search := cts:search(/query, $qry)\r\nlet $unfiltered-search := cts:search(/query, $qry, \"unfiltered\")\r\nreturn ($unfiltered-search[1], $docs[1])\r\n\r\ngot this result:\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<results warning=\"more than one root item\">\r\n  <query>\r\n    <cts:word-query xmlns:cts=\"http://marklogic.com/cts\">\r\n      <cts:text xml:lang=\"foobar\">été</cts:text>\r\n      <cts:option>diacritic-insensitive</cts:option>\r\n    </cts:word-query>\r\n  </query>\r\n  <test txt=\"run\">run</test>\r\n</results>"}, {"time":"2013-01-25T15:22:47.763634-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I have a simplied test case:\r\n\r\nxdmp:document-insert(\"doc.xml\", <test txt=\"run\">run</test>);\r\n\r\nlet $terms := (\"etes\")\r\nlet $langs := (\"foobar\")\r\nlet $options := (\"diacritic-insensitive\")\r\nlet $stemming := (\"default\") \r\nfor $term at $idx in $terms\r\n return\r\n  for $lang in $langs\r\n   return\r\n    for $stem in $stemming \r\n      for $option in $options\r\n       return\r\n        let $opt := if( $stem eq \"default\" and $option eq \"default\" and $lang eq \"default\") then ()\r\n                    else if($stem eq \"default\" and $option eq \"default\") then concat(\"lang=\",$lang)\r\n                    else if($stem eq \"default\" and $lang eq \"default\") then $option\r\n                    else if($option eq \"default\" and $lang eq \"default\") then $stem\r\n                    else if($stem eq \"default\") then ($option, concat(\"lang=\",$lang))\r\n                    else if($lang eq \"default\") then ($option, $stem)\r\n                    else if($option eq \"default\") then ($stem, concat(\"lang=\",$lang))\r\n                    else ($option, $stem, concat(\"lang=\",$lang))\r\n        let $query := cts:word-query($term, $opt)\r\n        let $save-exact-query := if($stem eq \"default\" and $option eq \"default\") then\r\n                                  let $q := cts:word-query($term, ($opt, \"exact\"))\r\n                                  return xdmp:document-insert(concat(\"/queries/w-q/w-q\", $idx, if($lang eq \"default\") then () else concat(\"-\",$lang),\"-exact\", \".xml\"), <query>{$q}</query>)\r\n                                  else ()\r\n        let $save-srch := xdmp:document-insert(concat(\"/queries/w-q/w-q\", $idx, if($lang eq \"default\") then () else concat(\"-\",$lang), if($stem eq \"default\") then () else concat(\"-\", $stem), if($option eq \"default\") then () else concat(\"-\", $option), \".xml\"), <query>{$query}</query>)\r\n        return $save-srch ;\r\n\r\nlet $docs := for $doc in (/test)\r\n             order by base-uri($doc) collation \"http://marklogic.com/collation//MO\"\r\n             return $doc\r\nlet $qry := cts:reverse-query(doc(base-uri($docs[1])))\r\nlet $search := cts:search(/query, $qry)\r\nlet $unfiltered-search := cts:search(/query, $qry, \"unfiltered\")\r\nreturn ($unfiltered-search[1], $docs[1])\r\n\r\nThe returned result is:\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<results warning=\"more than one root item\">\r\n  <query>\r\n    <cts:word-query xmlns:cts=\"http://marklogic.com/cts\">\r\n      <cts:text xml:lang=\"foobar\">été</cts:text>\r\n      <cts:option>diacritic-insensitive</cts:option>\r\n    </cts:word-query>\r\n  </query>\r\n  <test txt=\"run\">run</test>\r\n</results>"}, {"time":"2013-01-25T15:50:28.171539-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Turned out when this happens, no reverse index exists at all!"}, {"time":"2013-01-25T15:52:11.093692-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"The fast-reverse-search configuration change isn't picked up until the server is restarted!"}, {"time":"2013-01-25T23:16:04.548391-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Identified the change that caused this: 126280.  The above test case is misleading.  I had to run the following:\r\n\r\nmake tests tname=foo clean=yes\r\nmake ut tname=reverse_query2.xml"}, {"time":"2013-01-26T09:22:23.237549-08:00", "updatedBy":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"That fix was addressing an issue (Bug:20011) where you have multiple elements in a query: in generating the query we were dropping some of the clauses, so e-w-q((\"a\",\"b\"),\"word\") would ask index resulution about (\"a\",\"word\") or \"b\" rrather than(\"b\",\"word\").  That change is all in query construction, so I don't know how it affects picking up a configuration change."}, {"time":"2013-01-26T10:22:57.252971-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Compared the original test in reverse_query2.xml with the test case reported above, and found that some intermediate steps in the original test are missing in this bug which cause the steps to even fail against a 5.0.3.2 release build.  \r\n\r\nMy observation on the configuration was also due to a test mistake (embarrassed).  \r\n\r\nIn order to avoid confusion, I'm closing this bug and opening a new one."}, {"time":"2013-01-26T10:22:57.252971-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{"status":{"from":"", "to":"Closed"}, "assignTo":{"from":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-26T10:30:28.390312-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Filed bug 20600 to replace this one."}, {"time":"2013-01-30T22:36:05.999634-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"130087", "paths":["xdmp/branches/b5_0/src/InMemoryReverseIndex.cpp"], "affectedBugs":[]}, "comment":"bug:20484 remove incorrect assertion"}], "updatedAt":"2013-01-30T22:36:05.999634-08:00", "closedAt":"2013-01-26T10:22:57.252971-08:00", "closedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "renderDescriptionAs":"normal"}