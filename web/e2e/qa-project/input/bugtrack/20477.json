{"id":20477, "kind":"Bug", "createdAt":"2012-11-26T18:20:45.507009-08:00", "status":"Closed", "title":"large binary files may get lost on a replica cluster when switching from flexrep to db rep between two clusters  and under heavy IO", "category":"", "severity":"Critical", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"I noted a harmful time window in the code:  in BinaryManager when the ref count to a large binary is reduced to 0,  the code enqueues a file deletion but quits the critical section without waiting for the file to be actually deleted. But Forest::replicateFragment replies  on the existence of the file to decide whether to throw a retry (see Bug 19914).  In one stress test when IO is very slow due to heavy load,  I noted it can take minutes before a file is actually deleted after en-queueing the deletion request. That means while the retry process does re-replicate the binary file, the deletion request enqueued earlier (before the retry is thrown) can cause the file to get deleted again.   After I move the real deletion into the critical section (which is an experiment, not a desirable fix), the issue no longer happens.  So this timing window must be closed.", "samplequery":"", "sampledata":"", "version":"7.0-nightly", "tofixin":"7.0-ea1", "fixedin":"7.0-ea1", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, {"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":20146, "support":{"headline":"", "supportDescription":"", "publishStatus":"Not Ready", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["", "hwu"], "changeHistory":[{"time":"2012-11-26T18:20:45.507009-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-25T22:46:05.343129-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Note: the test case I used to reproduce the issue:\r\n\r\n1) set up two clusters, each with 3 nodes (1E2D).  I used three boxes (hwu, hwu2, hwu3) to run 6 servers, which implies very heavy IO on these boxes. With more hardware and faster IO,  the issue may be less likely to get reproduced.\r\n\r\n2) Create a database with failover on both clusters.  The forests of the two databases should have the same names. Then setup flexrep between the two databases.\r\n\r\n3) Load many large binaries into the flexrep master database and let the replication finish.\r\n\r\n4) Remove the flexrep configuration and setup db replication between the two databases (the database that was used as the flexrep master should also be the master in the db rep setup). \r\n\r\nAll existing large binaries on the replica side are now marked as deleted and all existing large binaries on the master side will get replicated again (but now through db rep instead of flexrep).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n3) "}, {"time":"2013-01-15T17:29:06.532859-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"7.0-ea1"}}, "files":[], "show":true}, {"time":"2013-01-15T17:59:51.185666-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"127903", "paths":["xdmp/trunk/src/services/File.cpp", "xdmp/trunk/src/services/File.h", "xdmp/trunk/src/Forest.cpp", "xdmp/trunk/src/BinaryManager.cpp"], "affectedBugs":[]}, "comment":"bug:20477 large binary files may get lost on a replica cluster when switching from flexrep to db rep between two clusters and under heavy IO"}, {"time":"2013-01-15T18:00:26.237081-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-15T18:00:26.237081-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-08T16:06:43.081367-08:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Blocked by bug 21110."}, {"time":"2013-03-11T11:10:55.776671-07:00", "updatedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Verified on build 7.0-ea1_20130308"}], "updatedAt":"2013-03-11T11:10:55.776671-07:00", "fixedAt":"2013-01-15T18:00:26.237081-08:00", "fixedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "shippedAt":"2013-03-11T11:10:55.776671-07:00", "shippedBy":{"username":"msrinivasan", "name":"Mahalakshmi Srinivasan", "email":"mahalakshmi.srinivasan@marklogic.com"}, "renderDescriptionAs":"normal"}