{"id":20929, "kind":"Bug", "createdAt":"2013-02-25T22:40:01.962823-08:00", "status":"Closed", "title":"xdmp:url-encode() with Rest API throws 'Failed Auth' error", "category":"xdmp", "severity":"Major", "priority":{"level":"2", "title":"Not required for product release"}, "submittedBy":{"username":"bgupta", "name":"Balkrishna Gupta", "email":"balkrishna.gupta@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"REST API server throws 'Failed Auth' error while using http-get with xdmp:url-encode() to encode url. However, it is working fine with fn:encode-for-uri() method to encode the url. Below are the steps to reproduce:\r\n\r\n1. Create a REST API server\r\ncurl --anyauth --user admin:admin -X POST -d'{\"rest-api\":{\"name\":\"rest-example\",\"port\":\"8035\"}}' -H \"Content-type: application/json\" http://localhost:8002/v1/rest-apis\r\n\r\n2. Step 1 will create a database rest-example and a HTTP server on port 8035 with database as 'rest-example' and module database as 'rest-example-modules'. Create an element range index in 'rest-example' database of type 'String' and localname as 'test'\r\n\r\n3. Insert two documents into rest-example database:\r\nxdmp:document-insert(\"/xml/one.xml\", <test>This is test.</test>)\r\nxdmp:document-insert(\"/xml/two.xml\", <test>This is test1.</test>)\r\n\r\n4. Create an option using below options xml (creating index-options.xml in the current directory) and using curl command:\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n    <values name=\"resttest\">\r\n        <range type=\"xs:string\">\r\n            <element ns=\"\" name=\"test\"/>\r\n        </range>\r\n    </values>\r\n</options>\r\n\r\ncurl --anyauth --user admin:admin -X PUT -d@\"index-options.xml\" -H \"Content-type: application/xml\" 'http://localhost:8004/v1/config/query/resttest'\r\n\r\n5. Execute below XQuery code in QC on rest-example database which throws below error:\r\nlet $q := \r\n<query xmlns=\"http://marklogic.com/appservices/search\">\r\n<directory-query>\r\n<uri>/xml/</uri>\r\n</directory-query>\r\n</query>\r\nlet $uri := \r\n  concat('http://localhost:8004/', \r\n  'v1/values/resttest?options=resttest&amp;format=xml&amp;structuredQuery=',\r\n  xdmp:url-encode(xdmp:quote($q)))\r\nreturn\r\nxdmp:http-get($uri,\r\n<options xmlns=\"xdmp:document-get\" xmlns:http=\"xdmp:http\">{ \r\n   element http:authentication {\r\n     attribute method {'digest'},\r\n     element http:username { 'admin' },\r\n     element http:password { 'admin' }\r\n   } }\r\n  <http:verify-cert>true</http:verify-cert>\r\n</options>)\r\n=>\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<results warning=\"more than one root item\">\r\n  <response xmlns=\"xdmp:http\">\r\n    <code>401</code>\r\n    <message>Unauthorized</message>\r\n    <headers>\r\n      <www-authenticate>Digest realm=\"public\", qop=\"auth\", nonce=\"2efdaa2603eaa10ce92f557927afa051\", opaque=\"e0ee46f5b03006cd\"</www-authenticate>\r\n      <content-type>application/xml</content-type>\r\n      <server>MarkLogic</server>\r\n      <content-length>211</content-length>\r\n      <connection>close</connection>\r\n    </headers>\r\n  </response>\r\n  <rapi:error xmlns:rapi=\"http://marklogic.com/rest-api\">\r\n    <rapi:status-code>401</rapi:status-code>\r\n    <rapi:status>Failed Auth</rapi:status>\r\n    <rapi:message-code/>\r\n    <rapi:message>Unauthenticated</rapi:message>\r\n  </rapi:error>\r\n</results>\r\n\r\nHowever, if we use fn:encode-for-uri() then it works fine.\r\n\r\nlet $q := \r\n<query xmlns=\"http://marklogic.com/appservices/search\">\r\n<directory-query>\r\n<uri>/xml/</uri>\r\n</directory-query>\r\n</query>\r\nlet $uri := \r\n  concat('http://localhost:8004/', \r\n  'v1/values/resttest?options=resttest&amp;format=xml&amp;structuredQuery=',\r\n  fn:encode-for-uri(xdmp:quote($q)))\r\nreturn\r\nxdmp:http-get($uri,\r\n<options xmlns=\"xdmp:document-get\" xmlns:http=\"xdmp:http\">{ \r\n   element http:authentication {\r\n     attribute method {'digest'},\r\n     element http:username { 'admin' },\r\n     element http:password { 'admin' }\r\n   } }\r\n  <http:verify-cert>true</http:verify-cert>\r\n</options>)", "samplequery":"", "sampledata":"", "version":"6.0-2.2", "tofixin":"6.0-5", "fixedin":"6.0-5", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"bgupta", "name":"Balkrishna Gupta", "email":"balkrishna.gupta@marklogic.com"}, {"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, {"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, {"username":"pmcgowan", "name":"Preston McGowan", "email":"Preston.McGowan@marklogic.com"}, {"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, {"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[22885], "cloneOf":"", "support":{"headline":"xdmp:url-encode doesn't encode the double quotation mark correctly", "supportDescription":"xdmp:url-encode doesn't encode the double quotation mark correctly", "publishStatus":"Publish", "tickets":[], "customerImpact":{"level":"Low", "title":"Minimal business impact or reasonable workaround is available"}, "workaround":" use fn:encode-for-uri()"}, "tags":["xdmp", "bgupta"], "changeHistory":[{"time":"2013-02-26T08:43:41.295108-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{"status":{"from":"", "to":"Verify"}, "assignTo":{"from":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-26T08:43:41.295108-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{"assignTo":{"from":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-26T08:43:41.295108-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-02-26T12:57:57.831443-08:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I'm wondering if the appserver itself could be throwing the 401 error, which only then gets processed by the REST API error handler.\r\n\r\nObservations:\r\n\r\n* I added an xdmp:log() expression as the first executable expression in the rewriter (src/Modules/MarkLogic/rest-api/rewriter.xqy) and error handler (src/Modules/MarkLogic/rest-api/error-handler.xqy).\r\n\r\n*  An invalid request with fn:encode-for-uri() for the parameter executes the rewriter xdmp:log() expression as well as the error handler xdmp:log() expression.\r\n\r\n*  A request with xdmp:url-encode() for the parameter executes only the error handler xdmp:log() expression.\r\n\r\nI tried passing both parameter variants by curl to port 8001.\r\n\r\nThe fn:encode-for-uri() variant responded with the \"System Summary\" HTML page:\r\n\r\ncurl --digest -u admin:admin 'http://localhost:8001/?param=%3Cquery%20xmlns%3D%22http%3A%2F%2Fmarklogic.com%2Fappservices%2Fsearch%22%3E%0A%20%20%3Cdirectory-query%3E%0A%20%20%20%20%3Curi%3E%2Fxml%2F%3C%2Furi%3E%0A%20%20%3C%2Fdirectory-query%3E%0A%3C%2Fquery%3E'\r\n\r\nThe xdmp:url-encode() variant responded with a 401 Unauthorized HTML page:\r\n\r\ncurl --digest -u admin:admin 'http://localhost:8001/?param=<query+xmlns%3d\"http%3a//marklogic.com/appservices/search\">%0a++<directory-query>%0a++++<uri>/xml/</uri>%0a++</directory-query>%0a</query>'\r\n\r\nFor what it's worth, Apache Tomcat processes either variant to the same parameter value.\r\n"}, {"time":"2013-02-26T12:57:57.831443-08:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}}}, "files":[], "show":true}, {"time":"2013-02-27T13:42:59.707364-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"tofixin":{"from":"6.0-3", "to":"6.0-4"}}, "files":[], "show":true}, {"time":"2013-06-24T13:38:20.22419-07:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "to":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-06-24T16:21:08.384732-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"401 is from\r\n\r\nBreakpoint 1, xdmp::AppRequest::sendUnauthorized (this=0x7ffff05bb420, dynamicEnv=..., hStaticEnv=..., realm=\"public\", type=xdmp::digestAuth) at AppServer.cpp:6265\r\n6265\t  string dgp = (hUser!=0)?hUser->getDigestPassword():realm;\r\n(gdb) where\r\n#0  xdmp::AppRequest::sendUnauthorized (this=0x7ffff05bb420, dynamicEnv=..., hStaticEnv=..., realm=\"public\", type=xdmp::digestAuth) at AppServer.cpp:6265\r\n#1  0x0000000001f8b162 in xdmp::AppConnectionTask::handleConnection (this=0x7fffe8e7a540) at AppServer.cpp:4302\r\n#2  0x0000000001f8eb8c in xdmp::AppConnectionTask::run (this=0x7fffe8e7a540) at AppServer.cpp:4589\r\n#3  0x0000000002da3247 in svc::PooledThread::run (this=0x6b93e20) at ThreadPool.cpp:146\r\n#4  0x0000000002da1783 in svc::Thread::top (this=0x6b93e20) at Thread.cpp:284\r\n#5  0x0000000002da1bfa in svc::runThread (arg=0x6b93e20) at Thread.cpp:320\r\n#6  0x00000039d0006ccb in start_thread (arg=0x7fffe3c00700) at pthread_create.c:301\r\n#7  0x00000039cfce0c2d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:115\r\n"}, {"time":"2013-06-26T16:11:02.543183-07:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"With support's agreement, we push this bug to 6.0-5."}, {"time":"2013-06-26T16:11:02.543183-07:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"tofixin":{"from":"6.0-4", "to":"6.0-5"}}, "files":[], "show":true}, {"time":"2014-02-20T12:14:59.201856-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"The issue is with the double quotes. If I replace \" with %22, the URL from Erik's test case works fine."}, {"time":"2014-02-20T12:24:56.637448-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Per RFC1738,   the double quotation mark is a \"unsafe\" character and it should always be encoded within an URL. "}, {"time":"2014-02-21T12:33:27.220719-08:00", "updatedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"set the priority to 2, but based on Haitao's comment - should we close as \"will not fix\"?"}, {"time":"2014-02-21T13:01:48.020656-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I think so. The server is doing nothing wrong."}, {"time":"2014-02-21T13:03:49.771023-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"No, I still don't think having a double quote should cause authentication to fail."}, {"time":"2014-02-21T13:19:41.876447-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"And if the problem really is url-encode then it should be fixed.\r\nEither way there is something to be fixed."}, {"time":"2014-02-21T13:23:45.324244-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"url-encode already takes an option to say whether it should encode blank to + or %20.   One thing we can do is to add another option to tell the built-in to  encode the double quotation mark."}, {"time":"2014-02-21T13:34:06.710579-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"Do not add a new option.\r\nJust always do it."}, {"time":"2014-02-23T12:15:55.70484-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"162026", "paths":["xdmp/branches/b6_0/src/services/ParsedURL.cpp"], "affectedBugs":[]}, "comment":"bug:20929 xdmp:url-encode() with Rest API throws 'Failed Auth' error"}, {"time":"2014-02-23T12:25:45.038551-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true, "comment":"A simple test case:\r\n\r\nOut of the box, the following query should give a 200 response. Before the fix, it gave 401.\r\n\r\nlet $q :=\r\n<query xmlns=\"http://marklogic.com/appservices/search\">\r\n<directory-query>\r\n<uri>/xml/</uri>\r\n</directory-query>\r\n</query>\r\nlet $uri :=\r\n  concat('http://localhost:8001/?param=', xdmp:url-encode(xdmp:quote($q)))\r\nreturn\r\nxdmp:http-get($uri,\r\n<options xmlns=\"xdmp:document-get\" xmlns:http=\"xdmp:http\">{\r\n   element http:authentication {\r\n     attribute method {'digest'},\r\n     element http:username { 'admin' },\r\n     element http:password { 'admin' }\r\n   } }\r\n  <http:verify-cert>true</http:verify-cert>\r\n</options>)"}, {"time":"2014-02-23T12:25:45.038551-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true}, {"time":"2014-02-24T10:31:00.585693-08:00", "updatedBy":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, "change":{"assignTo":{"from":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, "to":{"username":"yding", "name":"Yue Ding", "email":"Yue.Ding@marklogic.com"}}}, "files":[], "show":true}, {"time":"2014-02-25T15:36:32.186691-08:00", "updatedBy":{"username":"yding", "name":"Yue Ding", "email":"Yue.Ding@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"yding", "name":"Yue Ding", "email":"Yue.Ding@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"verified on 20140218's 6_0 nightly build first , get 401 response. then verified on 20140225's 6_0 nightly build, give 200 response. testfile:bug20929.xml, add to bugs51.txt under b6_0"}, {"time":"2014-03-24T06:16:37.131088-07:00", "updatedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "change":{"status":{"from":"", "to":"Closed"}, "assignTo":{"from":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"ga"}], "updatedAt":"2014-03-24T06:16:37.131088-07:00", "fixedAt":"2014-02-23T12:25:45.038551-08:00", "fixedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "shippedAt":"2014-02-25T15:36:32.186691-08:00", "shippedBy":{"username":"yding", "name":"Yue Ding", "email":"Yue.Ding@marklogic.com"}, "closedAt":"2014-03-24T06:16:37.131088-07:00", "closedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "renderDescriptionAs":"normal"}