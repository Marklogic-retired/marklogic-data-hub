{"id":20923, "kind":"Bug", "createdAt":"2013-02-25T15:28:39.900738-08:00", "status":"Closed", "title":"Committing a transaction after a forest is set to read-only causes SIGSEGV.", "category":"xdmp", "severity":"Critical", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"1)  Run the attached ContentLoader in debug mode.  Breakpoint at line 119 (session.commit()).\r\n2)  Use the above ContentLoader to load multiple documents with TransactionMode.UPDATE.\r\n3)  When the above breakpoint hits (some docs loaded but not committed), change one of the target database's forest(s)' updates-allowed to read-only.\r\n4)  Continue the ContentLoader.\r\n\r\nServer crashes with the following stack:\r\n\r\n16 xdmp::Future<svc::Handle<xdmp::CommitResponse> >::finish() /space/projects/head/xdmp/src/Future.h:60 0x0000000001d0453a\t\r\n15 xdmp::commitUpdates() /space/projects/head/xdmp/src/UpdateBuiltins.cpp:8113 0x0000000001f2dd4e\t\r\n14 xdmp::TransactionSection::commit() /space/projects/head/xdmp/src/TransactionBuiltins.cpp:885 0x0000000002ede87e\t\r\n13 xdmp::TransactionSection::end() /space/projects/head/xdmp/src/TransactionBuiltins.cpp:855 0x0000000002ede5d4\t\r\n12 xdmp::Statement::_eval() /space/projects/head/xdmp/src/XQueryInterpreter.cpp:1946 0x000000000308a9cf\t\r\n11 xdmp::Statement::eval() /space/projects/head/xdmp/src/XQueryInterpreter.cpp:1789 0x000000000308999e\t\r\n10 xdmp::Program::eval() /space/projects/head/xdmp/src/XQueryInterpreter.cpp:792 0x000000000307fb04\t\r\n9 xdmp::XDBCRequestTask::handleEval() /space/projects/head/xdmp/src/XDBCServer.cpp:490 0x000000000300a41a\t\r\n8 xdmp::XDBCRequestTask::handleRequest() /space/projects/head/xdmp/src/XDBCServer.cpp:1425 0x0000000003014576\t\r\n7 xdmp::XDBCRequestTask::run() /space/projects/head/xdmp/src/XDBCServer.cpp:1579 0x00000000030159fa\t\r\n6 svc::PooledThread::run() /space/projects/head/xdmp/src/services/ThreadPool.cpp:146 0x00000000032c86eb\t\r\n5 svc::Thread::top() /space/projects/head/xdmp/src/services/Thread.cpp:284 0x00000000032c6932\t\r\n4 svc::runThread() /space/projects/head/xdmp/src/services/Thread.cpp:320 0x00000000032c6e55\t\r\n3 start_thread()  0x0000003429006a3a\t\r\n2 clone()  0x0000003428cde62d\t\r\n1 <symbol is not available> 0x0000000000000000\t", "samplequery":"", "sampledata":"", "version":"7.0-nightly", "tofixin":"7.0-ea1", "fixedin":"7.0-ea1", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, {"username":"jsnelson", "name":"John Snelson", "email":"jsnelson@marklogic.com"}, {"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, {"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}], "attachments":[{"name":"ContentLoader.java", "uri":"root/support/bugtracking/attachments/20923/ContentLoader.java"}], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":"", "support":{"headline":"", "supportDescription":"", "publishStatus":"Never Publish", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["xdmp", "jchen"], "changeHistory":[{"time":"2013-02-25T15:40:42.750451-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"ContentLoader arguments:\r\n\r\nxcc://admin:admin@jchen:5275 /home/jchen/Projects/19622/pigs/"}, {"time":"2013-02-25T16:09:45.703844-08:00", "updatedBy":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "change":{"status":{"from":"", "to":"Verify"}, "assignTo":{"from":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "to":{"username":"jsnelson", "name":"John Snelson", "email":"jsnelson@marklogic.com"}}}, "files":[], "show":true, "comment":"John, not sure if you are the right one but considering it is a commit, sending it to you for now.  Reassign if I got it wrong."}, {"time":"2013-02-25T16:09:45.703844-08:00", "updatedBy":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "change":{"assignTo":{"from":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "to":{"username":"jsnelson", "name":"John Snelson", "email":"jsnelson@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-25T16:51:05.959674-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Any forest config changes (rename, setHost, migrate etc) that require a forest to either unmount or forceRestart() will cause the same SIGSEGV."}, {"time":"2013-02-25T19:53:31.855366-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"The problem appears to be in ForestUpdatePath::distributedCommit() in the I/O error handling.\r\nIt looks like it is catching all exceptions and then later throwing a retry sometimes.\r\nI think it would be better to put all the conditional code that checks the exception code and if the forest isFailover() inside the catch block.\r\nIf we are not going to retry don't create a retry object at all and instead re-throw.\r\nYou can still do the forest state setting after unwinding the catch block, and only check if the hRet!=0."}, {"time":"2013-02-25T19:53:31.855366-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{"assignTo":{"from":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "to":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-25T19:58:33.709404-08:00", "updatedBy":{"username":"cjl", "name":"Christopher Lindblad", "email":"cjl@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"Since you will be rethrowing, you should put above the exception catching clause a retry catching clause that simply re-throws..\r\nIf you don't do that it will catch retries as exceptions and re-throw them as exceptions."}, {"time":"2013-02-27T11:11:26.857978-08:00", "updatedBy":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"133903", "paths":["xdmp/trunk/src/ForestQuery.cpp"], "affectedBugs":[]}, "comment":"bug:20923 - Make sure all intercepted exceptions get re-thrown in forest failover enhancement of ForestUpdatePath::distributedCommit()."}, {"time":"2013-02-27T11:13:57.34033-08:00", "updatedBy":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"133904", "paths":["xdmp/branches/b7_0-ea1/src/ForestQuery.cpp"], "affectedBugs":[]}, "comment":"bug:20923 - Make sure all intercepted exceptions get re-thrown in forest failover enhancement of ForestUpdatePath::distributedCommit()."}, {"time":"2013-02-27T11:15:35.106363-08:00", "updatedBy":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "to":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}}}, "files":[], "show":true, "comment":"Reviewed (and modified) by CJL."}, {"time":"2013-02-27T11:15:35.106363-08:00", "updatedBy":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "change":{"assignTo":{"from":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "to":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-02T10:53:16.960528-08:00", "updatedBy":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}, "change":{"assignTo":{"from":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}, "to":{"username":"jsolis", "name":"Julio Solis", "email":"Julio.Solis@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-08T17:03:35.481995-08:00", "updatedBy":{"username":"jsolis", "name":"Julio Solis", "email":"Julio.Solis@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"jsolis", "name":"Julio Solis", "email":"Julio.Solis@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Manually verified on MarkLogic-7.0-20130308.x86_64. I have the manual test case for this if needed. The test is not easily automated."}], "updatedAt":"2013-03-08T17:03:35.481995-08:00", "fixedAt":"2013-02-27T11:15:35.106363-08:00", "fixedBy":{"username":"smiller", "name":"Scott Miller", "email":"Scott.Miller@marklogic.com"}, "shippedAt":"2013-03-08T17:03:35.481995-08:00", "shippedBy":{"username":"jsolis", "name":"Julio Solis", "email":"Julio.Solis@marklogic.com"}, "renderDescriptionAs":"normal"}