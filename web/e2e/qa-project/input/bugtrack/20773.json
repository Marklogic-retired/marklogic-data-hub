{"id":20773, "kind":"Bug", "createdAt":"2013-02-13T06:57:55.024132-08:00", "status":"Closed", "title":"add discussion about unicode normalization to the Java book", "category":"documentation", "severity":"Minor", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"From Erik:\r\n\r\n\r\nThe Java API guide has a section on encoding that lacks coverage of Unicode normalization -- any issue on which Mary has (I hope) corrected my miscomprehension.   (Likely, this is all familiar to you, in which case apologies for the tedious detail that follows.)\r\n\r\nThe fundamental issue is that there are \"abstract characters\" that can be represented in Unicode either as one character (precomposed) or as two characters (decomposed).  \r\n\r\n(In particular, note that a decomposed \"abstract character\" is really two separate Unicode characters rather than a single Unicode character. Conversely, a precomposed \"abstract character\" may require multiple bytes but is still a single Unicode character.)\r\n\r\nNormalizing Unicode makes the representation consistently precomposed or decomposed.  MarkLogic normalizes to precomposed Unicode for efficiency.  \r\n\r\nThat _could_ affect roundtripping in that, if you write decomposed Unicode, you will still read precomposed Unicode.  There can also be platform-specific read issues.  For instance, I believe that the Mac standard is  decomposed Unicode (where the Linux standard is precomposed Unicode).\r\n\r\nOrdinarily, the programmer doesn't have to worry because most decent libraries finesse the difference.  \r\n\r\nFor instance, Java string collation treats the decomposed and precomposed variants as the same (even though decomposed and precomposed Java strings don't test as equal).  Similarly, Java AWT renders the decomposed and precomposed variants in the same way.\r\n\r\nThat said, it sounds like the encoding section should mention the issue and point people at the Normalizer class if they need to change the precomposed Unicode coming back from the server:\r\n\r\n   http://docs.oracle.com/javase/6/docs/api/java/text/Normalizer.html\r\n\r\nHere's a bit more background that I found useful:\r\n\r\n    http://weblogs.java.net/blog/joconner/archive/2006/08/text_normalizat_1.html\r\n    http://weblogs.java.net/blog/joconner/archive/2007/02/normalization_c.html\r\n\r\nIt may be appropriate to cover this in the REST API guide as well, but I'm more aware of the encoding treatment in the Java API guide.\r\n\r\n", "samplequery":"", "sampledata":"", "version":"6.0-2", "tofixin":"6.0-3", "fixedin":"6.0-3", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":"", "support":{"headline":"", "supportDescription":"", "publishStatus":"Never Publish", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["documentation", "kcoleman"], "changeHistory":[{"time":"2013-02-13T06:57:55.024132-08:00", "updatedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "change":{"assignTo":{"from":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "to":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-04T14:47:46.384186-08:00", "updatedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Distillation of an email exchange between Erik and I about how much of this detail we need to include for users:\r\n\r\nWe just need to add a little bit to it to let users know that the server normalizes to precomposed and that they might need to care, depending upon what they do with the returned document(s).\r\n\r\nA similarly minimalist discussion would probably be good [for REST], emphasizing that you will only need to worry about Unicode normalization if you are doing character-by-character (in the Unicode sense, not \"abstract characters\") modification or testing.\r\n\r\nIn other words, it's one of those things that you only need to worry about when reality breaks down and you need to figure out why.  (I hate it when that happens.)\r\n"}, {"time":"2013-03-04T15:43:44.864762-08:00", "updatedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/docsvn", "revision":"6349", "paths":["docs/branches/b6_0/fm/java/document-operations.fm"], "affectedBugs":[]}, "comment":"Bug:20773 Added a para about unicode normalization."}, {"time":"2013-03-04T15:44:11.992745-08:00", "updatedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/docsvn", "revision":"6350", "paths":["docs/trunk/fm/java/document-operations.fm"], "affectedBugs":[]}, "comment":"Bug:20773 Added a para about unicode normalization."}, {"time":"2013-03-05T08:43:03.676849-08:00", "updatedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "to":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}}}, "files":[], "show":true, "comment":"Erik has reviewed and approved the addition. Will close this bug after the next successful doc build."}, {"time":"2013-03-06T10:02:28.181759-08:00", "updatedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Verified in nightly build from 20130306."}], "updatedAt":"2013-03-06T10:02:28.181759-08:00", "fixedAt":"2013-03-05T08:43:03.676849-08:00", "fixedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "shippedAt":"2013-03-06T10:02:28.181759-08:00", "shippedBy":{"username":"kcoleman", "name":"Kim Coleman", "email":"kim.coleman@marklogic.com"}, "renderDescriptionAs":"normal"}