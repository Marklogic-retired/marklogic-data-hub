{"id":20702, "kind":"Task", "createdAt":"2013-02-04T16:23:56.955647-08:00", "status":"Closed", "title":"investigate the possiblity of automatically \"correcting\" the forest order on a replica database", "category":"Replication", "severity":"Major", "priority":{"level":"5", "title":""}, "days":null, "period":{"startDate":null, "endDate":null}, "submittedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"This issue came up during a conversation with Wayne. Consider the following case:\r\n\r\n1) DB replication is configured\r\n2) The master and replica databases match forests by name\r\n3) The forests on the replica database has different order from that on the master database\r\n4) After a disaster, the replica database becomes the active database.\r\n\r\nIf the assignment policy on the replica database (now the active one)  is legacy or bucket,   a rebalancing will happen, which may potentially move lots of data. \r\n\r\nWhile an administrator can manually rearrange the order of the forests by attach/detach,  they have to know the order of the forests on the original master database to do this. This may be difficult since the original master database might not be accessible after a disaster. It would be ideal for the server to warn when the orders on the two sides don't match and to provide a built-in that can fetch the master database's configuration (apparently before the disaster) and automatically \"correct\" the order of the forests on the replica database.", "samplequery":"", "sampledata":"", "version":"7.0-nightly", "tofixin":"7.0-ea3", "fixedin":"7.0-ea3", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, {"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}], "attachments":[], "includeInTaskList":false, "proceduralTasks":{"Requirements Task":[], "Functional Specification Task":[], "Test Specification Task":[], "Test Automation Task":[], "Documentation Task":[]}, "subTasks":[], "tags":["Replication", "hwu"], "changeHistory":[{"time":"2013-02-04T16:23:56.955647-08:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-05-29T16:11:18.368719-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"tofixin":{"from":"7.0-1", "to":"7.0-ea3"}}, "files":[], "show":true}, {"time":"2013-05-31T17:07:11.377438-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Another case is that when the master side retires a forest, the order of the forests will get adjusted. The replica side may get \"out-of-sync\" as far as the order is concerned."}, {"time":"2013-06-03T11:51:07.648204-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Wayne suggested\r\n\r\n1) reuse the info returned from xdmp:foreign-cluster-status\r\n2) add an admin API that can adjust the order of forests given a list of forest names (basically detach everything then reattach in the given order).\r\n3) log a warning (maybe periodically like once per hour) if the replica side detects the order \"mismatch\"."}, {"time":"2013-06-05T16:17:45.091691-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I just added a new admin function database-reorder-forests. With the combination of the following 3 APIs, a user can detect the forest order on the master side and manipulate the forest order on the replica side all by XQuery:\r\n\r\n1) xdmp:foreign-cluster-status\r\nThis gives the list of the forests on the master side in the right order\r\n\r\n2) forest-status\r\nThis gives the foreign master forest ID.  With 1) and 2), the user can figure out the list of forest IDs  in the desired order on the replica side.\r\n\r\n3) xdmp:foreign-cluster-status.\r\nThis one reorders the forests (probably will only be used on the replica side).\r\n\r\nI am pondering whether we still need C++ layer changes. An administrator can use a scheduled task (all in XQuery) if she wants to monitor the ordering after all. \r\n\r\n"}, {"time":"2013-06-11T14:08:30.449715-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Correction: in the 3) above, the API is admin:database-reorder-forests"}, {"time":"2013-06-11T14:43:58.197672-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"C++ layer warning still has its value. What can be done is for each forest to periodically (like once per hour) check its position on the replica db and see if it matches the position of the foreign master forest on the master db. "}, {"time":"2013-06-13T13:47:58.028776-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"144156", "paths":["xdmp/trunk/src/Database.cpp", "xdmp/trunk/src/Cluster.h", "xdmp/trunk/src/Cluster.cpp", "xdmp/trunk/src/Forest.h", "xdmp/trunk/src/Database.h", "xdmp/trunk/src/Forest.cpp"], "affectedBugs":[]}, "comment":"bug:20702 investigate the possiblity of automatically correcting the forest order on a replica database"}, {"time":"2013-06-13T13:48:33.071631-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-06-13T13:48:33.071631-07:00", "updatedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-09-26T14:23:40.820283-07:00", "updatedBy":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, "change":{"status":{"from":null, "to":"Ship"}, "assignTo":{"from":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Verified as part of fail over stress tests. "}], "updatedAt":"2013-09-26T14:23:40.820283-07:00", "fixedAt":"2013-06-13T13:48:33.071631-07:00", "fixedBy":{"username":"hwu", "name":"Haitao Wu", "email":"haitao.wu@marklogic.com"}, "shippedAt":"2013-09-26T14:23:40.820283-07:00", "shippedBy":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}