{"id":20203, "kind":"Bug", "createdAt":"2012-11-06T09:43:41.559711-08:00", "status":"Closed", "title":"search:parse issue with xs namespace", "category":"Search API", "severity":"Minor", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"dchander", "name":"Dinesh Chander", "email":"dinesh.chander@globallogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"Reported by user in case #12074. Behavior is same on 5.0 and 6.0.\r\n---------------------------------------------------------------------------------------------------------\r\nDear support,\r\n\r\nWe have found a problem with the search:parse function. When the returned value contains a serialized cts:element-range-query whose scalar type is string, the XML does not include a namespace definition for the xs prefix. This is difficult to explain, so here is an example.\r\n\r\nLets start without using the search api. If you execute the following script,\r\n<tmp>{\r\ncts:element-range-query(xs:QName(\"person\"), \"=\", \"test\")\r\n}</tmp>/element()\r\n\r\nyou should get,\r\n\r\n<cts:element-range-query operator=\"=\" xmlns:cts=\"http://marklogic.com/cts\">\r\n<cts:element>person</cts:element>\r\n<cts:value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">test</cts:value>\r\n<cts:option>collation=http://marklogic.com/collation/</cts:option>\r\n</cts:element-range-query>\r\n\r\n-- Notice <cts:value> has a prefix namespace definition for xs (xmlns:xs=\"http://www.w3.org/2001/XMLSchema\")\r\n------------------------------------------------------------------------------------------------------\r\nNow lets look at the results of using search:parse to accomplish the same thing. Executing this script,\r\n\r\nimport module namespace search = \"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\nsearch:parse(\"person:test\",\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n<constraint name=\"person\">\r\n<range type=\"xs:string\">\r\n<element ns=\"http://ensco.com/entity\" name=\"person\"/>\r\n</range>\r\n</constraint>\r\n</options>)\r\n\r\nresults in,\r\n<cts:element-range-query qtextpre=\"person:\" qtextref=\"cts:annotation\" operator=\"=\" xmlns:cts=\"http://marklogic.com/cts\">\r\n<cts:element>person</cts:element>\r\n<cts:annotation qtextref=\"following-sibling::cts:value\"/>\r\n<cts:value xsi:type=\"xs:string\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">test</cts:value>\r\n</cts:element-range-query>\r\n\r\n-- Notice the same <cts:value> does not have a namespace declaration for the prefix xs\r\n------------------------------------------------------------------------------------------------------\r\nFinally, when we combine these 2 scripts, we get the correct output.\r\nimport module namespace search = \"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n<tmp>{\r\ncts:query(\r\nsearch:parse(\"person:test\",\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n<constraint name=\"person\">\r\n<range type=\"xs:string\">\r\n<element name=\"person\"/>\r\n</range>\r\n</constraint>\r\n</options>\r\n)\r\n)\r\n}</tmp>/element()\r\n\r\n\r\n... and the ouput is,\r\n<cts:element-range-query operator=\"=\" xmlns:cts=\"http://marklogic.com/cts\">\r\n<cts:element>person</cts:element>\r\n<cts:value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">test</cts:value>\r\n<cts:option>collation=http://marklogic.com/collation/</cts:option>\r\n</cts:element-range-query>\r\n\r\n-- Looking at <cts:value>, there is once again a namespace definition for the xs prefix.\r\n\r\nThe problem this has created is quite strange. For starters, we don't understand why the value of an attribute is being interpreted and requires the xs prefix to be defined. Beyond that, we have been storing the serialized query in the database in an XML file and there has been no problem. The issue has shown up because we are migrating to a new server. As part of this process, the database is being zipped up and then unzipped on the new server, but we see the exception XDMP-DOCNONSBIND when xdmp:zip-get is called. I have also found that quoting, then unquoting the second example above also results in the same exception.\r\n\r\nWe have not had a chance to test this in Marklogic 6, we are currently running version 5.0.3-1.\r\n\r\nThanks\r\nEric Bower\r\nENSCO, Inc\r\n---------------------------------------------------------------------------------------------------------", "samplequery":"Doing a simple quote and unquote on search:parse output is throwing XDMP-DOCNONSBIND error.\r\n\r\nimport module namespace search = \"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\nxdmp:unquote( xdmp:quote(\r\nsearch:parse(\"person:test\",\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n<constraint name=\"person\">\r\n<range type=\"xs:string\">\r\n<element ns=\"http://ensco.com/entity\" name=\"person\"/>\r\n</range>\r\n</constraint>\r\n</options>)\r\n))", "sampledata":"", "version":"6.0-2", "tofixin":"6.0-4", "fixedin":"6.0-4", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"dchander", "name":"Dinesh Chander", "email":"dinesh.chander@globallogic.com"}, {"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, {"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, {"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":20004, "support":{"headline":"Round-tripping from XML to cts:query fails with Namespace issue.", "supportDescription":"When you store a serialized search:options node that happens to contain a serialized cts:query, it doesn't write a required namespace.  Importing one of these serialized options nodes fails with a namespace error.\r\n", "publishStatus":"Publish", "tickets":[], "customerImpact":{"level":"Medium", "title":"Requires significant or unnatural effort to work around issue or to prevent significant business impact"}, "workaround":"Edit the serialized node to include a namespace declaration for xmlns:xs=\"http://www.w3.org/2001/XMLSchema\""}, "tags":["Search API", "dchander"], "changeHistory":[{"time":"2012-11-06T21:28:11.995243-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Please clone in 6.0-nightly and also 6.1-nightly if you think this is a defect and has to be fixed. Thanks."}, {"time":"2012-11-06T21:28:11.995243-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"assignTo":{"from":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "to":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-11-06T21:28:11.995243-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"5.0-5"}}, "files":[], "show":true}, {"time":"2012-11-07T08:44:15.907375-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I remember working on this issue once before.  Acked, after spec work this week I'll dig into the solution.  I don't remember whether it was a bug or not but we did find resolution.  Perhaps it's just not backported to 5."}, {"time":"2012-11-30T16:44:14.241891-08:00", "updatedBy":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "change":{"status":{"from":"", "to":"Verify"}, "assignTo":{"from":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "to":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-05T12:08:55.846663-08:00", "updatedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2012-12-05T13:05:24.501348-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"status":{"from":"", "to":"Fix"}, "assignTo":{"from":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "to":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}}}, "files":[], "show":true, "comment":"I've verified this bug.  It's not strictly related to Search API.  As I dig more into it I'll isolate the problem more clearly.  It has to do with the fact that the cts:query fragment in this:\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<options xmlns=\"http://marklogic.com/appservices/search\" xmlns:t=\"test\">\r\n  <additional-query>\r\n    <cts:element-query xmlns:cts=\"http://marklogic.com/cts\">\r\n      <cts:element>t:test</cts:element>\r\n      <cts:and-query/>\r\n    </cts:element-query>\r\n  </additional-query>\r\n</options>\r\n\r\ndoesn't realize that t:test implies an in-scope prefix.\r\n"}, {"time":"2012-12-17T14:34:31.537279-08:00", "updatedBy":{"username":"cwhitney", "name":"Colleen  Whitney", "email":"colleen.whitney@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"The binding in the example Charles added should be inline in additional-query, not in the options wrapper.\r\n\r\nThe problem is actually not this, but about the lack of the xs: namespace binding on the element constructed by search:parse.  Fix looks pretty straightforward."}, {"time":"2012-12-17T14:46:51.052882-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"The bug I verified is not related to the xs namespace, who has to be included to support schema types.  Adding it explicitly to output of search:parse fixes this problem."}, {"time":"2012-12-17T15:55:53.114134-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"124456", "paths":["xdmp/branches/b6_0/src/Modules/MarkLogic/appservices/search/search-impl.xqy"], "affectedBugs":[]}, "comment":"bug:20203 xs namespace missing on search:parse output"}, {"time":"2012-12-17T15:58:21.361063-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "to":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}}}, "files":[], "show":true, "comment":"This bug adds a namespace declaration to the output for search:parse and may cause regressions.\r\n\r\nOtherwise no change in functionality should be observed."}, {"time":"2012-12-17T15:58:21.361063-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"assignTo":{"from":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "to":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-05-30T13:59:15.997679-07:00", "updatedBy":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, "to":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-07-10T10:24:57.302346-07:00", "updatedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "to":{"username":"jhoy", "name":"Joe Hoy", "email":"Joe.Hoy@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-07-23T10:34:27.625216-07:00", "updatedBy":{"username":"jhoy", "name":"Joe Hoy", "email":"Joe.Hoy@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"jhoy", "name":"Joe Hoy", "email":"Joe.Hoy@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Fix checked in regression"}, {"time":"2013-08-12T18:03:33.866733-07:00", "updatedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "change":{"status":{"from":"", "to":"Closed"}, "assignTo":{"from":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}], "updatedAt":"2013-08-12T18:03:33.866733-07:00", "fixedAt":"2012-12-17T15:58:21.361063-08:00", "fixedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "shippedAt":"2013-07-23T10:34:27.625216-07:00", "shippedBy":{"username":"jhoy", "name":"Joe Hoy", "email":"Joe.Hoy@marklogic.com"}, "closedAt":"2013-08-12T18:03:33.866733-07:00", "closedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "renderDescriptionAs":"normal", "renderSampleQueryAs":"normal"}