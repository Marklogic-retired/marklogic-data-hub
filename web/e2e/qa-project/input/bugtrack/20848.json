{"id":20848, "kind":"Bug", "createdAt":"2013-02-20T11:48:06.263833-08:00", "status":"Closed", "title":"App Builder apps lack namespace awareness due to JSON limitations", "category":"App Builder", "severity":"Major", "priority":{"level":"1", "title":"Required for product release"}, "submittedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"In App Builder apps, since our JSON-based REST results do not include namespace information, we can display incorrect results content.\r\n\r\nThis was discovered by Sandy Bodzin, who was creating a demo using App Builder. The scenario...\r\n\r\n- Developer has a document set that includes an element name (e.g., \"pubName\") under multiple namespaces:\r\n\r\nns1:pubName\r\nns2:pubName\r\n\r\n- Each document has only one version of that element, e.g.:\r\n\r\ndoc1 has <ns1:pubName>foo</ns1:pubName>\r\ndoc2 has <ns2:pubName>bar</ns2:pubName>\r\n\r\nDeveloper wants to include pubName content (from whichever type the doc has) in the results metadata.\r\n\r\nIn App Builder Results section, developer sets up result metadata with two items (but only one will be relevant for each doc):\r\n\r\nmetadata = ns1:pubName + ns2:pubName\r\n\r\nDeploying the application creates a results_config JS variable, which tells the UI how the metadata should be constructed. \r\n\r\nHowever, results_config includes no namespace information, so its data looks like this:\r\n\r\n...\r\n{\"position\":\"1\", \"type\":\"value\", \"elem\":\"pubName\", \"attr\":\"\"},\r\n{\"position\":\"2\", \"type\":\"value\", \"elem\":\"pubName\", \"attr\":\"\"},\r\n...\r\n\r\nTo display the results, the app retrieves the results data via REST JSON.\r\n\r\nThe results data also has no namespace information, so it looks like this:\r\n\r\n\"index\":1\r\n...\r\n\"metadata\":[{\"pubName\":\"foo\"}\r\n...\r\n\"index\":2\r\n...\r\n\"metadata\":[{\"pubName\":\"bar\"}\r\n\r\nWe display the results metadata by plugging in the data using the results_config as our template. So...\r\n\r\nindex 1 metadata: foo foo\r\nindex 2 metadata: bar bar\r\n\r\nBecause of the lost namespace information, we get duplicate content in the results metadata.\r\n\r\nTo fix, I think we need to bring namespacing into both the results data and the results_config.\r\n\r\nPerhaps results_config could look like:\r\n\r\n{\"position\":\"1\", \"type\":\"value\", \"elem\":\"pubName\", \"attr\":\"\", \"ns\": \"ns1\"},\r\n\r\nAnd results could look like:\r\n\r\n\"metadata\":[{\"ns1:pubName\":\"foo\"}\r\n\r\nErik also mentioned getting results via XML instead of JSON. ", "samplequery":"", "sampledata":"", "version":"6.0-nightly", "tofixin":"7.0-1", "fixedin":"7.0-1", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, {"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, {"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, {"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, {"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, {"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}], "attachments":[{"name":"Example XML docs from Sandy Bodzin", "uri":"root/support/bugtracking/attachments/20848/prism.zip"}, {"name":"Missing metadata items in built app", "uri":"root/support/bugtracking/attachments/20848/20848_metadata_not_appearing.png"}, {"name":"20848_test.xml", "uri":"root/support/bugtracking/attachments/20848/20848_test.xml"}, {"name":"Case1", "uri":"root/support/bugtracking/attachments/20848/Case1.jpg"}, {"name":"Case2", "uri":"root/support/bugtracking/attachments/20848/case 2.jpg"}], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":"", "support":{"headline":"Distinguishing namespaced elements in JSON results in the REST API and Application Builder ", "supportDescription":"In the Search API, results can specify metadata to extract from documents.  The REST API can convert search results to JSON including results that contain metadata.\r\n \r\nThe REST API used only the local name when converting metadata elements to JSON keys in search results.  When two elements had the same local name but different namespaces, this approach created unresolvable ambiguity in the JSON output.  Because the Application Builder uses the REST API, this ambiguity had the effect that metadata distinguished only by namespace could appear with the wrong result in the deployed application.\r\n\r\nIn MarkLogic 7, the REST API uses the namespace uri and the local name in Clark notation as the key so metadata can always be distinguished.\r\n", "publishStatus":"Publish", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["App Builder", "mwooldri"], "changeHistory":[{"time":"2013-02-20T11:48:06.263833-08:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{"assignTo":{"from":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "to":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-20T11:51:51.171833-08:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Attaching a few sample documents from Sandy Bodzin that show this situation. See, for example, publicationName and coverDate elements, which have different namespaces across documents."}, {"time":"2013-05-07T11:36:53.915963-07:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I am not sure if this is just Jim. I am not sure if REST APIs support this. Let us talk to Erik"}, {"time":"2013-05-07T11:46:36.773737-07:00", "updatedBy":{"username":"jfuller", "name":"Jim Fuller", "email":"jim.fuller@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"this is a multidimensional issue and to fix would require coordinating across several layers. the change required in appbuilder is straightforward, Erik is probably better placed to comment on the REST side.\r\n\r\ntesting that this works with various ns (and no ns) elements could get involved.\r\n\r\n\r\n"}, {"time":"2013-07-05T17:31:39.87031-07:00", "updatedBy":{"username":"dlee", "name":"David  Lee", "email":"David.Lee@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"In my opinion if an app needs namespace aware XML query and results it shouldn't be using JSON for the query or results.  It should use XML.  \r\nIts *possible* to change the JSON representations such that namespaces are presented but the resulting JSON would get so complicated (IMHO) that it would lose any advantage over XML.\r\nEvery single member in JSON would have to be either turned into an object with a namespace sibling or re-invent namespace prefixes in JSON.\r\n\r\n\r\n"}, {"time":"2013-07-06T08:38:08.335832-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"As I recall, there were two issues.\r\n\r\nFirst, IIRC, the data modelling in the client did not allow for some occurrences in the payload.  This issue was independent of the namespaces issue.  Has that been fixed?\r\n\r\nSecond, I agree in principle with David.  Namespaces are alien to JSON APIs and models. Tunneling XML through JSON risks fragility.\r\n\r\nOne general approach would be similar to XML literals in RDF.  That is, add an option to send the extracted metadata and snippets as a JSON string so the client can parse the string as XML. \r\n\r\nHowever, I suspect AppBuilder really just wants a string associated with an identifier rather than sensitivity to the substructure of metadata.  If so, it might be better to add an option to send a JSON key-value pair, constructing the key as a Clark-notation URI and the value as the string.\r\n\r\n"}, {"time":"2013-07-07T10:24:25.548775-07:00", "updatedBy":{"username":"dlee", "name":"David  Lee", "email":"David.Lee@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Could you add some detail to this ? Qs:\r\n\r\n1) what is a Clark Notation URI ? I "}, {"time":"2013-07-07T10:26:54.548143-07:00", "updatedBy":{"username":"dlee", "name":"David  Lee", "email":"David.Lee@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Could you add some detail to this ? Qs:\r\n\r\n1) what is a Clark Notation URI ? I am thinking you mean a clark notation QName like   \"{namespace}name\"  where previously only \"name\" was used\r\n2) Is any part of the current codepath going through json:transform-to/from-json ? \r\n--> If so This might make a very useful feature.  It would be textually ugly but technicaly precise and useful to be able to specify that JSON transformations (in the custom transform) read and wrote clark-notation JSON names instead of just localname.  This would be fairly easy to implement and if controlled via"}, {"time":"2013-07-07T10:29:07.800289-07:00", "updatedBy":{"username":"dlee", "name":"David  Lee", "email":"David.Lee@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Could you add some detail to this ? Qs:\r\n\r\n1) what is a Clark Notation URI ? I am thinking you mean a clark notation QName like   \"{namespace}name\"  where previously only \"name\" was used\r\n2) Is any part of the current codepath going through json:transform-to/from-json ? \r\n--> If so This might make a very useful feature.  It would be textually ugly but technicaly precise and useful to be able to specify that JSON transformations (in the custom transform) read and wrote clark-notation JSON names instead of just localname.  This would be fairly easy to implement and if controlled via an option wouldnt break anything.  It could be a good way of handling namespace issues for JSON .  The only problem I can think of offhand would be scoping.  That is on creating XML from JSON would parent clark-notation names add to the namespace scope or only the specific element.  The former would be hard to do and probably misleading. But if namespace nodes were only added to XML where JSON explicitly used clark-notation, and in reverse only added to JSON where the namespace differed from the document default this could be a very useful feature."}, {"time":"2013-07-09T13:58:14.016934-07:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Mike,\r\n\r\nErik will be working with you on this"}, {"time":"2013-07-09T13:58:14.016934-07:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"assignTo":{"from":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "to":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-07-10T18:40:44.193556-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Notes after Mike and Erik's meeting:\r\n\r\nMike and I had a fruitful discussion this afternoon about the issue.  As Mike writes:\r\n---------------------------------\r\nTo fix this issue, we plan to add Clark notation (which specifies the namespace of an element name as a prefix) to the element name keys for metadata. This needs to occur in two places for everything to match:\r\n\r\n1. The \"elem\" properties in results_config, which define where to find the correct metadata items in the results.\r\n2. The metadata keys in the result that come back from the search endpoint. \r\n\r\nWith this in place, we should be able to distinguish elements that have the same name but different namespaces in a results set.\r\n---------------------------------\r\nA few footnotes ...\r\n\r\nThe first fix requires a change to the config JavaScript generated during the deploy; the second fix requires a change to the JSON conversion of search results.\r\n\r\nWhile the latter fix should work for the appbuilder client, the question is whether Clark notation is right for all search result clients or should be controlled by a property.  I'm inclined to think that it is appropriate for namespaced metadata elements converted to JSON.\r\n\r\nThe other question is whether a metadata element can ever have substructure.  Right now, the transform of metadata to JSON assumes that it can't.  But, when confronted with a metadata element in the jsonbasic namespace, we could try to convert the structure to JSON.  Some clients might find this useful, but it would cause appbuilder to blow up."}, {"time":"2013-07-12T11:57:43.456284-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"status":{"from":"", "to":"Fix"}, "assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true, "comment":"in process"}, {"time":"2013-07-12T11:57:43.456284-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-07-22T18:30:34.016966-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Sent fix for result title section to Mike for evaluation.\r\n\r\nUnclear on whether we need the same fix for result metadata (just a matter of applying the same change to the result titles) and / or facets (depends on whether the JavaScript uses an indexed lookup or just relies on the facet tree structure).\r\n\r\n"}, {"time":"2013-07-23T13:12:51.720597-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-07-23T13:14:22.270327-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Sent Mike updated candidate files with the change for result metadata.\r\n\r\nQuestion about naming collisions for facets still open.\r\n "}, {"time":"2013-07-24T18:47:58.803924-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Mike investigated the facets and confirmed there is no issue.  Patch in review.\r\n"}, {"time":"2013-07-24T18:47:58.803924-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-07-25T11:48:12.081177-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"147605", "paths":["xdmp/trunk/src/Modules/MarkLogic/appservices/appbuilder/deploy-noxq.xqy", "xdmp/trunk/src/Modules/MarkLogic/rest-api/lib/search-util.xqy"], "affectedBugs":[]}, "comment":"Bug:20848 use Clark notation in JSON keys for namespaced result metadata"}, {"time":"2013-07-25T11:50:03.381927-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}}}, "files":[], "show":true, "comment":"AppBuilder should now be able to use two elements with the same local name but different namespaces as either the result title or result metadata.\r\n"}, {"time":"2013-07-25T11:50:03.381927-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-09-22T23:03:11.313268-07:00", "updatedBy":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Eric\r\n\r\nWhen I configured 2 publicationName with different namespace for results in the Results tab in AppBuilder the sample result shows only for one of them. I'm not sure if I'm doing it right. Could you please take a look at it\r\nhttp://sreddy:8000/appbuilder/results.xqy?pid=14708925184048890753\r\n\r\nThanks\r\n"}, {"time":"2013-09-22T23:03:11.313268-07:00", "updatedBy":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "change":{"assignTo":{"from":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-09-23T09:23:16.660337-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"The search tab shows that the database is missing a range index for one of the publication name elements.  That might be causing problems.\r\n\r\nAlso, are you sure you have instances of the different publication name elements in the matching documents in the database?\r\n"}, {"time":"2013-09-23T09:23:38.466508-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-09-23T09:44:26.352675-07:00", "updatedBy":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Good point  the documents were missing matching instances for the publication name elements. Verified with other element 'coverDate'. Looks like bug is fixed. Thank you Erik."}, {"time":"2013-09-23T09:44:26.352675-07:00", "updatedBy":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-09-23T09:44:26.352675-07:00", "updatedBy":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "change":{"assignTo":{"from":{"username":"sreddy", "name":"Sudhakar Reddy", "email":"sreddy@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-10-30T08:43:45.619568-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{"status":{"from":"", "to":"Verify"}, "assignTo":{"from":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true, "comment":"Reopening this bug since it appears the Clark notation update isn't being applied completely with respect to the attribute-based metadata in search results in App Builder apps.\r\n\r\nAttaching a screenshot of the stock Oscar app. The default metadata items (for award and year) are missing in the results.\r\n\r\nFor the metadata items to appear correctly, the items in the REST search results need to be referenced correctly in the results_config variable (which exists in the generated app-config.js file).\r\n\r\nHere's the JSON for the award item in results_config:\r\n\r\n    \"abstract-metadata\":[{\"position\":\"1\", \"type\":\"value\", \"elem\":\"{http:\\/\\/marklogic.com\\/wikipedia}nominee\", \"attr\":\"award\"},\r\n\r\n(We see Clark notation for the award key.)\r\n\r\nHere's what appears in the search results:\r\n\r\n    \"metadata\":[{\"{http://marklogic.com/wikipedia}name\":\"Joyce Redman\"},{\"{http://marklogic.com/wikipedia}film-title\":\"Tom Jones\"},{\"nominee_award\":\"supporting-actress\"},{\"nominee_year\":1963},{\"award\":\"supporting-actress\"},{\"decade\":1963},{\"win\":false},{\"name\":\"Joyce Redman\"},{\"film\":\"Tom Jones\"}]},\r\n\r\n(The namespace info of Clark notation is missing for the award item. Clark notation does exist for the name and film-title items which are part of the title content in the search results.)\r\n\r\nSince in results config, we represent attribute range index info as element and attribute names concatenated with a \"_\", I think the key should look like this:\r\n\r\n    {http://marklogic.com/wikipedia}nominee_award\r\n\r\nFor reference, here's what the XML looks like:\r\n\r\n<wiki:nominee year=\"1971\" span=\"1\" winner=\"false\" award=\"supporting-actor\" xmlns:wiki=\"http://marklogic.com/wikipedia\">\r\n\r\nThe problem here may have to do with the fact that we create keys for data from attribute range indexes in a concatenated form. But I don't know the details of what's going on under the hood. Hoping Erik can elucidate."}, {"time":"2013-10-30T08:43:45.619568-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{"assignTo":{"from":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-10-30T08:44:52.266914-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Attaching the screen shot mentioned in previous comment."}, {"time":"2013-10-30T08:57:41.454448-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I explored a bit more with the Oscars app, and it looks like it is a problem with how we're representing data from attribute range indexes. It isn't a problem specific to the metadata section of the results. If I try to add data from an attribute range index to the results title, for example, I get the same problem (the data doesn't display in the title)."}, {"time":"2013-10-30T12:00:06.157219-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"status":{"from":"", "to":"Fix"}, "assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}}}, "files":[], "show":true, "comment":"the fix looks straightforward"}, {"time":"2013-10-30T12:33:49.235433-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Well, part of the fix is straightforward.  For <search:attribute-meta>, we just need to modify:\r\n\r\n*  impl:extract-nodes() to supplement the name and parent-name attributes with ns and parent-ns attributes\r\n*  sut:translate-metadata() to use the new attributes in the attribute-meta case\r\n*  search.rnc and search.xsd to allow the new attributes\r\n\r\nThe search:constraint-meta case is less straightforward. We may need to modify \r\n\r\n* impl:make-extractrefs() to add the constraint definition from query options to the array item\r\n* impl:extract-index-values() to use the constraint definition to add any namespaces as attributes\r\n* sut:translate-metadata() to use the new attributes in the attribute-meta case\r\n* search.rnc and search.xsd to allow the new attributes\r\n\r\nThe caution is about handling every index variant for constraint metadata. \r\n"}, {"time":"2013-10-30T13:30:29.522508-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Actually, for constraint metadata, we should be able to rely on the constraint name for uniqueness among other constraints.\r\n"}, {"time":"2013-10-30T14:55:39.780231-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Passed along a patch to Mike for initial testing -- if it seems to address the issue, I'll distribute the patch for review. \r\n"}, {"time":"2013-10-30T18:06:58.494903-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Thanks, Erik! I tested the fix in an Oscars and a non-Oscars app and everything looks OK. Colleen would like to get this fix checked in tonight in time for tomorrow's build."}, {"time":"2013-10-30T18:43:56.143211-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"155118", "paths":["xdmp/trunk/src/Config/search.xsd", "xdmp/trunk/src/Modules/MarkLogic/rest-api/lib/search-util.xqy", "xdmp/trunk/src/Config/search.rnc", "xdmp/trunk/src/Modules/MarkLogic/appservices/search/search-impl.xqy"], "affectedBugs":[]}, "comment":"Bug:20848 namespaces for attribute metadata, metadata types in JSON "}, {"time":"2013-10-30T18:48:09.66476-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}}}, "files":[], "show":true, "comment":"Mike, passing this to you so you can add the test procedures as requested by Ganesh.\r\n\r\nAs noted in email, we may want to address some additional edge cases in the future\r\non the client.  The client could use the metadata type to distinguish element and \r\nconstraint metadata.  In addition, the client could allow for multiple metadata values\r\nfor the same element or constraint.  \r\n"}, {"time":"2013-10-30T18:48:09.66476-07:00", "updatedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "to":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-10-30T20:05:56.476266-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Test the following in App Builder for adequate coverage:\r\n\r\n1. Create an Oscars application with all defaults and deploy it. The two default, hyphen-separated metadata items should appear in the results (they were missing before).\r\n\r\n2. Create a non-Oscars application using a database loaded with a single 20848_test.xml file (I made some modifications so we could test for attributes with namespaces and elements without namespaces). On the results tab in App Builder, create the following:\r\n\r\n- Title using \"name\" and \"date\" elements.\r\n- Metadata using \"nominee/@year\" and \"nominee/@award\" attributes.\r\n\r\nDeploy the app and you should see appropriate content in those areas (title and metadata) on the results page. (I.e., they shouldn't be empty.)"}, {"time":"2013-10-30T20:05:56.476266-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{"assignTo":{"from":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "to":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-10-31T12:47:08.668284-07:00", "updatedBy":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Hi MIke : \r\n\r\nI verifed the above on latest build .\r\n\r\nRefer to the screenshot attached .\r\n\r\nCase 1: Oscar : I see the hyphen-separated metadata items\r\n\r\nCase2  : Non_Oscar :  I see the hyphen-separated metadata items . \r\n\r\nCan you confirm both the screenshot looks good . SO we can go ahead and mark this ship .Thanks "}, {"time":"2013-10-31T12:52:03.551318-07:00", "updatedBy":{"username":"mwooldri", "name":"Mike Wooldridge", "email":"mike.wooldridge@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Those result screen shots look good, both case 1 and case 2. You're seeing content in all the applicable places so the bug fix works. You can mark as shipped."}, {"time":"2013-10-31T14:52:40.563174-07:00", "updatedBy":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, "to":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-10-31T14:53:49.310977-07:00", "updatedBy":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Verified on 10/31 build. Fix looks fine/.\r\n\r\nAdded a task for the automation check to be added for 7-0-2\r\n24837 \tAdd a check for the Metadata hypen between two elements \r\n\r\n"}, {"time":"2013-10-31T14:53:49.310977-07:00", "updatedBy":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}, "change":{"assignTo":{"from":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}], "updatedAt":"2013-10-31T14:53:49.310977-07:00", "fixedAt":"2013-10-30T18:48:09.66476-07:00", "fixedBy":{"username":"ehennum", "name":"Erik Hennum", "email":"erik.hennum@marklogic.com"}, "shippedAt":"2013-10-31T14:53:49.310977-07:00", "shippedBy":{"username":"gghai", "name":"Gaurav Ghai", "email":"Gaurav.ghai@marklogic.com"}, "renderDescriptionAs":"normal"}