{"id":20507, "kind":"Bug", "createdAt":"2013-01-17T14:53:05.489489-08:00", "status":"Closed", "title":"REGR: Extra namespace is added after ingesting document with rename transform using infostudio", "category":"InfoStudio UI", "severity":"Major", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"Build: 7.0-20130117\r\n\r\nSteps:\r\n=====\r\n1) Go to infostudio and create a new flow\r\n2) Use Filesystem directory collector to ingest the document. You can use Shakespeare or any document\r\n3) On the Ingestion settings, put www.test.com as the namespace\r\n4) Add a Rename transform\r\n\r\nOld element:\r\nMatch => ns1:TITLE\r\nPrefix => ns1\r\nNamespace => www.test.com\r\n\r\nNew element:\r\nMatch => NEW-TITLE \r\n\r\n5) Start the flow to load the documents\r\n6) After the load is done, go to qconsole, explore the database, and see one of the document\r\n\r\nActual Result\r\n===========\r\nThe loaded document has an extra/new namespace attribute on the renamed element\r\n<NEW-TITLE xmlns=\"\" xmlns:_1=\"www.test.com\">The Tragedy of Antony and Cleopatra</NEW-TITLE>\r\n\r\nExpected Result\r\n=============\r\nThis is a regression, previously the result doesn't have any extra namespace", "samplequery":"", "sampledata":"", "version":"7.0-nightly", "tofixin":"7.0-ea1", "fixedin":"N/A", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, {"username":"knagar", "name":"Kuldeep Nagar", "email":"Kuldeep.Nagar@marklogic.com"}, {"username":"nwalsh", "name":"Norman Walsh", "email":"norman.walsh@marklogic.com"}, {"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":"", "support":{"headline":"", "supportDescription":"", "publishStatus":"Not Ready", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["InfoStudio UI", "ayuwono"], "changeHistory":[{"time":"2013-01-17T14:53:05.489489-08:00", "updatedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "to":{"username":"nwalsh", "name":"Norman Walsh", "email":"norman.walsh@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-20T09:35:40.023347-08:00", "updatedBy":{"username":"nwalsh", "name":"Norman Walsh", "email":"norman.walsh@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Well. I'm starting to think the previous behavior was a bug. Here's the simple test case:\r\n\r\nlet $t := \r\n<xsl:stylesheet version=\"2.0\" xmlns:plugin=\"http://marklogic.com/extension/plugin\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns1=\"www.test.com\">\r\n  <xsl:template match=\"@*\"><xsl:copy-of select=\".\"/></xsl:template>\r\n  <xsl:template match=\"node()\"><xsl:copy><xsl:apply-templates select=\"@*\"/><xsl:apply-templates/></xsl:copy></xsl:template>\r\n  <xsl:template match=\"ns1:TITLE\" exclude-result-prefixes=\"#all\" xmlns:xproc=\"http://www.w3.org/ns/xproc\"><xsl:choose>\r\n      <xsl:when test=\". instance of element()\"><xsl:element name=\"NEW-TITLE\"><xsl:copy-of select=\"namespace::*\"/><xsl:apply-templates select=\"@*\"/><xsl:apply-templates/></xsl:element></xsl:when>\r\n      <xsl:when test=\". instance of attribute()\"><xsl:attribute name=\"NEW-TITLE\" select=\".\"/></xsl:when>\r\n      <xsl:when test=\". instance of processing-instruction()\"><xsl:processing-instruction name=\"NEW-TITLE\" select=\".\"/></xsl:when>\r\n      <xsl:otherwise><xsl:copy-of select=\".\"/></xsl:otherwise>\r\n    </xsl:choose></xsl:template>\r\n</xsl:stylesheet>\r\n\r\nlet $d := <doc xmlns=\"www.test.com\"><TITLE xmlns:a=\"one\" v=\"a:value\">title</TITLE></doc>\r\n\r\nreturn\r\n  xdmp:xslt-eval($t, $d)\r\n\r\nObservations:\r\n\r\n1. We have to copy the namespaces onto the new element because if we don't we might change the semantics of the document. If we don't copy the namespaces, then \"v\" on NEW-TITLE will have the value \"a:value\" but there will be no in-scope namespace for the \"a\" prefix.\r\n\r\n2. We've changed the default namespace, so copying namespaces produces a conflict, there are two URIs for \"\". So copy invents a new prefix for one of them.\r\n\r\n3. Extra namespace declarations don't cause problems for anyone using a reasonably modern tool chain.\r\n\r\n4. I don't see a small-blast-radius solution to the problem off the top of my head.\r\n\r\nMary, do you have any idea why the _1 prefix was *not* getting generated before?\r\n\r\n\r\n"}, {"time":"2013-02-20T09:35:40.023347-08:00", "updatedBy":{"username":"nwalsh", "name":"Norman Walsh", "email":"norman.walsh@marklogic.com"}, "change":{"assignTo":{"from":{"username":"nwalsh", "name":"Norman Walsh", "email":"norman.walsh@marklogic.com"}, "to":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}}}, "files":[], "show":true}, {"time":"2013-02-21T12:20:00.623217-08:00", "updatedBy":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"This is happening for a rather obscure reason (this bug is the same as Bug:20368 I believe).\r\n\r\nConsider the even-more-simplified test case:\r\nxdmp:xslt-eval(\r\n<xsl:stylesheet version=\"2.0\" xmlns:plugin=\"http://marklogic.com/extension/plugin\" xmlns:xsl\r\n=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns1=\"www.test.com\"> \r\n  <xsl:template match=\"@*\"><xsl:copy-of select=\".\"/></xsl:template> \r\n  <xsl:template match=\"node()\"><xsl:copy><xsl:apply-templates select=\"@*\"/><xsl:apply-templa\r\ntes/></xsl:copy></xsl:template> \r\n\r\n  <xsl:template match=\"ns1:TITLE\" exclude-result-prefixes=\"#all\" xmlns:xproc=\"http://www.w3.\r\norg/ns/xproc\">\r\n      <xsl:element name=\"NEW-TITLE\"><xsl:copy-of select=\"namespace::*\"/><xsl:apply-templates\r\n select=\"@*\"/><xsl:apply-templates/></xsl:element>\r\n    </xsl:template> \r\n</xsl:stylesheet> \r\n ,\r\n <doc xmlns=\"www.test.com\"><TITLE xmlns:a=\"one\" v=\"a:value\">title</TITLE></doc> );\r\n\r\nIn 5.0:\r\nWhen the optimizer calls bind() on the body of the template for node() that leads to a bind() and then a simplify() of the shallow copy, which leads to a bind() and simplify() on the apply-templates expression. This in turn leads to a bind of the deep copy. Now, in 5.0, the contents of the deep copy expression is seen as a Literal, which is simple, which can then be evaluated.  So in 5.0, the deep-copy expression is evaluated before the shallow-copy expression. However, in 6.0 and 7.0, we get a singleton ExprSequence instead, which is seen as NOT simple, and therefore we do not evaluate it in bind/simplify. So we see the shallow-copy and element constructor first. Some details of how we check for namespace duplicate prefixes that need prefixes generated for them are such that when we come up from the bottom in this way, we didn't see it as a conflict.\r\n\r\nIn sum:\r\n5.0 was misbehaving in not recognizing the prefix conflict, I think.\r\n6.0/7.0 are losing out on a class of optimizations, although it isn't clear that the aggressiveness of the 5.0-style template bind/simplify wasn't causing its own problems under some circumstances.\r\n"}, {"time":"2013-02-22T15:03:11.293123-08:00", "updatedBy":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"I'm proposing that we close this as \"doing a righter thing now\"."}, {"time":"2013-02-22T15:03:11.293123-08:00", "updatedBy":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}, "change":{"assignTo":{"from":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}, "to":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-28T11:58:11.838839-08:00", "updatedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "change":{"status":{"from":"", "to":"Closed"}, "assignTo":{"from":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-28T11:58:11.838839-08:00", "updatedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}], "updatedAt":"2013-02-28T11:58:11.838839-08:00", "closedAt":"2013-02-28T11:58:11.838839-08:00", "closedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "renderDescriptionAs":"normal"}