{"id":20805, "kind":"Bug", "createdAt":"2012-12-19T01:50:05.085847-08:00", "status":"Closed", "title":"Segmentation fault on 6.0 linux64 cluster for test pitr-forest-rollback.xml", "category":"xdmp", "severity":"Critical", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"iagrawal", "name":"Isha Agrawal", "email":"iagrawal@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"Segmentation fault on 6.0 linux64 cluster for test pitr-forest-rollback.xml\r\n  \r\nMachine: rh5-intel64-51-test-3\r\nTest: pitr-forest-rollback.xml\r\nPath to logs: /space/builder/builds/linux64/b6_0/logs.manual.20121218/reg-results/\r\nPath to results file: /space/builder/builds/linux64/b6_0/logs.manual.20121218/reg-results/results\r\nPath to ErrorLog: /space/builder/builds/linux64/b6_0/logs.manual.20121218/reg-results/ErrorLog-test-1-1.txt\r\nMLVersion: 6.0-20121218\r\n   \r\n     \r\nThread causing Segmentation fault:\r\n \r\nThread 8 (Thread 0x42c2a940 (LWP 31523)):\r\n#0 0x0000003d9820e6ef in waitpid () from /lib64/libpthread.so.0\r\n#1 0x00000000029bf7e9 in xdmp::pstack(char const*) ()\r\n#2 0x00000000029bf9ea in sigsegvHandler ()\r\n#3 0x00002b1a72b126cd in call_chained_handler(sigaction*, int, siginfo*, void*) () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#4 0x00002b1a72b0f61b in os::Linux::chained_handler(int, siginfo*, void*) () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#5 0x00002b1a72b13180 in JVM_handle_linux_signal () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#6 0x00002b1a72b0f52e in signalHandler(int, siginfo*, void*) () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#7 < signal handler called >\r\n#8 0x0000003d9c29ca2b in std::basic_string< char, std::char_traits, std::allocator >::assign(std::basic_string, std::allocator > const&) () from /usr/lib64/libstdc++.so.6\r\n#9 0x0000000001c226b7 in xdmp::BackupManager::findBackupPath(xdmp::LocationInfo const&, xdmp::DynamicEnv const&, svc::Handle< xdmp::StaticEnv > const&, std::basic_string, std::allocator > const&, unsigned long, svc::Hash64Set const&, bool) ()\r\n#10 0x0000000001ae7646 in xdmp::xdmp_database_restore(svc::Handle< xdmp::FiveArgBuiltinExpr > const&, xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&) ()\r\n#11 0x0000000001c6ec50 in xdmp::FiveArgBuiltinExpr::_eval(xdmp::DynamicEnv&, std::vector< svc::Handle, std::allocator<svc::Handle > > const&, svc::Handle&) const ()\r\n#12 0x0000000001c6dc1e in xdmp::BuiltinEnv::doEval() ()\r\n#13 0x0000000001c850ef in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#14 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#15 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#16 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#17 0x0000000001c87c14 in xdmp::BuiltinExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#18 0x00000000018bb1d9 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#19 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#20 0x000000000186d1f8 in xdmp::FLWORExpr::evalTail(xdmp::DynamicEnv&, xdmp::ValueAccumulator&, svc::Handle< xdmp::TailCall >&) const ()\r\n#21 0x000000000187c61f in xdmp::StatementExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#22 0x0000000002ed3ac7 in xdmp::MainModule::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#23 0x0000000002efcb3a in xdmp::Statement::_eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, bool&) const ()\r\n#24 0x0000000002efd5b9 in xdmp::Statement::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*) const ()\r\n#25 0x0000000002efe0aa in xdmp::Program::eval(xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*, bool, std::vector<svc::Handle, std::allocator<svc::Handle > >*) const ()\r\n#26 0x0000000001eaf047 in xdmp::evalProgram(xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, bool, svc::Handle const&, char const*) ()\r\n#27 0x0000000001f3fb2b in xdmp::doEval(svc::Handle< xdmp::Expr > const&, xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, bool) ()\r\n#28 0x0000000001f40f6c in xdmp::xdmp_eval(svc::Handle< xdmp::FourArgBuiltinExpr > const&, xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&) ()\r\n#29 0x0000000001c6eff7 in xdmp::FourArgBuiltinExpr::_eval(xdmp::DynamicEnv&, std::vector< svc::Handle, std::allocator<svc::Handle > > const&, svc::Handle&) const ()\r\n#30 0x0000000001c6dc1e in xdmp::BuiltinEnv::doEval() ()\r\n#31 0x0000000001c850ef in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#32 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#33 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#34 0x0000000001c87c14 in xdmp::BuiltinExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#35 0x000000000188545c in xdmp::FunctionCall::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#36 0x00000000018bb1d9 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#37 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#38 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#39 0x000000000186d1f8 in xdmp::FLWORExpr::evalTail(xdmp::DynamicEnv&, xdmp::ValueAccumulator&, svc::Handle< xdmp::TailCall >&) const ()\r\n#40 0x000000000187c61f in xdmp::StatementExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#41 0x0000000002ed3ac7 in xdmp::MainModule::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#42 0x0000000002efcb3a in xdmp::Statement::_eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, bool&) const ()\r\n#43 0x0000000002efd5b9 in xdmp::Statement::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*) const ()\r\n#44 0x0000000002efe0aa in xdmp::Program::eval(xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*, bool, std::vector<svc::Handle, std::allocator<svc::Handle > >*) const ()\r\n#45 0x0000000002e1104b in xdmp::XDBCConnectionTask::handleEval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle, bool, xdmp::Dialect) ()\r\n#46 0x0000000002e1504e in xdmp::XDBCConnectionTask::handleConnection() ()\r\n#47 0x0000000002e1839a in xdmp::XDBCConnectionTask::run() ()\r\n#48 0x00000000030d9700 in svc::PooledThread::run() ()\r\n#49 0x00000000030d6c58 in svc::Thread::top() ()\r\n#50 0x00000000030d7819 in runThread ()\r\n#51 0x0000003d9820673d in start_thread () from /lib64/libpthread.so.0\r\n#52 0x0000003d976d44bd in clone () from /lib64/libc.so.6\r\n\t\r\n \r\n    \r\nComplete stack trace:\r\n \r\nThread 2 (Thread 0x42b8c940 (LWP 30677)):\r\n#0 0x0000003d9820e6ef in waitpid () from /lib64/libpthread.so.0\r\n#1 0x00000000029bf7e9 in xdmp::pstack(char const*) ()\r\n#2 0x00000000029bf9ea in sigsegvHandler ()\r\n#3 0x00002b07f9b126cd in call_chained_handler(sigaction*, int, siginfo*, void*) () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#4 0x00002b07f9b0f61b in os::Linux::chained_handler(int, siginfo*, void*) () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#5 0x00002b07f9b13180 in JVM_handle_linux_signal () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#6 0x00002b07f9b0f52e in signalHandler(int, siginfo*, void*) () from /space/java6/jre/lib/amd64/server/libjvm.so\r\n#7 < signal handler called >\r\n#8 0x0000003d9c29ca2b in std::basic_string< char, std::char_traits, std::allocator >::assign(std::basic_string, std::allocator > const&) () from /usr/lib64/libstdc++.so.6\r\n#9 0x0000000001c226b7 in xdmp::BackupManager::findBackupPath(xdmp::LocationInfo const&, xdmp::DynamicEnv const&, svc::Handle< xdmp::StaticEnv > const&, std::basic_string, std::allocator > const&, unsigned long, svc::Hash64Set const&, bool) ()\r\n#10 0x0000000001ae7646 in xdmp::xdmp_database_restore(svc::Handle< xdmp::FiveArgBuiltinExpr > const&, xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&) ()\r\n#11 0x0000000001c6ec50 in xdmp::FiveArgBuiltinExpr::_eval(xdmp::DynamicEnv&, std::vector< svc::Handle, std::allocator<svc::Handle > > const&, svc::Handle&) const ()\r\n#12 0x0000000001c6dc1e in xdmp::BuiltinEnv::doEval() ()\r\n#13 0x0000000001c850ef in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#14 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#15 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#16 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#17 0x0000000001c87c14 in xdmp::BuiltinExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#18 0x00000000018bb1d9 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#19 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#20 0x000000000186d1f8 in xdmp::FLWORExpr::evalTail(xdmp::DynamicEnv&, xdmp::ValueAccumulator&, svc::Handle< xdmp::TailCall >&) const ()\r\n#21 0x000000000187c61f in xdmp::StatementExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#22 0x000000000185e762 in xdmp::Expr::evalCompletely(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#23 0x0000000002ed3a40 in xdmp::MainModule::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#24 0x0000000002efcb3a in xdmp::Statement::_eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, bool&) const ()\r\n#25 0x0000000002efd543 in xdmp::Statement::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*) const ()\r\n#26 0x0000000002efe0aa in xdmp::Program::eval(xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*, bool, std::vector<svc::Handle, std::allocator<svc::Handle > >*) const ()\r\n#27 0x0000000001eaf047 in xdmp::evalProgram(xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, bool, svc::Handle const&, char const*) ()\r\n#28 0x0000000001f3fb2b in xdmp::doEval(svc::Handle< xdmp::Expr > const&, xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, bool) ()\r\n#29 0x0000000001f40f6c in xdmp::xdmp_eval(svc::Handle< xdmp::FourArgBuiltinExpr > const&, xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&, svc::Handle const&) ()\r\n#30 0x0000000001c6eff7 in xdmp::FourArgBuiltinExpr::_eval(xdmp::DynamicEnv&, std::vector< svc::Handle, std::allocator<svc::Handle > > const&, svc::Handle&) const ()\r\n#31 0x0000000001c6dc1e in xdmp::BuiltinEnv::doEval() ()\r\n#32 0x0000000001c850ef in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#33 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#34 0x0000000001c84fdc in xdmp::Value::builtinArg(xdmp::BuiltinEnv&) const ()\r\n#35 0x0000000001c87c14 in xdmp::BuiltinExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#36 0x000000000188545c in xdmp::FunctionCall::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#37 0x00000000018bb1d9 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#38 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#39 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#40 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#41 0x00000000018bb0d0 in xdmp::LetClause::flworEval(xdmp::FLWOREnv&, xdmp::FLWORExpr const&, unsigned long) const ()\r\n#42 0x000000000186d1f8 in xdmp::FLWORExpr::evalTail(xdmp::DynamicEnv&, xdmp::ValueAccumulator&, svc::Handle< xdmp::TailCall >&) const ()\r\n#43 0x000000000187c61f in xdmp::StatementExpr::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#44 0x0000000002ed3ac7 in xdmp::MainModule::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::Value >&) const ()\r\n#45 0x0000000002efcb3a in xdmp::Statement::_eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, bool&) const ()\r\n#46 0x0000000002efd5b9 in xdmp::Statement::eval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*) const ()\r\n#47 0x0000000002efe0aa in xdmp::Program::eval(xdmp::LocationInfo const&, xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle const&, char const*, bool, std::vector<svc::Handle, std::allocator<svc::Handle > >*) const ()\r\n#48 0x0000000002e1104b in xdmp::XDBCConnectionTask::handleEval(xdmp::DynamicEnv&, svc::Handle< xdmp::StaticEnv > const&, svc::Handle, bool, xdmp::Dialect) ()\r\n#49 0x0000000002e1504e in xdmp::XDBCConnectionTask::handleConnection() ()\r\n#50 0x0000000002e1839a in xdmp::XDBCConnectionTask::run() ()\r\n#51 0x00000000030d9700 in svc::PooledThread::run() ()\r\n#52 0x00000000030d6c58 in svc::Thread::top() ()\r\n#53 0x00000000030d7819 in runThread ()\r\n#54 0x0000003d9820673d in start_thread () from /lib64/libpthread.so.0\r\n#55 0x0000003d976d44bd in clone () from /lib64/libc.so.6\t\r\n", "samplequery":"xquery version \"1.0-ml\";\r\nimport module namespace ptr=\"http://marklogic.com/qa\" at \"/journalarchivelib.xqy\";\r\n        let $query:= 'xquery version \"1.0-ml\";\r\n                        import module namespace ptr=\"http://marklogic.com/qa\" at \"/journalarchivelib.xqy\";\r\n                       declare variable $ts as xs:dateTime external;\r\n                         let $log :=xdmp:log(\"*** restore after rollbacks started ***\")\r\n                             let $id := xdmp:database-restore(xdmp:database-forests(xdmp:database(\"pitr_rollbackDB\")),\"TMP_DIR/backupdb\",xs:dateTime($ts),true())\r\n                              return\r\n                                $id    '\r\n        let $ts := xs:dateTime(doc(\"/timestamps.xml\")/ts/ts-second-after/text())\r\n        let $id:=ptr:eval-query($query,(xs:QName(\"ts\"),$ts),\"pitr_rollbackDB\")\r\n        let $restore1 := ptr:wait-for-restore-to-complete($id,\"pitr_rollbackDB\",0)//*:status/text()\r\n        let $rlback :=ptr:do-forest-rollback-to-safe-timestamp(\"pitr_rollbackDB\",$id)\r\n        let $wait-forest1-to-open := ptr:wait-for-forest-restore-state-to-open(\"pitr_rollbackF1\",\"pitr_rollbackDB\",0)\r\n        let $wait-forest2-to-open := ptr:wait-for-forest-restore-state-to-open(\"pitr_rollbackF2\",\"pitr_rollbackDB\",0)\r\n\r\n        let $log := xdmp:log(concat(\"*** restore completed***\",$ts))\r\n        let $res := xdmp:eval(' xdmp:sleep(5000);for $uri in doc()\r\n                            return\r\n                            fn:base-uri($uri)',(),\r\n                <options xmlns=\"xdmp:eval\">\r\n                  <database>{xdmp:database(\"pitr_rollbackDB\")}</database>\r\n                </options>)\r\n\r\n       return\r\n         (\"restore : \", $restore1,\" final uri's after recovery : \", $res )", "sampledata":"", "version":"7.0-nightly", "tofixin":"7.0-ea1", "fixedin":"7.0-ea1", "platform":"linux(64-bit)", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"iagrawal", "name":"Isha Agrawal", "email":"iagrawal@marklogic.com"}, {"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, {"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, {"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, {"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":20308, "support":{"headline":"", "supportDescription":"", "publishStatus":"Not Ready", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["xdmp", "iagrawal"], "changeHistory":[{"time":"2012-12-19T01:50:05.085847-08:00", "updatedBy":{"username":"iagrawal", "name":"Isha Agrawal", "email":"iagrawal@marklogic.com"}, "change":{"assignTo":{"from":{"username":"iagrawal", "name":"Isha Agrawal", "email":"iagrawal@marklogic.com"}, "to":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-19T11:24:05.864897-08:00", "updatedBy":{"username":"dsokolsky", "name":"Danny Sokolsky", "email":"dsokolsky@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-01-02T15:07:48.798332-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"assignTo":{"from":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "to":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-14T22:03:36.956393-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"assignTo":{"from":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "to":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-15T11:40:28.464358-08:00", "updatedBy":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"131963", "paths":["xdmp/trunk/src/Backup.cpp"], "affectedBugs":[]}, "comment":"bug:20805 fix seg fault in backup"}, {"time":"2013-02-15T11:41:14.2756-08:00", "updatedBy":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, "to":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}}}, "files":[], "show":true, "comment":"The segmentation fault is fixed.\r\nThe test pitr-forest-rollback.xml still fails with cluster.\r\nI think the problem is in the test itself.\r\nIt should not backup a database on a host without a forest of the database."}, {"time":"2013-02-15T11:41:14.2756-08:00", "updatedBy":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, "change":{"assignTo":{"from":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, "to":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-02T10:45:34.713594-08:00", "updatedBy":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}, "change":{"assignTo":{"from":{"username":"rpolasani", "name":"Raghu Polasani", "email":"raghu.polasani@marklogic.com"}, "to":{"username":"skottam", "name":"Sravan Kottam", "email":"Sravan.Kottam@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-04T10:30:01.548259-08:00", "updatedBy":{"username":"skottam", "name":"Sravan Kottam", "email":"Sravan.Kottam@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I think we fixed the issue of not able to take a backup from E-node, will check to see why test is failing."}, {"time":"2013-03-06T17:00:07.759285-08:00", "updatedBy":{"username":"skottam", "name":"Sravan Kottam", "email":"Sravan.Kottam@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"skottam", "name":"Sravan Kottam", "email":"Sravan.Kottam@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"verified on the build 7.0-20130306 and I dont see any segmentation faults but tests are failing, I have logged a separate bug 21077 for it."}], "updatedAt":"2013-03-06T17:00:07.759285-08:00", "fixedAt":"2013-02-15T11:41:14.2756-08:00", "fixedBy":{"username":"atsoi", "name":"Arthur Tsoi", "email":"arthur.tsoi@marklogic.com"}, "shippedAt":"2013-03-06T17:00:07.759285-08:00", "shippedBy":{"username":"skottam", "name":"Sravan Kottam", "email":"Sravan.Kottam@marklogic.com"}, "renderDescriptionAs":"normal", "renderSampleQueryAs":"normal"}