{"id":20368, "kind":"Bug", "createdAt":"2013-01-02T21:23:28.551855-08:00", "status":"Will not fix", "title":"Extra namespaces getting generated when using XSL", "category":"XSLT", "severity":"", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"dchander", "name":"Dinesh Chander", "email":"dinesh.chander@globallogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"Reported by user in case #12290.\r\n\r\nML is generating extra namespaces when using XSL as compared to Saxon where we can see only one namespace. This behavior is consistent across all ML versions.", "samplequery":"Here's the query that depicts this behavior.\r\n\r\n (: Please use the correct path of functx-1.0-nodoc-2007-01.xsl in the include below :)\r\nlet $foo-to-bar :=\r\n<xsl:stylesheet \r\n  xpath-default-namespace=\"http://www.rsc.org/schema/rscart38\" \r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"  \r\n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  \r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  \r\n  xmlns:fn=\"http://www.w3.org/2005/xpath-functions\"  \r\n  xmlns:functx=\"http://www.functx.com\"  \r\n  xmlns=\"http://www.rsc.org/schema/rscart38\"  \r\n  xmlns:cts=\"http://marklogic.com/cts\"  \r\n  xmlns:xdmp=\"http://marklogic.com/xdmp\"  \r\n  xmlns:fx=\"http://www.rsc.org/schema/XSL/functions\" \r\n  exclude-result-prefixes=\"functx xsi xs fn \" \r\n  version=\"2.0\" >\r\n  \r\n  <xsl:include href=\"functx-1.0-nodoc-2007-01.xsl\"/>\r\n  \r\n  <xsl:template match=\"*:e\">\r\n    <xsl:sequence select=\"functx:change-element-ns-deep(., 'http://www.example.org', '')\" />\r\n  </xsl:template>\r\n  \r\n</xsl:stylesheet>\r\nreturn xdmp:xslt-eval($foo-to-bar,\r\n  <stuff>\r\n      <e>42</e>\r\n  </stuff>)\r\n\r\nHere's the output when this XML is transformed in SAXON.\r\n<e xmlns=\"http://www.example.org\">42</e>\r\n\r\nWith ML we get\r\n<e xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:local=\"http://www.datypic.com/local\" xmlns:functx=\"http://www.functx.com\" xmlns=\"http://www.example.org\">42</e>", "sampledata":"", "version":"6.0-2.1", "tofixin":"N/A", "fixedin":"N/A", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"dchander", "name":"Dinesh Chander", "email":"dinesh.chander@globallogic.com"}, {"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":"", "support":{"headline":"", "supportDescription":"", "publishStatus":"Not Ready", "tickets":[], "customerImpact":{"level":"Medium", "title":"Requires significant or unnatural effort to work around issue or to prevent significant business impact"}, "workaround":""}, "tags":["XSLT", "dchander"], "changeHistory":[{"time":"2013-01-11T18:43:07.877068-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"status":{"from":"", "to":"Verify"}, "assignTo":{"from":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "to":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}}}, "files":[], "show":true, "comment":"Wayne,\r\n\r\nIn absence of Ron, assigning this to you to be assigned to the right server engineer, "}, {"time":"2013-01-11T18:43:07.877068-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"assignTo":{"from":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "to":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-01-11T18:43:07.877068-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-01-16T20:40:05.484198-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Mary, can you triage this further and assign to someone else if appropriate?"}, {"time":"2013-01-16T20:40:05.484198-08:00", "updatedBy":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "change":{"assignTo":{"from":{"username":"wfeick", "name":"Wayne Feick", "email":"wfeick@marklogic.com"}, "to":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}}}, "files":[], "show":true}, {"time":"2013-01-24T13:35:16.142831-08:00", "updatedBy":{"username":"mary", "name":"Mary Holstege", "email":"mary@cerisent.com"}, "change":{}, "files":[], "show":true, "comment":"I see no justification for excluding the prefixes fn, local, or funcx from the final result. The included stylesheet is where the elements are being constructed and in that stylesheet those prefixes are defined and in scope but not defined as excluded. The XSLT spec says that the exclude-result-prefixes attribute has to appear on the literal result element or one of its ancestors to be excluded, and that is not the case.\r\n\r\nIs Saxon running the same exact functx stylesheet module? Should we be adding appropriate exclude-result-prefixes to the one under Modules/MarkLogic/functx?"}, {"time":"2013-02-25T11:07:54.689448-08:00", "updatedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Mary is this a bug or FAD?  if bug, should it be fixed in 6.0-3? "}, {"time":"2013-02-25T15:03:58.471447-08:00", "updatedBy":{"username":"nwalsh", "name":"Norman Walsh", "email":"norman.walsh@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"After spending some time reading the spec and looking at the stylesheets, I think we're doing exactly what the spec says we should be doing.\r\n\r\n1. In the xsl:element instruction in functx-1.0-nodoc-2007-01.xsl, namespaces are inherited except for dxmlf and xs.\r\n2. In the outer stylesheet, there's no literal element constructor so exclude-result-prefixes doesn't apply.\r\n\r\nI'll ask Mike if he can explain why Saxon gets the results it does.\r\n"}, {"time":"2013-02-28T12:00:43.489363-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Will not fix this per Norm's comment above."}, {"time":"2013-02-28T12:00:43.489363-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"status":{"from":"", "to":"Will not fix"}, "assignTo":{"from":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-02-28T12:00:43.489363-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"tofixin":{"from":"6.0-3", "to":"N/A"}}, "files":[], "show":true}], "updatedAt":"2013-02-28T12:00:43.489363-08:00", "renderDescriptionAs":"normal", "renderSampleQueryAs":"normal"}