{"id":20694, "kind":"Task", "createdAt":"2012-11-21T10:34:05.906084-08:00", "status":"Closed", "title":"Multi-threaded load within one split.", "category":"mlcp", "severity":"Major", "priority":{"level":"5", "title":""}, "days":null, "period":{"startDate":null, "endDate":null}, "submittedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"Need to implement multi-threaded ingestion within one input split.  This is especially useful when the input is large zip files or large aggregate/csv files.  XQSync uses a producer/consumer model to achieve higher throughput when the zip files are huge. ", "samplequery":"", "sampledata":"", "version":"6.0-nightly", "tofixin":"6.0-3", "fixedin":"6.0-3", "platform":"all", "memory":"", "processors":"", "note":"", "subscribers":[{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, {"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}], "attachments":[], "includeInTaskList":false, "proceduralTasks":{"Requirements Task":[], "Functional Specification Task":[], "Test Specification Task":[], "Test Automation Task":[], "Documentation Task":[]}, "subTasks":[], "tags":["mlcp", "jchen"], "changeHistory":[{"time":"2012-11-21T10:34:05.906084-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{"assignTo":{"from":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "to":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-11-26T13:48:28.049147-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Please take a look at com.marklogic.test.MultithreadedZipContentLoader."}, {"time":"2012-11-26T13:48:28.049147-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{"assignTo":{"from":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "to":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-07T15:47:00.111359-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Implemented a prototype of mutil-writer MultithreadedMapper. Finally got rid of the data race problem.\r\nRunning test to see if it solves long tail."}, {"time":"2012-12-07T20:28:00.980665-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Preliminary tests show mlcp with MultithreadedMapper enabled solves long tail problem. It doesn't get stuck at the last few percentage completion any more.\r\n\r\nmlcp  with 2 threads per map is 18% faster than xqsync.\r\n\r\ntool        fast load/inforest        data set         # doc inserted        #forest per node         # node         # server threads        keep alive timeout         # thread        #threads per map        batch_size        txn_size        elapsed time        ingestion rate (doc/s)\r\nmlcp        yes        original cpox        11513673        2        10        128        0        128        N/A        10        1        2731        4216\r\nmlcp-new        yes        original cpox        11513673        2        10        128        0        64        2        10        1        2424        4750\r\nxqsync        no        original cpox        11513673        2        10        128        0        128        N/A        10        1        2941        3915\r\nxqsync        yes        original cpox        11513673        2        10        128        0        128        N/A        10        1        2858        4029\r\n"}, {"time":"2012-12-07T20:48:42.785866-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"This sounds good. Let's see if this also helps with the aggregate and csv data."}, {"time":"2012-12-28T19:29:19.013441-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"125858", "paths":["xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/MultithreadedWriteMapper.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/ConfigConstants.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/Command.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/LocalJobRunner.java"], "affectedBugs":[]}, "comment":"Bug:20133\n-initial check in for MultithreadedWriteMapper\n-new options"}, {"time":"2012-12-28T21:32:55.130558-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"My comments for the above:\r\n\r\nAries,\r\n\r\nI’m afraid I don’t quite understand the rationale behind the thread_cap_map.  It seems that you are overriding the thread_per_map setting if thread_cap_map is set, which is confusing to me.\r\n\r\nI was getting 6245 docs/sec without your change.  The batch size I used is the system default, and is the one that is used for our mlcp performance tests for each release.  The throughput is significantly higher than any of the numbers you show below.  I think we need to make sure that our default for thread-per-map introduces no performance degradations.  And if you get errors with batch size 100, you should find out what is causing it.  \r\n\r\nJane\r\n\r\nI still found your choice of default based on cpox ingestion with that particular set of configuration quite arbitrary:\r\n\r\n-\tIt doesn’t prove that we are not going to introduce performance degradations for cpox ingestion.\r\n-\tIt doesn’t look at the split size, the input type or the server config.  For example, will it work well with a bunch of small csv files, or uncompressed documents?\r\n\r\nIf we really don’t want to be intelligent in picking a default, let’s just be really conservative and pick a default that works for most situations, especially since this is going to be an upgrade of an existing release.  Let’s make sure that we don’t break what’s already working, and not just optimize for cpox ingestion (or cpox ingestion for a certain configuration)."}, {"time":"2012-12-28T22:54:38.15149-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I have not reviewed the code.  Here's some comment based on our discussions and your checkin notice.  Given that we haven't tested against any other type of input except cpox, I'd suggest that we do the following:\r\n\r\n1) Rename MultithreadedWriteMapper to MultiThreadedWriterMapper.\r\n2) Change thread_per_map to thread_count_per_split.\r\n2) Use MultithreadedWriterMapper if thread_count_per_split is set, or if thread_count is greater than the number of input splits.  Otherwise, use the old DocumentMapper to ensure compatible performance with previous releases.\r\n\r\nI'll review the code and provide more input when the above changes are made."}, {"time":"2012-12-28T22:55:48.534034-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Inherited from the setting from sgi tests, batch 10 was used for my tests of MultithreadedWriteMapper. Results show significant performance improvement for ingesting cpox data. I was not able to get successful run using batch size 100 was because of server errors (XDMP-FORESTNOT: Forest Security not available\t\t\t\t\r\n) caused by not enough space on the device where the security forest stores. It is orthogonal to the changes I made. I haven't got the cluster to run the tests again since then. I plan to do so once the cluster is available.\r\n\r\nThe policy of assigning threads per map and how to enforce thread's cap per map is debatable. This check is simply an initial check in, as shown in the check-in comment."}, {"time":"2012-12-28T22:58:58.164768-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Current implementation has the logic \"Use MultithreadedWriterMapper if thread_count_per_split is set\"\r\n\r\nDocumentMapper is still the default. Should have compatible performance with previous releases."}, {"time":"2013-01-08T13:04:54.329892-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"127115", "paths":["xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/AggregateXMLReader.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/ConfigConstants.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/MultithreadedWriteMapper.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/MultithreadedWriterMapper.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/Command.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/LocalJobRunner.java"], "affectedBugs":[]}, "comment":"bug:20133\n1) Rename MultithreadedWriteMapper to MultiThreadedWriterMapper.\n2) Change thread_per_map to thread_count_per_split; remove thread_cap_map\n3) MultiThreadedWriterMapper will be used if thread_count_per_split is set to a value that is greater than 1 (both local and distributed mode).\nin local mode, if thread_count_per_split is not set, MultiThreadedWriterMapper will be used if thread_count > #splits\n4) log warning for the inaccurate progress info if aggregate xml is larger than 2GB."}, {"time":"2013-01-16T23:50:27.731836-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"128047", "paths":["xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/MultithreadedWriterMapper.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/MultithreadedMapper.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/ConfigConstants.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/Command.java", "xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/LocalJobRunner.java"], "affectedBugs":[]}, "comment":"Bug:20133\n1) mapper thread does read and write in addition to scheduling\n2) code refactor"}, {"time":"2013-01-18T11:16:32.084958-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"128303", "paths":["xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/AggregateXMLReader.java", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/TestImportDelimitedText.java", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/TestDistributedImportDocs.java", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/TestCopy.java", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/TestDistributedImportAggregate.java", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/Constants.java", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/TestImportDocs.java", "xcc/trunk/mlcp/src/test/resources/csv/1.tpch", "xcc/trunk/mlcp/src/test/java/com/marklogic/contentpump/TestImportAggregate.java", "xcc/trunk/mlcp/src/test/resources/zips/wiki.zip", "xcc/trunk/mlcp/src/test/resources/csv/1.pipe", "xcc/trunk/mlcp/src/test/resources/zips/wiki2.zip", "xcc/trunk/mlcp/src/test/resources/zips"], "affectedBugs":[]}, "comment":"Bug:20133\n1) improve logging in AggregateXMLReader\n2) test cases"}, {"time":"2013-01-26T11:12:52.116389-08:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I'd like this change to be both in 7.0-ea1 and also 6.0-3, since this addresses an issue we observed with an 6.0.1 mlcp during performance test."}, {"time":"2013-02-04T10:56:07.527941-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"130564", "paths":["xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/AggregateXMLReader.java"], "affectedBugs":[]}, "comment":"Bug:20133\nminor change in logging when aggregate file is larger than 2GB"}, {"time":"2013-02-04T10:57:13.574183-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"130565", "paths":["xcc/trunk/mlcp/src/main/java/com/marklogic/contentpump/AggregateXMLReader.java"], "affectedBugs":[]}, "comment":"Bug:20133\nminor change in logging when aggregate file is larger than 2GB"}, {"time":"2013-02-04T11:22:44.596663-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"I had an impression this task was only for ML 7. It also makes sense to me to back port it to b6_0 since this addresses an issue we observed with an 6.0.1 mlcp during performance test.\r\n\r\nWill back port this to b6_0 when bug 20645 is verified so that we do not add complexity of the bug verification."}, {"time":"2013-02-04T11:23:05.395144-08:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-02-27T13:01:13.901786-08:00", "updatedBy":{"username":"rhu", "name":"Ron Hu", "email":"ron.hu@marklogic.com"}, "change":{"tofixin":{"from":"6.0-3", "to":"6.0-4"}}, "files":[], "show":true}, {"time":"2013-03-11T11:03:12.747706-07:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Got Ron's approval to bring this back to 6.0-3."}, {"time":"2013-03-11T11:03:12.747706-07:00", "updatedBy":{"username":"jchen", "name":"Jane Chen", "email":"jane.chen@marklogic.com"}, "change":{"tofixin":{"from":"6.0-4", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-03-15T13:25:42.570214-07:00", "updatedBy":{"username":"rpelton", "name":"Rick Pelton", "email":"rick.pelton@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"do this in 6.0-3"}, {"time":"2013-03-22T14:55:24.204918-07:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"related bugs: 20980,20947.\r\n"}, {"time":"2013-03-22T16:50:49.019779-07:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"137526", "paths":["xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/DatabaseContentOutputFormat.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/InputType.java", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/TestDistributedImportAggregate.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/CombineDocumentInputFormat.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/CombineDocumentReader.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/ConfigConstants.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/BaseMapper.java", "xcc/branches/b6_0/mlcp/src/test/resources/csv/1.pipe", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/TestDistributedImportDocs.java", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/TestImportDocs.java", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/TestCopy.java", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/TestImportAggregate.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/CompressedDocumentInputFormat.java", "xcc/branches/b6_0/mlcp/src/test/resources/zips", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/MultithreadedMapper.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/DocumentMapper.java", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/TestImportDelimitedText.java", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/Command.java", "xcc/branches/b6_0/mlcp/src/test/java/com/marklogic/contentpump/Utils.java", "xcc/branches/b6_0/mlcp/src/test/resources/csv/1.tpch", "xcc/branches/b6_0/mlcp/src/main/java/com/marklogic/contentpump/LocalJobRunner.java"], "affectedBugs":[]}, "comment":"bug:20694\nsupport Multi-threaded load within one split"}, {"time":"2013-03-22T16:55:04.111784-07:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true, "comment":"Please test it using the same test(s) you added for 20133."}, {"time":"2013-03-22T16:55:04.111784-07:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "to":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-25T14:04:31.827369-07:00", "updatedBy":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, "change":{"status":{"from":null, "to":"Ship"}, "assignTo":{"from":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Verified on build 6.0-20130325"}, {"time":"2013-03-26T11:02:16.930396-07:00", "updatedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"changes in 21296 needs to be back ported to 6."}], "updatedAt":"2013-03-26T11:02:16.930396-07:00", "fixedAt":"2013-03-22T16:55:04.111784-07:00", "fixedBy":{"username":"ali", "name":"Aries Li", "email":"ali@marklogic.com"}, "shippedAt":"2013-03-25T14:04:31.827369-07:00", "shippedBy":{"username":"lratcliff", "name":"Larry Ratcliff", "email":"lratcliff@marklogic.com"}}