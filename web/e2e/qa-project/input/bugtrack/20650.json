{"id":20650, "kind":"Bug", "createdAt":"2012-12-05T06:12:13.262354-08:00", "status":"Closed", "title":"Search option additional-query does not use in-scope namespace prefix", "category":"Search API", "severity":"Major", "priority":{"level":"5", "title":""}, "submittedBy":{"username":"akakkar", "name":"Ankit Kakkar", "email":"Ankit.Kakkar@marklogic.com"}, "assignTo":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}, "description":"Problem report for 6.0-2, tested using OS X 10.8.2. Here's a simple test query, no database configuration required.\r\n\r\n\r\n\r\nimport module namespace search=\"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n\r\n\r\n\r\nsearch:search(\r\n\r\n'',\r\n\r\n<options xmlns=\"http://marklogic.com/appservices/search\"\r\n\r\nxmlns:t=\"test\">\r\n\r\n<additional-query>\r\n\r\n{ cts:element-query(xs:QName('t:test'), cts:and-query(())) }\r\n\r\n</additional-query>\r\n\r\n</options>)\r\n\r\n\r\n\r\nI expect this to work because search:check-options reports no problems. The xs:QName('t:test') constructor should have the 't' prefix in scope from the root element declaration. However an error is thrown: apparently the namespace scope isn't passed to the HOF code correctly, or the HOF code isn't using it properly.\r\n\r\n\r\n\r\n[1.0-ml] XDMP-CAST: (err:FORG0001) xs:QName(\"t:test\") -- Invalid cast: \"t:test\" cast as xs:QName\r\n\r\nin /MarkLogic/appservices/utils/higher-order.xqy\r\n\r\n\r\n\r\nSimilar errors are thrown with slight variations:\r\n\r\n\r\n\r\nimport module namespace search=\"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n\r\n\r\n\r\nsearch:search(\r\n\r\n'',\r\n\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n\r\n<additional-query xmlns:t=\"test\">\r\n\r\n{ cts:element-query(xs:QName('t:test'), cts:and-query(())) }\r\n\r\n</additional-query>\r\n\r\n</options>)\r\n\r\n\r\n\r\nWorkaround: \r\n\r\n\r\n\r\nimport module namespace search=\"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n\r\n\r\n\r\nsearch:search(\r\n\r\n'',\r\n\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n\r\n<additional-query>\r\n\r\n{ cts:element-query(QName('test', 'test'), cts:and-query(())) }\r\n\r\n</additional-query>\r\n\r\n</options>)\r\n\r\n\r\n\r\n...or\r\n\r\n\r\n\r\nimport module namespace search=\"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n\r\n\r\n\r\ndeclare namespace t=\"test\";\r\n\r\n\r\n\r\nsearch:search(\r\n\r\n'',\r\n\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n\r\n<additional-query>\r\n\r\n{ cts:element-query(xs:QName('t:test'), cts:and-query(())) }\r\n\r\n</additional-query>\r\n\r\n</options>)\r\n\r\n\r\n\r\nFull stack trace from the first test query:\r\n\r\n\r\n\r\n[1.0-ml] XDMP-CAST: (err:FORG0001) xs:QName(\"t:test\") -- Invalid cast: \"t:test\" cast as xs:QName\r\n\r\nStack trace:\r\n\r\n\r\n\r\nin /MarkLogic/appservices/utils/higher-order.xqy at 1:61: \r\n\r\nxdmp:value(xs:untypedAtomic(\"(cts:search(fn:collection(), cts:and-query(cts:element-query(xs:...\"))\r\n\r\n\r\n\r\n$expr := <hof:func version=\"1\" arity=\"2\" xmlns:hof=\"http://marklogic.com/higher-order\"><hof:lambda expr=\"(cts:search(fn:collection(), cts:and-query(cts...</hof:func>\r\n\r\n\r\n\r\nin /MarkLogic/appservices/utils/higher-order.xqy at 61:8: \r\n\r\nhof:appservices-expr-invoke(<hof:func version=\"1\" arity=\"2\" xmlns:hof=\"http://marklogic.com/higher-order\"><hof:lambda expr=\"(cts:search(fn:collection(), cts:and-query(cts...</hof:func>)\r\n\r\n\r\n\r\n$expr := <hof:func version=\"1\" arity=\"2\" xmlns:hof=\"http://marklogic.com/higher-order\"><hof:lambda expr=\"(cts:search(fn:collection(), cts:and-query(cts...</hof:func>\r\n\r\n\r\n\r\nin /MarkLogic/appservices/utils/higher-order.xqy at 94:4: \r\n\r\nhof:apply-expr(<hof:func version=\"1\" arity=\"2\" xmlns:hof=\"http://marklogic.com/higher-order\"><hof:lambda expr=\"(cts:search(fn:collection(), cts:and-query(cts...</hof:func>)\r\n\r\n\r\n\r\n$fnobj := <hof:func version=\"1\" arity=\"2\" xmlns:hof=\"http://marklogic.com/higher-order\"><hof:lambda expr=\"(cts:search(fn:collection(), cts:and-query(cts...</hof:func>\r\n\r\n\r\n\r\nin /MarkLogic/appservices/search/search-impl.xqy at 1562:20: \r\n\r\nimpl:do-query(\"\", <options xmlns:t=\"test\" xmlns=\"http://marklogic.com/appservices/search\"><additional-query><cts:element-query xmlns:cts=\"http://marklogic...</options>, (), 1, (), fn:false())\r\n\r\n\r\n\r\n$qtext := \"\"\r\n\r\n$deltaoptions := <options xmlns:t=\"test\" xmlns=\"http://marklogic.com/appservices/search\"><additional-query><cts:element-query xmlns:cts=\"http://marklogic...</options>\r\n\r\n$query := ()\r\n\r\n$start := xs:unsignedLong(\"1\")\r\n\r\n$page-length := ()\r\n\r\n$raw-results := fn:false()\r\n\r\n$t-minus-0 := xs:dayTimeDuration(\"PT0.000279S\")\r\n\r\n$init-options := <options xmlns=\"http://marklogic.com/appservices/search\"><additional-query><cts:element-query xmlns:cts=\"http://marklogic...</options>\r\n\r\n$ast := ()\r\n\r\n$parsed-query := <cts:and-query qtextempty=\"1\" xmlns:cts=\"http://marklogic.com/cts\"/>\r\n\r\n$options := <options xmlns=\"http://marklogic.com/appservices/search\"><additional-query><cts:element-query xmlns:cts=\"http://marklogic...</options>\r\n\r\n$return-results := fn:true()\r\n\r\n$return-metrics := fn:true()\r\n\r\n$return-facets := fn:true()\r\n\r\n$return-plan := ()\r\n\r\n$return-qtext := fn:true()\r\n\r\n$return-query := fn:false()\r\n\r\n$return-constraints := fn:false()\r\n\r\n$return-similar := fn:false()\r\n\r\n$format-fname := attribute{fn:QName(\"\", \"apply\")}{\"snippet\"}\r\n\r\n$snippet-format := attribute{fn:QName(\"\", \"apply\")}{\"snippet\"}\r\n\r\n$extra-cts := <cts:element-query xmlns:cts=\"http://marklogic.com/cts\" xmlns=\"http://marklogic.com/appservices/search\"><cts:element>t:test</cts:element><cts:and-query/></cts:element-query>\r\n\r\n$quality-weight := xs:double(\"1\")\r\n\r\n$forests := ()\r\n\r\n$page-length := 10\r\n\r\n$page-length := 10\r\n\r\n$debug-mode := fn:false()\r\n\r\n$options-validate := ()\r\n\r\n$start := xs:unsignedLong(\"1\")\r\n\r\n$start := xs:unsignedLong(\"1\")\r\n\r\n$end := 10\r\n\r\n$log := ()\r\n\r\n$combined-query := <cts:and-query xmlns:cts=\"http://marklogic.com/cts\"><cts:and-query qtextempty=\"1\"/><cts:element-query><cts:element>t...</cts:and-query>\r\n\r\n$warnings := ()\r\n\r\n$flwor := \"(cts:search(fn:collection(), cts:and-query(cts:element-query(xs:...\"\r\n\r\n$_ := ()\r\n\r\n$expr := <hof:func version=\"1\" arity=\"2\" xmlns:hof=\"http://marklogic.com/higher-order\"><hof:lambda expr=\"(cts:search(fn:collection(), cts:and-query(cts...</hof:func>\r\n\r\n\r\n\r\nin /MarkLogic/appservices/search/search.xqy at 41:4: \r\n\r\nsearch:search(\"\", <options xmlns:t=\"test\" xmlns=\"http://marklogic.com/appservices/search\"><additional-query><cts:element-query xmlns:cts=\"http://marklogic...</options>)\r\n\r\n\r\n\r\n$qtext := \"\"\r\n\r\n$options := <options xmlns:t=\"test\" xmlns=\"http://marklogic.com/appservices/search\"><additional-query><cts:element-query xmlns:cts=\"http://marklogic...</options>\r\n\r\n\r\n\r\nat 3:0:\r\n\r\n1: import module namespace search=\"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n\r\n2: \r\n\r\n3: search:search(\r\n\r\n4: '',\r\n\r\n5: <options xmlns=\"http://marklogic.com/appservices/search\"\r\n\r\n\r\n\r\nxdmp:eval(\"import module namespace search=&quot;http://marklogic.com/appser...\", (), <options xmlns=\"xdmp:eval\"><root>/Users/mblakele/Source/marklogic-cq</root><isolation>diffe...</options>)\r\n\r\n\r\n\r\n\r\n\r\nin /eval.xqy at 115:30:", "samplequery":"", "sampledata":"", "version":"7.0-nightly", "tofixin":"7.0-ea2", "fixedin":"7.0-ea2", "platform":"all", "memory":"", "processors":"", "note":"Raised for ticket 12204.", "subscribers":[{"username":"akakkar", "name":"Ankit Kakkar", "email":"Ankit.Kakkar@marklogic.com"}, {"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, {"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}], "attachments":[], "relationships":[{"type":"", "to":""}], "clones":[], "cloneOf":20195, "support":{"headline":"", "supportDescription":"", "publishStatus":"Not Ready", "tickets":[], "customerImpact":{"level":"N/A", "title":""}, "workaround":""}, "tags":["Search API", "akakkar"], "changeHistory":[{"time":"2012-12-05T10:29:05.998893-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"status":{"from":"", "to":"Verify"}, "assignTo":{"from":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "to":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-05T10:29:05.998893-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"assignTo":{"from":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "to":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}}}, "files":[], "show":true}, {"time":"2012-12-05T10:29:05.998893-08:00", "updatedBy":{"username":"gvaidees", "name":"Ganesh Vaideeswaran", "email":"Ganesh.Vaideeswaran@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"6.0-3"}}, "files":[], "show":true}, {"time":"2013-01-30T16:41:25.384972-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"status":{"from":"", "to":"Fix"}, "assignTo":{"from":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "to":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}}}, "files":[], "show":true, "comment":"Found where this implementation is missing."}, {"time":"2013-01-30T16:41:25.384972-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"tofixin":{"from":"", "to":"7.0-ea1"}}, "files":[], "show":true}, {"time":"2013-01-30T16:48:44.354073-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{}, "files":[], "show":true, "comment":"Hi Ankit, turns out that the search API is not designed to use all in-scope-prefixes, but only those defined on specific elements.  That said, additional-query should be one of those and is not.\r\n\r\nSo this at least should work:\r\n\r\nimport module namespace search=\"http://marklogic.com/appservices/search\" at \"/MarkLogic/appservices/search/search.xqy\";\r\n  \r\nsearch:search(\r\n'',\r\n<options xmlns=\"http://marklogic.com/appservices/search\">\r\n  <additional-query xmlns:t=\"test\">\r\n  { cts:element-query(xs:QName('t:test'), cts:and-query(())) }\r\n  </additional-query>\r\n</options>)\r\n\r\nas well as the case where you declare it in XQuery, but NOT if you declare it on the options node (rationale goes way back , to avoid collisions)\r\n\r\nI've got a patch that fixes this.\r\n "}, {"time":"2013-01-31T09:28:02.95131-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{}, "files":[], "show":true, "svn":{"repository":"/project/engsvn", "revision":"130148", "paths":["xdmp/trunk/src/Apps/test/appservices/search-unittest/checkopts-unittest.xqy", "xdmp/trunk/src/Modules/MarkLogic/appservices/search/search-impl.xqy"], "affectedBugs":[]}, "comment":"bug:20650 additional query namespace bindings"}, {"time":"2013-01-31T09:29:30.399095-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"status":{"from":"", "to":"Test"}, "assignTo":{"from":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "to":{"username":"akakkar", "name":"Ankit Kakkar", "email":"Ankit.Kakkar@marklogic.com"}}}, "files":[], "show":true, "comment":"Hi Ankit, this should be all set.  Note that one of your scenarios is not supposed to work - the ns declaration on the options node.\r\n\r\nIt should work with declarations on additional-query and in the XQuery module."}, {"time":"2013-01-31T09:29:30.399095-08:00", "updatedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "change":{"assignTo":{"from":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "to":{"username":"akakkar", "name":"Ankit Kakkar", "email":"Ankit.Kakkar@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-03-07T15:56:24.135564-08:00", "updatedBy":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, "change":{"assignTo":{"from":{"username":"msarma", "name":"Meghalim Sarma", "email":"msarma@marklogic.com"}, "to":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}}}, "files":[], "show":true}, {"time":"2013-05-20T11:37:01.520287-07:00", "updatedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "change":{"status":{"from":"", "to":"Ship"}, "assignTo":{"from":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true, "comment":"Verified passed on 05/20"}, {"time":"2013-05-20T11:37:01.520287-07:00", "updatedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "change":{"assignTo":{"from":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "to":{"username":"nobody", "name":"nobody nobody", "email":"nobody@marklogic.com"}}}, "files":[], "show":true}], "updatedAt":"2013-05-20T11:37:01.520287-07:00", "fixedAt":"2013-01-31T09:29:30.399095-08:00", "fixedBy":{"username":"cgreer", "name":"Charles Greer", "email":"charles.greer@marklogic.com"}, "shippedAt":"2013-05-20T11:37:01.520287-07:00", "shippedBy":{"username":"ayuwono", "name":"Aries Yuwono", "email":"ayuwono@marklogic.com"}, "renderDescriptionAs":"normal"}