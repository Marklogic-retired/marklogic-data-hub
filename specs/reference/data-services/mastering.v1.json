{
  "openapi": "3.0.1",
  "info": {
    "title": "Data Hub Mastering Data Services",
    "version": "1.0.0",
    "description": "These are the mastering-related data services that are provided from the MarkLogic Data Hub",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "email": "hub-team@marklogic.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8010/data-hub/5/data-services"
    }
  ],
  "paths": {
    "/master/previewMatchActivity.sjs": {
      "post": {
        "tags": [
          "master"
        ],
        "summary": "Preview the results of a match activity run against the a data set",
        "operationId": "previewMatchActivity",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type":"object",
                "properties": {
                  "sampleSize": { "type": "integer" },
                  "uris": {
                    "type":"array",
                    "items": { "type": "string" }
                  },
                  "matchStepName": {
                    "$ref": "#/components/schemas/MatchArtifactRef"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preview of what will occur as part of the match activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchActivityPreview"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "canReadMatching"
            ]
          }
        ],
        "x-codegen-request-body-name": "body",
        "description": "Given a match artifact and a sampling of a data set, this returns a description of the actions that will occur on that data set."
      }
    },
    "/master/calculateMatchActivity.sjs": {
      "post": {
        "tags": [
          "master",
          "match"
        ],
        "summary": "Get the calculated fields describing the how a match artifact will affect a data set",
        "operationId": "calculateMatchOptions",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MatchArtifactRef"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calculated fields descibing the match activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchCalculation"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "canReadMatching"
            ]
          }
        ],
        "x-codegen-request-body-name": "body",
        "description": "Returns data describing the match process"
      }
    },
    "/master/getDefaultCollections.sjs": {
      "post": {
        "tags": [
          "master",
          "merge"
        ],
        "summary": "Get the entity type specific master collections",
        "operationId": "getDefaultCollections",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "entityType": {
                    "type": "string",
                    "description": "The title of a given Entity Type"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default master collections based off passed entity type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../models/MasterCollections.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [
              "canReadMatching",
              "canReadMerging"
            ]
          }
        ],
        "x-codegen-request-body-name": "body",
        "description": "Returns the default collection operations applied, given an Entity Type"
      }
    }
  },
  "components": {
    "schemas": {
      "MatchAction": {
        "type": "string",
        "description": "The action that will take place when this threshold is met",
        "enum": [
          "notify",
          "merge",
          "custom"
        ],
        "example": "merge"
      },
      "MatchArtifactRef": {
        "type": "object",
        "required": [
          "matchStepName"
        ],
        "properties": {
          "matchStepName": {
            "type": "string",
            "description": "The name of a match step"
          }
        }
      },
      "MatchContribution": {
        "type": "object",
        "properties": {
          "entityPropertyPath": {
            "type": "string",
            "description": "The title of an entity type property, optionally prefixed with the Entity Type Title and \".\" to differentiate between properties",
            "example": "Person.name"
          },
          "matchAlgorithm": {
            "type": "string",
            "description": "The name of the match algorithm being used",
            "example": "doubleMetaphone"
          },
          "weight": {
            "type": "integer",
            "description": "The weight that a match on this property and algoritm will contribute",
            "example": 8
          }
        }
      },
      "MatchActivityPreview": {
        "type": "object",
        "properties": {
          "sampleSize": {
            "type": "integer",
            "description": "The number of documents included in sample for preview",
            "example": 200
          },
          "actionsPreview": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of a threshold that causes an action",
                  "example": "mergeThreshold"
                },
                "action": {
                  "$ref": "#/components/schemas/MatchAction"
                },
                "uris": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "/doc1.json",
                    "/doc2.json"
                  ]
                },
                "matchContributions": {
                  "type": "array",
                  "description": "The combination of matches that occured ti",
                  "items": {
                    "$ref": "#/components/schemas/MatchContribution"
                  }
                }
              }
            }
          }
        },
        "description": "Previews what will occur when a matching step is run on a sample of a data set.",
        "x-examples": {
          "match-preview": {
            "sampleSize": 200,
            "actionsPreview": [
              {
                "name": "myMergeThreshold",
                "action": "merge",
                "uris": [
                  "/doc1-a.json",
                  "/doc1-b.json"
                ],
                "matchContributions": [
                  {
                    "entityPropertyPath": "Person.name",
                    "matchAlgorithm": "doubleMetaphone",
                    "weight": 10
                  },
                  {
                    "entityPropertyPath": "Person.address",
                    "matchAlgorithm": "exact",
                    "weight": 30
                  }
                ]
              }
            ]
          }
        },
        "x-tags": [
          "match",
          "master"
        ]
      },
      "MatchCalculation": {
        "type": "object",
        "properties": {
          "scale": {
            "type": "object",
            "properties": {
              "min": {
                "type": "integer",
                "description": "The minimum value on the match scale",
                "example": 0
              },
              "max": {
                "type": "integer",
                "description": "The maximum value on the match scale",
                "example": 16
              }
            }
          },
          "thresholdActions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of a threshold that causes an action",
                  "example": "mergeThreshold"
                },
                "action": {
                  "$ref": "#/components/schemas/MatchAction"
                },
                "minimumMatchContributions": {
                  "type": "array",
                  "description": "All match combinations that will result in an action",
                  "items": {
                    "type": "array",
                    "description": "A single match combination that will result in an action",
                    "items": {
                      "$ref": "#/components/schemas/MatchContribution"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "tags": [
    {
      "name": "mastering",
      "description": "APIs for creating mastered harmonized documents"
    }
  ],
  "externalDocs": {
    "description": "Find out more about the Data Hub",
    "url": "http://www.marklogic.com/datahub"
  }
}