
package com.marklogic.hub.central.schemas;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "relatedEntityMappingId",
    "expressionContext",
    "uriExpression",
    "properties",
    "collections",
    "permissions",
    "targetEntityType"
})
@Generated("jsonschema2pojo")
public class RelatedEntityMapping {

    /**
     * Unique identifier of the related entity mapping
     * (Required)
     * 
     */
    @JsonProperty("relatedEntityMappingId")
    @JsonPropertyDescription("Unique identifier of the related entity mapping")
    private String relatedEntityMappingId;
    /**
     * An element in the source data from which to derive the values of this related entity's properties
     * 
     */
    @JsonProperty("expressionContext")
    @JsonPropertyDescription("An element in the source data from which to derive the values of this related entity's properties")
    private String expressionContext;
    /**
     * XPath expression for generating the uri of this related entity instance document
     * 
     */
    @JsonProperty("uriExpression")
    @JsonPropertyDescription("XPath expression for generating the uri of this related entity instance document")
    private String uriExpression;
    /**
     * MappingProperties
     * <p>
     * 
     * (Required)
     * 
     */
    @JsonProperty("properties")
    private MappingPropertiesSchema properties;
    /**
     * additional collections provided by the user that get applied to this related entity instance document
     * 
     */
    @JsonProperty("collections")
    @JsonPropertyDescription("additional collections provided by the user that get applied to this related entity instance document")
    private List<String> collections = new ArrayList<String>();
    /**
     * Comma-delimited string of role,capability,role,capability,etc for the entity instance generated by this mapping
     * 
     */
    @JsonProperty("permissions")
    @JsonPropertyDescription("Comma-delimited string of role,capability,role,capability,etc for the entity instance generated by this mapping")
    private String permissions;
    /**
     * The identifier of the related Entity Type. (IRI, with title as fallback)
     * (Required)
     * 
     */
    @JsonProperty("targetEntityType")
    @JsonPropertyDescription("The identifier of the related Entity Type. (IRI, with title as fallback)")
    private String targetEntityType;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    /**
     * Unique identifier of the related entity mapping
     * (Required)
     * 
     */
    @JsonProperty("relatedEntityMappingId")
    public String getRelatedEntityMappingId() {
        return relatedEntityMappingId;
    }

    /**
     * Unique identifier of the related entity mapping
     * (Required)
     * 
     */
    @JsonProperty("relatedEntityMappingId")
    public void setRelatedEntityMappingId(String relatedEntityMappingId) {
        this.relatedEntityMappingId = relatedEntityMappingId;
    }

    /**
     * An element in the source data from which to derive the values of this related entity's properties
     * 
     */
    @JsonProperty("expressionContext")
    public String getExpressionContext() {
        return expressionContext;
    }

    /**
     * An element in the source data from which to derive the values of this related entity's properties
     * 
     */
    @JsonProperty("expressionContext")
    public void setExpressionContext(String expressionContext) {
        this.expressionContext = expressionContext;
    }

    /**
     * XPath expression for generating the uri of this related entity instance document
     * 
     */
    @JsonProperty("uriExpression")
    public String getUriExpression() {
        return uriExpression;
    }

    /**
     * XPath expression for generating the uri of this related entity instance document
     * 
     */
    @JsonProperty("uriExpression")
    public void setUriExpression(String uriExpression) {
        this.uriExpression = uriExpression;
    }

    /**
     * MappingProperties
     * <p>
     * 
     * (Required)
     * 
     */
    @JsonProperty("properties")
    public MappingPropertiesSchema getProperties() {
        return properties;
    }

    /**
     * MappingProperties
     * <p>
     * 
     * (Required)
     * 
     */
    @JsonProperty("properties")
    public void setProperties(MappingPropertiesSchema properties) {
        this.properties = properties;
    }

    /**
     * additional collections provided by the user that get applied to this related entity instance document
     * 
     */
    @JsonProperty("collections")
    public List<String> getCollections() {
        return collections;
    }

    /**
     * additional collections provided by the user that get applied to this related entity instance document
     * 
     */
    @JsonProperty("collections")
    public void setCollections(List<String> collections) {
        this.collections = collections;
    }

    /**
     * Comma-delimited string of role,capability,role,capability,etc for the entity instance generated by this mapping
     * 
     */
    @JsonProperty("permissions")
    public String getPermissions() {
        return permissions;
    }

    /**
     * Comma-delimited string of role,capability,role,capability,etc for the entity instance generated by this mapping
     * 
     */
    @JsonProperty("permissions")
    public void setPermissions(String permissions) {
        this.permissions = permissions;
    }

    /**
     * The identifier of the related Entity Type. (IRI, with title as fallback)
     * (Required)
     * 
     */
    @JsonProperty("targetEntityType")
    public String getTargetEntityType() {
        return targetEntityType;
    }

    /**
     * The identifier of the related Entity Type. (IRI, with title as fallback)
     * (Required)
     * 
     */
    @JsonProperty("targetEntityType")
    public void setTargetEntityType(String targetEntityType) {
        this.targetEntityType = targetEntityType;
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(RelatedEntityMapping.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
        sb.append("relatedEntityMappingId");
        sb.append('=');
        sb.append(((this.relatedEntityMappingId == null)?"<null>":this.relatedEntityMappingId));
        sb.append(',');
        sb.append("expressionContext");
        sb.append('=');
        sb.append(((this.expressionContext == null)?"<null>":this.expressionContext));
        sb.append(',');
        sb.append("uriExpression");
        sb.append('=');
        sb.append(((this.uriExpression == null)?"<null>":this.uriExpression));
        sb.append(',');
        sb.append("properties");
        sb.append('=');
        sb.append(((this.properties == null)?"<null>":this.properties));
        sb.append(',');
        sb.append("collections");
        sb.append('=');
        sb.append(((this.collections == null)?"<null>":this.collections));
        sb.append(',');
        sb.append("permissions");
        sb.append('=');
        sb.append(((this.permissions == null)?"<null>":this.permissions));
        sb.append(',');
        sb.append("targetEntityType");
        sb.append('=');
        sb.append(((this.targetEntityType == null)?"<null>":this.targetEntityType));
        sb.append(',');
        sb.append("additionalProperties");
        sb.append('=');
        sb.append(((this.additionalProperties == null)?"<null>":this.additionalProperties));
        sb.append(',');
        if (sb.charAt((sb.length()- 1)) == ',') {
            sb.setCharAt((sb.length()- 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int result = 1;
        result = ((result* 31)+((this.collections == null)? 0 :this.collections.hashCode()));
        result = ((result* 31)+((this.targetEntityType == null)? 0 :this.targetEntityType.hashCode()));
        result = ((result* 31)+((this.permissions == null)? 0 :this.permissions.hashCode()));
        result = ((result* 31)+((this.relatedEntityMappingId == null)? 0 :this.relatedEntityMappingId.hashCode()));
        result = ((result* 31)+((this.expressionContext == null)? 0 :this.expressionContext.hashCode()));
        result = ((result* 31)+((this.additionalProperties == null)? 0 :this.additionalProperties.hashCode()));
        result = ((result* 31)+((this.uriExpression == null)? 0 :this.uriExpression.hashCode()));
        result = ((result* 31)+((this.properties == null)? 0 :this.properties.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof RelatedEntityMapping) == false) {
            return false;
        }
        RelatedEntityMapping rhs = ((RelatedEntityMapping) other);
        return (((((((((this.collections == rhs.collections)||((this.collections!= null)&&this.collections.equals(rhs.collections)))&&((this.targetEntityType == rhs.targetEntityType)||((this.targetEntityType!= null)&&this.targetEntityType.equals(rhs.targetEntityType))))&&((this.permissions == rhs.permissions)||((this.permissions!= null)&&this.permissions.equals(rhs.permissions))))&&((this.relatedEntityMappingId == rhs.relatedEntityMappingId)||((this.relatedEntityMappingId!= null)&&this.relatedEntityMappingId.equals(rhs.relatedEntityMappingId))))&&((this.expressionContext == rhs.expressionContext)||((this.expressionContext!= null)&&this.expressionContext.equals(rhs.expressionContext))))&&((this.additionalProperties == rhs.additionalProperties)||((this.additionalProperties!= null)&&this.additionalProperties.equals(rhs.additionalProperties))))&&((this.uriExpression == rhs.uriExpression)||((this.uriExpression!= null)&&this.uriExpression.equals(rhs.uriExpression))))&&((this.properties == rhs.properties)||((this.properties!= null)&&this.properties.equals(rhs.properties))));
    }

}
