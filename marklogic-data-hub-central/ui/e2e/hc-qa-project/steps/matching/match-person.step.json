{
  "name" : "match-person",
  "description" : "",
  "stepDefinitionName" : "default-matching",
  "stepDefinitionType" : "MATCHING",
  "additionalCollections" : [ ],
  "sourceQuery" : "cts.collectionQuery([\"mapPersonJSON\"])",
  "provenanceGranularityLevel" : "fine",
  "targetEntity" : "Person",
  "sourceDatabase" : "data-hub-FINAL",
  "collections" : [ "match-person", "Person" ],
  "matchOptions" : {
    "dataFormat" : "json",
    "algorithms" : {
      "algorithm" : [ {
        "name" : "double-metaphone",
        "function" : "double-metaphone",
        "namespace" : "http://marklogic.com/smart-mastering/algorithms",
        "at" : "/com.marklogic.smart-mastering/algorithms/double-metaphone.xqy"
      }, {
        "name" : "thesaurus",
        "function" : "thesaurus",
        "namespace" : "http://marklogic.com/smart-mastering/algorithms",
        "at" : "/com.marklogic.smart-mastering/algorithms/thesaurus.xqy"
      }, {
        "name" : "zip-match",
        "function" : "zip-match",
        "namespace" : "http://marklogic.com/smart-mastering/algorithms",
        "at" : "/com.marklogic.smart-mastering/algorithms/zip.xqy"
      }, {
        "name" : "standard-reduction",
        "function" : "standard-reduction"
      }, {
        "name" : "dob-match",
        "function" : "dob-match",
        "namespace" : "http://marklogic.com/smart-mastering/algorithms",
        "at" : "/custom-modules/custom/dob-match.xqy"
      } ]
    },
    "collections" : {
      "content" : [ ]
    },
    "scoring" : {
      "add" : [ {
        "propertyName" : "lname",
        "weight" : "10"
      }, {
        "propertyName" : "SSN",
        "weight" : "20"
      } ],
      "expand" : [ {
        "propertyName" : "fname",
        "algorithmRef" : "double-metaphone",
        "weight" : "10",
        "dictionary" : "/dictionary/first-names.xml",
        "distanceThreshold" : "100"
      }, {
        "propertyName" : "fname",
        "algorithmRef" : "thesaurus",
        "weight" : "10",
        "thesaurus" : "/thesaurus/nicknames.xml"
      }, {
        "propertyName" : "DateOfBirth",
        "algorithmRef" : "dob-match",
        "weight" : "10"
      }, {
        "propertyName" : "ZipCode",
        "algorithmRef" : "zip-match",
        "zip" : [ {
          "origin" : 5,
          "weight" : "10"
        }, {
          "origin" : 9,
          "weight" : "10"
        } ]
      } ],
      "reduce" : [ {
        "allMatch" : {
          "property" : [ "Address" ]
        },
        "algorithmRef" : "standard-reduction",
        "weight" : "5"
      } ]
    },
    "actions" : {
      "action" : [ {
        "name" : "customMatch",
        "at" : "/custom-modules/custom/custom-match-action.sjs",
        "function" : "customMatch"
      } ]
    },
    "thresholds" : {
      "threshold" : [ {
        "above" : "19",
        "label" : "Match",
        "action" : "merge"
      }, {
        "above" : "9",
        "label" : "Likely Match",
        "action" : "notify"
      }, {
        "above" : "4",
        "label" : "Slight Match",
        "action" : "customMatch"
      } ]
    },
    "tuning" : {
      "maxScan" : 200
    }
  },
  "targetDatabase" : "data-hub-FINAL",
  "targetFormat" : "json",
  "stepId" : "match-person-matching"
}