plugins {
    id "java-library"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "io.snyk.gradle.plugin.snykplugin" version "0.4"
    id 'maven-publish'
}

group = 'com.marklogic'

// See https://github.com/snyk/gradle-plugin for docs
snyk {
    severity = 'medium'
    api = snykToken
    autoDownload = true
    autoUpdate = true
}

dependencies {
    implementation project(":marklogic-data-hub")
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.1"
    implementation "com.beust:jcommander:1.81"
    implementation 'commons-io:commons-io:2.11.0'
    implementation "org.slf4j:slf4j-api:1.7.36"

    testImplementation(testFixtures(project(":marklogic-data-hub")))
}

test {
    systemProperty "mlHost", mlHost
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName = "marklogic-data-hub"
    archiveClassifier = "installer"
    manifest {
        attributes "Main-Class": "com.marklogic.hub.dhs.installer.Main"
    }
}
build.dependsOn shadowJar

task installDhfIntoDhs(type: Exec) {
    description = "Builds and runs the DHF installer for DHS"
    workingDir = "."
    commandLine = "java"
    args = [
        "-jar", "build/libs/marklogic-data-hub-${version}-installer.jar",
        "--path", "build/dhsInstaller",
        "--host", mlHost,
        "--username", mlUsername,
        "--password", mlPassword,
        "dhsInstall"
    ]
}
installDhfIntoDhs.dependsOn jar

publishing {
    publications {
        maven(MavenPublication) {
            artifact("build/libs/marklogic-data-hub-$version-installer"+".jar")
            //artifactId = 'installer-for-dhs'
        }
    }
    repositories {
        maven {
            if (project.hasProperty("mavenUser")) {
                credentials {
                    username mavenUser
                    password mavenPassword
                }
            }
            url publishUrl
        }
    }

}
publishMavenPublicationToMavenRepository.dependsOn shadowJar
publishMavenPublicationToMavenLocal.dependsOn shadowJar

