{
  "openapi": "3.0.0",
  "info": {
    "description": "This is a sample of a QuickStart DataHub Swagger doucment defining endpoints to be mocked",
    "version": "1.0.0",
    "title": "QuickStart DataHub API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/api",
  "tags": [ ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/flows": {
      "get": {
        "tags": [
          "flows"
        ],
        "summary": "Returns all flows",
        "description": "Returns all flows",
        "operationId": "findFlows",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/flow"
              },
              "default": [
                {
                  "name": "MappingFlow",
                  "description": "Maps raw values to the canonical model",
                  "identifier": "cts.collectionQuery('rawContent')",
                  "steps": [
                    {
                      "type": "mapping",
                      "name": "person-mapping1.json",
                      "identifier": null,
                      "retryLimit": 0,
                      "options": {}
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "post": {
        "tags": [
          "flows"
        ],
        "summary": "Create flow",
        "description": "",
        "operationId": "createFlow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Flow to create",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/flow",
              "default": 
                {
                  "name": "MappingFlow",
                  "description": "Maps raw values to the canonical model",
                  "identifier": "cts.collectionQuery('rawContent')",
                  "steps": [
                    {
                      "type": "mapping",
                      "name": "person-mapping1.json",
                      "identifier": null,
                      "retryLimit": 0,
                      "options": {}
                    }
                  ]
                }
            },
            "examples": {
              "ingestion": {
                "summary": "An example flow object for step type: Ingestion",
                "value": {
                  "name": "value",
                  "description": "value",
                  "identifier": "value",
                  "steps": [
                    {
                      "type": "value",
                      "name": "value",
                      "identifier": "value",
                      "retryLimit": "value",
                      "options": {
                        "param1": "value",
                        "param2": "value",
                        "param3": "value",
                        "param4": "value",
                        "param5": "value"
                      }
                    }
                  ]
                }
              },
              "mapping": {
                "summary": "An example flow object for step type: Mapping",
                "value": {
                  "name": "value",
                  "description": "value",
                  "identifier": "value",
                  "steps": [
                    {
                      "type": "value",
                      "name": "value",
                      "identifier": "value",
                      "retryLimit": "value",
                      "options": {
                        "param1": "value",
                        "param2": "value",
                        "param3": "value",
                        "param4": "value",
                        "param5": "value"
                      }
                    }
                  ]
                }
              },
              "mastering": {
                "summary": "An example flow object for step type: Mastering",
                "value": {
                  "name": "value",
                  "description": "value",
                  "identifier": "value",
                  "steps": [
                    {
                      "type": "value",
                      "name": "value",
                      "identifier": "value",
                      "retryLimit": "value",
                      "options": {
                        "param1": "value",
                        "param2": "value",
                        "param3": "value",
                        "param4": "value",
                        "param5": "value"
                      }
                    }
                  ]
                }
              },
              "custom": {
                "summary": "An example flow object for step type: Custom",
                "value": {
                  "name": "value",
                  "description": "value",
                  "identifier": "value",
                  "steps": [
                    {
                      "type": "value",
                      "name": "value",
                      "identifier": "value",
                      "retryLimit": "value",
                      "options": {
                        "param1": "value",
                        "param2": "value",
                        "param3": "value",
                        "param4": "value",
                        "param5": "value"
                      }
                    }
                  ]
                }
              }
            }            
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid name supplied"
          },
          "404": {
            "description": "flow not found"
          }
        }
      }
    },
    "/flows/{flowName}": {
      "get": {
        "tags": [
          "flows"
        ],
        "summary": "Find flow by name",
        "description": "....",
        "operationId": "getFlowByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "flowName",
            "in": "path",
            "description": "Name of flow that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/flow",
              "default": [
                {
                  "name": "MappingFlow",
                  "description": "Maps raw values to the canonical model",
                  "identifier": "cts.collectionQuery('rawContent')",
                  "steps": [
                    {
                      "type": "mapping",
                      "name": "person-mapping1.json",
                      "identifier": null,
                      "retryLimit": 0,
                      "options": {}
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Invalid name supplied"
          },
          "404": {
            "description": "flow not found"
          }
        }
      },
      "put": {
        "tags": [
          "flows"
        ],
        "summary": "Update flow with name",
        "description": "",
        "operationId": "updateFlowByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "flowName",
            "in": "path",
            "description": "Name of flow that needs to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated flow",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/flow",
              "default": [
                {
                  "name": "MappingFlow",
                  "description": "Maps raw values to the canonical model",
                  "identifier": "cts.collectionQuery('rawContent')",
                  "steps": [
                    {
                      "type": "mapping",
                      "name": "person-mapping1.json",
                      "identifier": null,
                      "retryLimit": 0,
                      "options": {}
                    }
                  ]
                }
              ]
            },
            "examples": {
              "ingestion": {
                "summary": "An example flow object for step type: Ingestion",
                "value": { }
              },
              "mapping": {
                "summary": "An example flow object for step type: Mapping",
                "value": { }
              },
              "mastering": {
                "summary": "An example flow object for step type: Mastering",
                "value": { }
              },
              "custom": {
                "summary": "An example flow object for step type: Custom",
                "value": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid name supplied"
          },
          "404": {
            "description": "flow not found"
          }
        }
      },
      "delete": {
        "tags": [
          "flows"
        ],
        "summary": "Delete flow by name",
        "description": "",
        "operationId": "deleteFlow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "flowName",
            "in": "path",
            "description": "ID of the sample that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid name supplied"
          },
          "404": {
            "description": "Flow not found"
          }
        }
      }
    },
    "/process": {
      "post": {
        "tags": [
          "process"
        ],
        "summary": "Creates a process",
        "description": "Create a process",
        "operationId": "createProcess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create Process Parameters",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/process"
            },
            "examples": {
              "ingestion": {
                "summary": "An example process object for step type: Ingestion (?)",
                "value": { }
              },
              "mapping": {
                "summary": "An example process object for step type: Mapping (?)",
                "value": { }
              },
              "mastering": {
                "summary": "An example process object for step type: Mastering (?)",
                "value": { }
              },
              "custom": {
                "summary": "An example process object for step type: Custom (?)",
                "value": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/components/schemas/process"
              },
              "default": [
                { "id": 1, "name": "aaa", "status": "new" },
                { "id": 2, "name": "bbb", "status": "new" },
                { "id": 3, "name": "ccc", "status": "ready" },
                { "id": 4, "name": "ddd", "status": "ready" },
                { "id": 5, "name": "eee", "status": "approved" }
              ]
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/process/{type}/{name}": {
      "get": {
        "tags": [
          "process"
        ],
        "summary": "Get a process",
        "description": "Get a process",
        "operationId": "getProcess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of process to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of process to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/process"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "process"
        ],
        "summary": "Update a process",
        "description": "Update a process",
        "operationId": "updateProcess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of  process to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of  process to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update  Process Parameters",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/process"
            },
            "examples": {
              "ingestion": {
                "summary": "An example process object for step type: Ingestion (?)",
                "value": { }
              },
              "mapping": {
                "summary": "An example process object for step type: Mapping (?)",
                "value": { }
              },
              "mastering": {
                "summary": "An example process object for step type: Mastering (?)",
                "value": { }
              },
              "custom": {
                "summary": "An example process object for step type: Custom (?)",
                "value": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/components/schemas/process"
              },
              "default": [
                { "id": 1, "name": "aaa", "status": "new" },
                { "id": 2, "name": "bbb", "status": "new" },
                { "id": 3, "name": "ccc", "status": "ready" },
                { "id": 4, "name": "ddd", "status": "ready" },
                { "id": 5, "name": "eee", "status": "approved" }
              ]
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "process"
        ],
        "summary": "Delete a  process",
        "description": "Delete a  process",
        "operationId": "deleteProcess",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of  process to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name of  process to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/components/schemas/message"
              },
              "default": [
                {
                  "message": "Process deleted successfully"}
              ]
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {},
  "components": {
    "schemas": {
      "flow": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of flow"
          },
          "description": {
            "type": "string",
            "description": "Description of flow"
          },
          "identifier": {
            "type": "string",
            "description": "Identification documents passed through flow"
          },
          "steps": {
            "type": "array",
            "description": "Steps in flow",
            "items": {
              "$ref": "#/components/schemas/step"
            }
          }
        }
      },
      "step":{
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "step type"
          },
          "name": {
            "type": "string",
            "description": "step name"
          },
          "identifier": {
            "type": "string",
            "description": "Identification for documents in step"
          },
          "retryLimit": {
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          "options": {
            "type": "object"
          }
        } 
      },
      "message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "message"
        }
      },
      "process": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "options": {
            "type": "object"
          },
          "customHook": {
            "$ref": "#/components/schemas/customHook"
          }
        },
        "xml": {
          "name": "Process"
        }
      },
      "customHook": {
        "type": "object",
        "properties": {
          "module": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "user": {
            "type": "string"
          },
          "runBefore": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Tag"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about MarkLogic Data Hub",
    "url": "https://github.com/marklogic/marklogic-data-hub"
  }
}
