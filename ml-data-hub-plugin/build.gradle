/*
 * Copyright (c) 2021 MarkLogic Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

plugins {
    id 'net.saliman.properties'
    id "groovy"
    id "java-gradle-plugin"
    id "maven-publish"
    id "com.gradle.plugin-publish" version "0.15.0"

    id "io.snyk.gradle.plugin.snykplugin" version "0.4"
}

jar.enabled = true

// See https://github.com/snyk/gradle-plugin for docs
snyk {
    severity = 'medium'
    api = snykToken
    autoDownload = true
    autoUpdate = true
}

dependencies {
    implementation gradleApi()
    implementation (project(':marklogic-data-hub'))
    implementation 'com.marklogic:ml-gradle:4.3.0'
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
    implementation 'commons-io:commons-io:2.11.0'

    testImplementation localGroovy()
    testImplementation gradleTestKit()
    testImplementation 'xmlunit:xmlunit:1.6'
    testImplementation('org.spockframework:spock-spring:1.2-groovy-2.5') {
        exclude module: 'groovy-all'
    }

    testImplementation('org.spockframework:spock-core:1.2-groovy-2.5') {
        exclude module: 'groovy-all'
    }
    testImplementation 'org.springframework:spring-test:5.3.9'
}

test {
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        showStandardStreams = true
    }
    // fullcycle tests also exercise provisioning, so on thie PR removing
    // TODO put fullcycle tests in another project?
    //include 'com/marklogic/gradle/fullcycle/**'
    include 'com/marklogic/gradle/task/**'
    include 'com/marklogic/hub/gradle/task/**'
    classpath = project.sourceSets.main.runtimeClasspath + project.sourceSets.test.runtimeClasspath
}

task testFullCycle(type: Test) {
    useJUnit {
        include 'com/marklogic/gradle/fullcycle/**'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allJava
    from sourceSets.main.allGroovy
}

publishing {
    publications {
        main(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
          if(project.hasProperty("mavenUser")) {
            credentials {
            username mavenUser
            password mavenPassword
            }
          }
          url publishUrl
        }
    }
}

pluginBundle {
    website = 'https://marklogic.github.io/marklogic-data-hub/'
    vcsUrl = 'https://github.com/marklogic/marklogic-data-hub.git'
    description = 'ml-data-hub A gradle plugin for Data Hub tasks'
    tags = ['marklogic', 'data hub']

    plugins {
        mldatahubPlugin {
            id = 'com.marklogic.ml-data-hub'
            displayName = 'Gradle tasks for MarkLogic Data Hub'
            description = 'Gradle plugin for configuring and deploying the MarkLogic Data Hub'
            tags = ['marklogic', 'data hub']
        }
    }
}
