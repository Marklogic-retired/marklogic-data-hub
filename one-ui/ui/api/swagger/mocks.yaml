swagger: '2.0'
info:
    description: >-
        This is a sample of a DataHub Swagger document defining endpoints to be
        mocked
    version: 1.0.0
    title: Data Hub Curation API
    license:
        name: Apache 2.0
        url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:4200'
basePath: /api
tags: []
schemes:
    - http
paths:
    /login:
        post:
            tags:
                - login
            summary: Login User
            description: ''
            operationId: loginUser
            produces:
                - application/json
            parameters:
                -   in: body
                    name: body
                    description: Credentials to login
                    required: true
                    schema:
                        $ref: '#/definitions/loginCredentials'
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/authenticationResponse'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
    /flows:
        get:
            tags:
                - flows
            summary: Returns all flows
            description: Returns all flows
            operationId: getFlows
            produces:
                - application/json
            parameters:
                -   name: page
                    in: query
                    description: 'Page # of the paginated data'
                    required: false
                    type: string
                -   name: length
                    in: query
                    description: Length paginated data
                    required: false
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/flow'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
        post:
            tags:
                - flows
            summary: Create flow
            description: ''
            operationId: createFlow
            produces:
                - application/json
            parameters:
                -   in: body
                    name: body
                    description: Flow to create
                    required: true
                    schema:
                        $ref: '#/definitions/flow'
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/flow'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
    '/flows/{flowId}':
        get:
            tags:
                - flows
            summary: Find flow by Id
            description: ....
            operationId: getFlow
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow to be fetched
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/flow'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
        put:
            tags:
                - flows
            summary: Update flow by Id
            description: ''
            operationId: updateFlow
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow to be updated
                    required: true
                    type: string
                -   in: body
                    name: body
                    description: Updated flow
                    required: true
                    schema:
                        $ref: '#/definitions/flow'
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
        delete:
            tags:
                - flows
            summary: Delete flow by Id
            description: ''
            operationId: deleteFlow
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow to be fetched
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
    '/flows/{flowId}/run':
        post:
            tags:
                - flows
            summary: Run a Flow
            description: ''
            operationId: runFlow
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow to run
                    required: true
                    type: string
                -   in: body
                    name: body
                    description: 'Array of Step ids to run, no body if all are being executed'
                    required: false
                    schema:
                        type: array
                        items:
                            type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/runFlowResponse'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
    '/flows/{flowId}/stop':
        post:
            tags:
                - flows
            summary: Stop a Flow
            description: ''
            operationId: stopFlow
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow to stop
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/flow'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Flows
    '/flows/{flowId}/steps':
        get:
            tags:
                - steps
            summary: Get all Steps for a Flow
            description: ....
            operationId: getFlowSteps
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow to be fetched
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/step'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
        post:
            tags:
                - steps
            summary: Create a step within a Flow
            description: ''
            operationId: createFlowStep
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: Id of flow
                    required: true
                    type: string
                -   name: stepOrder
                    in: query
                    description: >-
                        The location in the Array of Steps this new Step will be inserted.
                        Defaults to end of the Array, if not set.
                    required: false
                    type: string
                -   in: body
                    name: body
                    description: Step to create
                    required: true
                    schema:
                        $ref: '#/definitions/step'
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/step'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
    '/flows/{flowId}/steps/{stepId}':
        put:
            tags:
                - steps
            summary: Update step by Id
            description: ''
            operationId: updateFlowStep
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: 'Id of flow to be updated, which is the flow name'
                    required: true
                    type: string
                -   name: stepId
                    in: path
                    description: 'Id of step to be updated, a composite of ''<stepName>-<stepType>'''
                    required: true
                    type: string
                -   in: body
                    name: body
                    description: Updated step
                    required: true
                    schema:
                        $ref: '#/definitions/step'
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
        delete:
            tags:
                - steps
            summary: Delete step by Id
            description: ''
            operationId: deleteFlowStep
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: 'Id of flow to be fetched, which is the flow name'
                    required: true
                    type: string
                -   name: stepId
                    in: path
                    description: 'Id of step to be fetched, a composite of ''<stepName>-<stepType>'''
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
    '/flows/{flowId}/steps/{stepId}/link/{artifactType}/{artifactName}':
        post:
            tags:
                - steps
            summary: Link artifact to step
            description: ''
            operationId: linkFlowStepToArtifact
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: 'Id of flow to be updated, which is the flow name'
                    required: true
                    type: string
                -   name: stepId
                    in: path
                    description: 'Id of step to be updated, a composite of ''<stepName>-<stepType>'''
                    required: true
                    type: string
                -   name: artifactType
                    in: path
                    description: Type of artifact to link to step
                    required: true
                    type: string
                -   name: artifactName
                    in: path
                    description: Name of artifact to link to step
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/flow'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
        delete:
            tags:
                - steps
            summary: Delete step by Id
            description: ''
            operationId: removeArtifactLinkFromFlowStep
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: 'Id of flow to be fetched, which is the flow name'
                    required: true
                    type: string
                -   name: stepId
                    in: path
                    description: 'Id of step to be fetched, a composite of ''<stepName>-<stepType>'''
                    required: true
                    type: string
                -   name: artifactType
                    in: path
                    description: Type of artifact to link to step
                    required: true
                    type: string
                -   name: artifactName
                    in: path
                    description: Name of artifact to link to step
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
    '/flows/{flowId}/steps/{stepId}/link/{artifactType}/{artifactName}/{artifactVersion}':
        post:
            tags:
                - steps
            summary: Link artifact to step
            description: ''
            operationId: linkFlowStepToArtifactWithVersion
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: 'Id of flow to be updated, which is the flow name'
                    required: true
                    type: string
                -   name: stepId
                    in: path
                    description: 'Id of step to be updated, a composite of ''<stepName>-<stepType>'''
                    required: true
                    type: string
                -   name: artifactType
                    in: path
                    description: Type of artifact to link to step
                    required: true
                    type: string
                -   name: artifactName
                    in: path
                    description: Name of artifact to link to step
                    required: true
                    type: string
                -   name: artifactVersion
                    in: path
                    description: Optional version of artifact to link to step
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/flow'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
        delete:
            tags:
                - steps
            summary: Delete step by Id
            description: ''
            operationId: removeArtifactWithVersionedLinkFromFlowStep
            produces:
                - application/json
            parameters:
                -   name: flowId
                    in: path
                    description: 'Id of flow to be fetched, which is the flow name'
                    required: true
                    type: string
                -   name: stepId
                    in: path
                    description: 'Id of step to be fetched, a composite of ''<stepName>-<stepType>'''
                    required: true
                    type: string
                -   name: artifactType
                    in: path
                    description: Type of artifact to link to step
                    required: true
                    type: string
                -   name: artifactName
                    in: path
                    description: Name of artifact to link to step
                    required: true
                    type: string
                -   name: artifactVersion
                    in: path
                    description: Optional version of artifact to link to step
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Steps
    '/collections/{databaseId}':
        get:
            tags:
                - collections
            summary: Get all Collections for a Database
            description: ....
            operationId: getDatabaseCollections
            produces:
                - application/json
            parameters:
                -   name: databaseId
                    in: path
                    description: Id of database to get collections from
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            type: string
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Collections
    /environment/project:
        get:
            tags:
                - current project
            summary: Get information about current project
            description: ....
            operationId: getCurrentProjectInfo
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/environmentConfig'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Current Project
    /environment/install:
        put:
            tags:
                - current project
            summary: Install the current project onto MarkLogic
            description: ....
            operationId: installCurrentProject
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Current Project
    /environment/uninstall:
        delete:
            tags:
                - current project
            summary: Uninstall current project from MarkLogic
            description: ....
            operationId: uninstallCurrentProject
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Current Project
    /environment/lastDeployed:
        get:
            tags:
                - current project
            summary: Get last deployed information for project
            description: ....
            operationId: projectLastDeployed
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Current Project
    /entities:
        get:
            tags:
                - entities
            summary: Get all entities
            description: ....
            operationId: getAllEntities
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Entities
        post:
            tags:
                - entities
            summary: Create set of entities
            description: ....
            operationId: createSetOfEntities
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Entities
    '/entities/{entityName}':
        post:
            tags:
                - entities
            summary: Update entity
            description: ....
            operationId: updateEntity
            produces:
                - application/json
            parameters:
                -   name: entityName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Entities
        get:
            tags:
                - entities
            summary: Get entity by entity name
            description: ....
            operationId: getEntityByName
            produces:
                - application/json
            parameters:
                -   name: entityName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Entities
        delete:
            tags:
                - entities
            summary: Delete entity by name
            description: ....
            operationId: deleteEntityByName
            produces:
                - application/json
            parameters:
                -   name: entityName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Entities
    /jobs:
        get:
            tags:
                - jobs
            summary: Returns all jobs
            description: Returns all jobs
            operationId: getJobs
            produces:
                - application/json
            parameters:
                -   name: page
                    in: query
                    description: 'Page # of the paginated data'
                    required: false
                    type: string
                -   name: length
                    in: query
                    description: Length paginated data
                    required: false
                    type: string
                -   name: flowName
                    in: query
                    description: Flow name to filter jobs by
                    required: false
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/job'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    '/jobs/cancel/{jobId}':
        delete:
            tags:
                - jobs
            summary: Cancel a job
            description: >-
                This has never been implemented. We currently use the flows API to stop
                running flows.
            operationId: cancelJobWithID
            produces:
                - application/json
            parameters:
                -   name: jobId
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    /jobs/latest:
        get:
            tags:
                - jobs
            summary: Find the latest job for each flow
            description: ....
            operationId: getLatestJobForEachFlow
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/job'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    '/jobs/latest/{flowName}':
        get:
            tags:
                - jobs
            summary: Find the latest job a flow
            description: ....
            operationId: getLatestJobForAFlow
            produces:
                - application/json
            parameters:
                -   name: flowName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/job'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    '/jobs/{jobId}':
        get:
            tags:
                - jobs
            summary: Get a Job by Id
            description: ....
            operationId: getJob
            produces:
                - application/json
            parameters:
                -   name: jobId
                    in: path
                    description: Id of Job to get
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/job'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
        delete:
            tags:
                - jobs
            summary: Delete job by Id
            description: ''
            operationId: deleteJob
            produces:
                - application/json
            parameters:
                -   name: jobId
                    in: path
                    description: Id of job to be fetched
                    required: true
                    type: string
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    /artifacts/loadData:
        get:
            tags:
                - load-data
            summary: Get all load data artifacts for a Project
            description: ....
            operationId: getProjectLoadDataArtifacts
            produces:
                - application/json
            parameters:
                -   name: start
                    type: integer
                    in: query
                    required: false
                -   name: pageLength
                    type: integer
                    in: query
                    required: false
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/loadDataArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
    '/artifacts/loadData/{loadDataName}':
        get:
            tags:
                - load-data
            summary: Get load data artifact by name for a Project
            description: ....
            operationId: getProjectLoadDataArtifact
            produces:
                - application/json
            parameters:
                -   name: loadDataName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/loadDataArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
        post:
            tags:
                - load-data
            summary: Create/update load data artifact for to a project
            description: ....
            operationId: createProjectLoadDataArtifact
            produces:
                - application/json
            parameters:
                -   name: loadDataName
                    type: string
                    in: path
                    required: true
                -   name: loadDataArtifact
                    schema:
                        $ref: '#/definitions/loadDataArtifact'
                    in: body
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/loadDataArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
        delete:
            tags:
                - load-data
            summary: Delete load data artifact for a Project
            description: ....
            operationId: deleteProjectLoadDataArtifact
            produces:
                - application/json
            parameters:
                -   name: loadDataName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
    '/artifacts/loadData/{loadDataName}/validate':
        post:
            tags:
                - load-data
            summary: Validate a load data artifact by name
            description: ....
            operationId: validateLoadDataArtifactByName
            produces:
                - application/json
            parameters:
                -   name: loadDataName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
    '/artifacts/loadData/{loadDataName}/setData':
        post:
            tags:
                - load-data
                - upload
            summary: Set the input files by load data artifact name
            description: ....
            operationId: setDataForLoadDataArtifactByName
            produces:
                - application/json
            consumes:
                - multipart/form-data
            parameters:
                -   name: loadDataName
                    type: string
                    in: path
                    required: true
                -   name: dataSet
                    type: array
                    in: formData
                    items:
                        type: string
                        format: binary
                    required: true
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
    /artifacts/matching:
        get:
            tags:
                - matching
            summary: Get all matching artifacts
            description: ....
            operationId: getProjectMatchingArtifacts
            produces:
                - application/json
            parameters:
                -   name: start
                    type: integer
                    in: query
                    required: false
                -   name: pageLength
                    type: integer
                    in: query
                    required: false
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/matchingArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Load Data Artifacts
    '/artifacts/matching/{matchingName}':
        get:
            tags:
                - matching
            summary: Get matching artifact by name
            description: ....
            operationId: getProjectMatchingArtifact
            produces:
                - application/json
            parameters:
                -   name: matchingName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/matchingArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Matching Artifacts
        post:
            tags:
                - matching
            summary: Create/update matching artifact
            description: ....
            operationId: createProjectMatchingArtifact
            produces:
                - application/json
            parameters:
                -   name: matchingName
                    type: string
                    in: path
                    required: true
                -   name: matchingArtifact
                    schema:
                        $ref: '#/definitions/matchingArtifact'
                    in: body
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/matchingArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Matching Artifacts
        delete:
            tags:
                - matching
            summary: Delete matching artifact
            description: ....
            operationId: deleteProjectMatchingArtifact
            produces:
                - application/json
            parameters:
                -   name: matchingName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Matching Artifacts
    '/artifacts/mappings/{mapName}':
        get:
            tags:
                - mappings
            summary: Get all Mappings for a Project
            description: ....
            operationId: getProjectMappings
            produces:
                - application/json
            parameters:
                -   name: mapName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/mappingArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mappings
        post:
            tags:
                - mappings
            summary: Add list of mappings for to a project
            description: ....
            operationId: createProjectMappings
            produces:
                - application/json
            parameters:
                -   name: mapName
                    type: string
                    in: path
                    required: true
                -   name: mapping
                    schema:
                        $ref: '#/definitions/mappingArtifact'
                    in: body
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/mappingArtifact'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mappings
        delete:
            tags:
                - mappings
            summary: Get all Mappings for a Project
            description: ....
            operationId: deleteProjectMappings
            produces:
                - application/json
            parameters:
                -   name: mapName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mappings
    '/artifacts/mappings/{mapName}/validate':
        post:
            tags:
                - mappings
            summary: Validate a mapping by name
            description: ....
            operationId: validateMappingByName
            produces:
                - application/json
            parameters:
                -   name: mapName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mappings
    /artifacts/mappings/functions:
        get:
            tags:
                - mappings
            summary: Get list of all mapping functions
            description: ....
            operationId: getMappingFunctions
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mappings
    /artifacts/mappings/names:
        get:
            tags:
                - mappings
            summary: Get all names of mappings
            description: ....
            operationId: getMappingNames
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mappings
    '/mastering/defaultCollections/{entityType}':
        get:
            tags:
                - mastering
            summary: Get the default mastering collections for a given entity
            description: ....
            operationId: getDefaultMasteringCollectionsForEntity
            produces:
                - application/json
            parameters:
                -   name: entityType
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Mastering
    /map-search:
        post:
            tags:
                - mapping search
            summary: Search documents
            description: ....
            operationId: search
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Search
    /map-search/sjsSearch:
        post:
            tags:
                - mapping search
            summary: Search documents
            description: ....
            operationId: sjsSearch
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Search
    /map-search/doc:
        get:
            tags:
                - documents
            summary: Get a document by database and URI
            description: ....
            operationId: getDocumentByDatabaseAndURI
            produces:
                - application/json
            parameters:
                -   name: database
                    in: query
                    type: string
                -   name: docUri
                    in: query
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Documents
    /info:
        get:
            tags:
                - server info
            summary: Get server configuration information
            description: ....
            operationId: getInfo
            produces:
                - application/json
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/appInfo'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: info
    /models:
        get:
            tags:
                - models
            summary: Get model information
            description: ....
            operationId: getModel
            produces:
                - application/json
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/modelInfo'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: models
    '/models/{modelName}':
        get:
            tags:
                - models
            summary: Get model information
            description: ....
            operationId: getModelbyName
            produces:
                - application/json
            parameters:
                -   name: modelName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/modelInfo'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: models
    /models/job-info:
        get:
            tags:
                - models
            summary: Returns job info for all models
            description: Returns job info for all models
            operationId: getJobInfoForAllModels
            produces:
                - application/json
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/jobInfoForModel'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    '/models/{modelName}/job-info':
        get:
            tags:
                - models
            summary: Returns job info for given model
            description: Returns job info for given model
            operationId: getJobInfoForModel
            produces:
                - application/json
            parameters:
                -   name: modelName
                    type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/jobInfoForModel'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Jobs
    /search:
        post:
            tags:
                - search
            summary: Search documents
            description: ....
            operationId: searchDocuments
            produces:
                - application/json
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: search
        get:
            tags:
                - search
            summary: Get a document by URI
            description: ....
            operationId: getDocumentByURI
            produces:
                - application/json
            parameters:
                -   name: docUri
                    in: query
                    type: string
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: search
    /facet-values/range:
        post:
            tags:
                - facet values
            summary: Get min and max range for facet value
            description: ....
            operationId: getRangeForFacet
            produces:
                - application/json
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/rangeForFacet'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: facetValue
    /facet-values:
        post:
            tags:
                - facet values
            summary: Get facet values that match a pattern
            description: ....
            operationId: getFacetValues
            produces:
                - application/json
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/facetValue'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: facetValue
    /environment/reset:
        post:
            tags:
                - projects
            summary: Reset projects list
            description: ....
            operationId: resetProjects
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Project
    /utils/searchPath:
        get:
            tags:
                - utils
            summary: Navigate directory of QS server file system
            description: ....
            operationId: searchPath
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Utilities
    /utils/validatePath:
        get:
            tags:
                - utilities
            summary: Validate file system path
            description: ....
            operationId: validatePath
            produces:
                - application/json
            parameters: []
            responses:
                '200':
                    description: Successful Operation
                    schema:
                        $ref: '#/definitions/AnyObject'
                '400':
                    description: Bad Request
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/error'
                '403':
                    description: Forbidden
                    schema:
                        $ref: '#/definitions/error'
                '404':
                    description: Not Found
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: Internal Server Error
                    schema:
                        $ref: '#/definitions/error'
            x-swagger-router-controller: Utilities
definitions:
    AnyObject:
        type: object
        description: >-
            This is a temporary definition for any object until details can be fleshed
            out
        properties: {}
    authenticationResponse:
        type: object
        description: Response after login
        properties:
            isInstalled:
                type: boolean
                description: Whether or not the Data Hub has been installed
            hasManagePrivileges:
                type: boolean
                description: >-
                    Whether or not the user has the manage privileges necessary to install
                    the Data Hub
            roles:
                type: array
                description: Array of Data Hub related roles of the user
                items:
                    type: string
    environmentConfig:
        type: object
        description: Environment information about a Data Hub project
        properties:
            installInfo:
                $ref: '#/definitions/installInfo'
            mlSettings:
                $ref: '#/definitions/mlSettings'
            installedVersion:
                type: string
                description: Version of Data Hub installed on MarkLogic
            runningVersion:
                type: string
                description: Version of Data Hub jar
            environment:
                type: string
                description: Label for environment
            marklogicVersion:
                type: string
                description: Version of MarkLogic
            versionCompatibleWithES:
                type: boolean
                description: >-
                    Whether Entity Services mapping features are available on MarkLogic
                    cluster
            initialized:
                type: boolean
                description: ''
            dhfversion:
                type: string
                description: Version of Data Hub
        example:
            environment: local
            installInfo:
                stagingAppServerExists: true
                finalAppServerExists: true
                jobAppServerExists: true
                stagingDbExists: true
                finalDbExists: true
                jobDbExists: true
                modulesDbExists: true
                stagingSchemasDbExists: true
                stagingTriggersDbExists: true
                stagingTripleIndexOn: true
                stagingCollectionLexiconOn: true
                finalTripleIndexOn: true
                finalCollectionLexiconOn: true
                stagingForestsExist: true
                finalForestsExist: true
                jobForestsExist: true
                installed: true
                partiallyInstalled: true
            mlSettings:
                host: localhost
                stagingDbName: data-hub-STAGING
                stagingHttpName: data-hub-STAGING
                stagingForestsPerHost: 3
                stagingPort: 8010
                stagingAuthMethod: digest
                finalDbName: data-hub-FINAL
                finalHttpName: data-hub-FINAL
                finalForestsPerHost: 3
                finalPort: 8011
                finalAuthMethod: digest
                jobDbName: data-hub-JOBS
                jobHttpName: data-hub-JOBS
                jobForestsPerHost: 4
                jobPort: 8013
                jobAuthMethod: digest
                modulesDbName: data-hub-MODULES
                modulesForestsPerHost: 1
                stagingTriggersDbName: data-hub-staging-TRIGGERS
                stagingTriggersForestsPerHost: 1
                finalTriggersDbName: data-hub-final-TRIGGERS
                finalTriggersForestsPerHost: 1
                stagingSchemasDbName: data-hub-staging-SCHEMAS
                stagingSchemasForestsPerHost: 1
                finalSchemasDbName: data-hub-final-SCHEMAS
                finalSchemasForestsPerHost: 1
                flowOperatorRoleName: flow-operator-role
                flowOperatorUserName: flow-operator
                flowDeveloperRoleName: flow-developer-role
                flowDeveloperUserName: flow-developer
                hubLogLevel: null
                isHostLoadBalancer: false
                isProvisionedEnvironment: false
                customForestPath: forests
                modulePermissions: >-
                    rest-reader,read,rest-writer,insert,rest-writer,update,rest-extension-user,execute,flow-operator-role,read,flow-operator-role,execute
                mappingPermissions: 'data-hub-mapping-reader,read,data-hub-mapping-writer,update'
                flowPermissions: 'data-hub-flow-reader,read,data-hub-flow-writer,update'
                stepDefinitionPermissions: >-
                    data-hub-step-definition-reader,read,data-hub-step-definition-writer,update
                entityModelPermissions: 'data-hub-entity-model-reader,read,data-hub-entity-model-writer,update'
                jobPermissions: 'data-hub-job-reader,read,data-hub-job-internal,update'
                userModulesDeployTimestampFile: >-
                    /space/marklogic/dh-snapshot/.tmp/local-user-modules-deploy-timestamps.properties
                dhfversion: 5.2-SNAPSHOT
                jarVersion: 5.2-SNAPSHOT
                customTokens: {}
                flowsDir: 'file:///space/marklogic/dh-snapshot/flows/'
                stepDefinitionsDir: 'file:///space/marklogic/dh-snapshot/step-definitions/'
                hubModulesDeployTimestampFile: >-
                    /space/marklogic/dh-snapshot/.tmp/hub-modules-deploy-timestamps.properties
                projectDir: /space/marklogic/dh-snapshot
            installedVersion: 5.2.0
            runningVersion: 5.2.0
            marklogicVersion: 10.0-20191215
            versionCompatibleWithES: true
            initialized: false
            dhfversion: 5.2.0
    installInfo:
        type: object
        description: Installation details about a project
        properties:
            installedVersion:
                type: string
                description: User name
            runningVersion:
                type: string
                description: User's password
    jobInfoForModel:
        type: object
        description: Installation details about a project
        example:
            entityCollection: Order
            latestJobId: 75162145-665b-444e-bf6c-31d110abb8da
            latestJobDateTime: '2020-03-05T13:06:52.00875-08:00'
    modelInfo:
        type: object
        description: Installation details about a project
        example:
            info:
                title: FirstName
                version: 0.0.1
                baseUri: 'http://example.org/'
            definitions:
                FirstName:
                    required: []
                    pii: []
                    elementRangeIndex: []
                    rangeIndex: []
                    wordLexicon: []
                    properties:
                        value:
                            datatype: string
                            collation: 'http://marklogic.com/collation/codepoint'
                        prefix:
                            datatype: string
                            collation: 'http://marklogic.com/collation/codepoint'
    mlSettings:
        type: object
        description: Installation details about a project
        properties:
            host:
                type: string
                description: Server host name of Data Hub
            stagingDbName:
                type: string
                description: Staging database name
            stagingHttpName:
                type: string
                description: Staging App Server name
            stagingForestsPerHost:
                type: integer
                description: Forests per host for staging database
            stagingPort:
                type: integer
                description: Staging app server port
            stagingAuthMethod:
                type: string
                description: Staging app server authentication method
            finalDbName:
                type: string
                description: Final database name
            finalHttpName:
                type: string
                description: Final App Server name
            finalForestsPerHost:
                type: integer
                description: Forests per host for final database
            finalPort:
                type: integer
                description: Final app server port
            finalAuthMethod:
                type: string
                description: Final app server authentication method
            jobDbName:
                type: string
                description: Jobs database name
            jobHttpName:
                type: string
                description: Jobs App Server name
            jobForestsPerHost:
                type: integer
                description: Forests per host for jobs database
            jobPort:
                type: integer
                description: Jobs app server port
            jobAuthMethod:
                type: string
                description: Jobs app server authentication method
            modulesDbName:
                type: string
                description: Modules database name
            modulesForestsPerHost:
                type: integer
                description: Forests per host for modules database
            stagingTriggersDbName:
                type: string
                description: Staging triggers database name
            stagingTriggersForestsPerHost:
                type: integer
                description: Forests per host for staging triggers database
            finalTriggersDbName:
                type: string
                description: Final triggers database name
            finalTriggersForestsPerHost:
                type: integer
                description: Forests per host for final triggers database
            stagingSchemasDbName:
                type: string
                description: Staging schema database name
            stagingSchemasForestsPerHost:
                type: integer
                description: Forests per host for staging schema database
            finalSchemasDbName:
                type: string
                description: Final schema database name
            finalSchemasForestsPerHost:
                type: integer
                description: Forests per host for final schema database
            flowOperatorRoleName:
                type: string
                description: Flow operator role name
            flowOperatorUserName:
                type: string
                description: Flow operator user name
            flowDeveloperRoleName:
                type: string
                description: Flow developer role name
            flowDeveloperUserName:
                type: string
                description: Flow developer user name
            hubLogLevel:
                type: string
                description: hubLogLevel
            isHostLoadBalancer:
                type: boolean
                description: Is the host a load balancer
            isProvisionedEnvironment:
                type: boolean
                description: Has the MarkLogic cluster been provisioned
            customForestPath:
                type: string
                description: Path to forests
            modulePermissions:
                type: string
                description: Permissions set to modules
            mappingPermissions:
                type: string
                description: Permissions set to mapping artifact documents
            flowPermissions:
                type: string
                description: Permissions set to flow documents
            stepDefinitionPermissions:
                type: string
                description: Permissions set to step definition documents
            entityModelPermissions:
                type: string
                description: Permissions set to entity model documents
            jobPermissions:
                type: string
                description: Permissions set to jobs documents
            userModulesDeployTimestampFile:
                type: string
                description: Location of modules timestamp file
            dhfversion:
                type: string
                description: Data Hub version
            jarVersion:
                type: string
                description: Version of Data Hub jar
            customTokens:
                type: object
            flowsDir:
                type: string
                description: Directory path to flows
            stepDefinitionsDir:
                type: string
                description: Directory path to step definitions
            hubModulesDeployTimestampFile:
                type: string
                description: File path to modules timestamp file
            projectDir:
                type: string
                description: Path to project directory
    lastDeployed:
        type: object
        description: Information about last deploy
        properties:
            deployed:
                type: boolean
                description: Whether or not this project has been deployed to MarkLogic
            lastUpdated:
                type: string
                description: ISO dateTime of last deploy
        example:
            deployed: true
            lastUpdated: '2019-12-31T00:00:00'
    loadDataArtifact:
        type: object
        description: Artifact for load data configuration
        required:
            - name
            - targetFormat
            - sourceFormat
        properties:
            name:
                type: string
                description: Name of the load data artifact
            description:
                type: string
                description: Description of the load data artifact
            lastUpdated:
                type: string
                description: ISO dateTime of last deploy
            targetFormat:
                type: string
                description: Target document format
                enum:
                    - xml
                    - json
                    - binary
                    - text
            sourceFormat:
                type: string
                description: Source document format
                enum:
                    - xml
                    - json
                    - binary
                    - csv
                    - text
            separator:
                type: string
                description: Separator for text-delimited (csv) source format
            outputURIReplacement:
                type: string
                description: Comma-separated pattern for replacing document URIs
            fileCount:
                type: integer
                description: Count of files in data set (Calculated in middle-tier)
            inputFilePath:
                type: string
                description: Path to data set (Managed by middle-tier)
                readOnly: true
        example:
            name: CSV Patient Visits Data
            description: CSV extract of patient visits
            lastUpdated: '2019-12-31T00:00:00'
            targetFormat: json
            sourceFormat: csv
            separator: ','
            outputURIReplacement: '/old-path,''/new-path'''
            inputFilePath: data-sets/CSV-Patient-Visits-Data
            fileCount: 21
    loginCredentials:
        type: object
        description: Credentials for logging in
        required:
            - username
            - password
        properties:
            mlHost:
                type: string
                description: MarkLogic host name
            username:
                type: string
                description: User name
            password:
                type: string
                description: User's password
        example:
            mlHost: my-data-hub.marklogic.com
            username: employee123
            password: P@ssw0rd
    appInfo:
        type: object
        description: Application configuration information
        example:
            session.timeout: '300'
    rangeForFacet:
        type: object
        description: Range for facet value
        properties:
            referenceType:
                type: string
                description: element or field
            entityTypeId:
                type: string
                description: identifier for the entity type in entity model
            propertyPath:
                type: string
                description: path to property
        example:
            min: 1
            max: 31
    facetValue:
        type: object
        description: Range for facet value
        properties:
            facetInfo:
                type: object
                description: facet information
                properties:
                    referenceType:
                        type: string
                        description: element or field
                    entityTypeId:
                        type: string
                        description: identifier for the entity type in entity model
                    propertyPath:
                        type: string
                        description: path to property
            limit:
                type: integer
                description: facet value limit
            dataType:
                type: string
                description: facet data type
            pattern:
                type: string
                description: pattern to search
        example:
            - QUEDE
            - QUEEN
            - QUICK
    flow:
        type: object
        properties:
            id:
                type: string
                description: 'Id of a flow, which is the flow name'
            name:
                type: string
                description: Name of a flow
            description:
                type: string
                description: Description of flow
            batchSize:
                type: integer
                format: int64
                description: 'The # of documents to process in a single batch'
                minimum: 0
            threadCount:
                type: integer
                format: int64
                description: ''
                minimum: 0
            options:
                type: object
                description: 'TBD: Likely metadata '
                properties: {}
            steps:
                type: array
                description: Array of summary Step objects associated with this Flow
                items:
                    type: object
                    properties: {}
            isValid:
                type: boolean
                description: >-
                    Boolean flag used for UI to tell whether all Steps associated with
                    this Flow are valid, making the Flow valid
            version:
                type: integer
                format: int64
                description: 'version of the flow, incremented with each update'
                minimum: 0
        example:
            isValid: true
            name: name
            options: '{}'
            description: description
            threadCount: 0
            id: id
            batchSize: 0
            steps:
                - '{}'
                - '{}'
            version: 0
    runFlowResponse:
        type: object
        required:
            - jobId
            - jobStatus
        properties:
            jobId:
                type: string
                description: Id of a job running the flow
            jobStatus:
                type: string
                description: status of job
            lastAttemptedStep:
                type: string
                description: Id of last attempted step
            lastCompletedStep:
                type: string
                description: Id of the last step successfully completed
            user:
                type: string
                description: Id of the user running the flow
            stepResponses:
                type: object
                description: Responses from the steps run
            timeEnded:
                type: string
                description: ISO DateTime the run completed
            flow:
                type: string
                description: Name of the flow running
            timeStarted:
                type: string
                description: ISO DataTime the run started
    step:
        type: object
        required:
            - name
            - stepDefinitionType
        properties:
            id:
                type: string
                description: 'Id of a step, a composite of ''<stepName>-<stepType>'''
            name:
                type: string
                description: Name of a step
            description:
                type: string
                description: Description of a step
            stepDefinitionName:
                type: string
                description: The step definition name
            stepDefinitionType:
                type: string
                description: Type of a step
                enum:
                    - INGESTION
                    - MAPPING
                    - MASTERING
                    - MATCHING
                    - MERGING
                    - CUSTOM
            isValid:
                type: boolean
                description: Boolean flag to tell whether a Step is valid
            fileLocations:
                type: object
                description: 'INGESTION ONLY - [add description]'
                properties:
                    inputFilePath:
                        type: string
                        description: ''
                    outputURIReplacement:
                        type: string
                        description: ''
                    inputFileType:
                        type: string
                        description: ''
            options:
                type: object
                properties: {}
            modulePath:
                type: string
                description: CUSTOM ONLY - module to execute as custom step
        example:
            id: step-1-flow-1
            name: Flow01IngestStep
            description: My Step 1 description
            stepDefinitionName: default-ingestion
            stepDefinitionType: INGESTION
            isValid: true
            fileLocations:
                inputFilePath: ''
                outputURIReplacement: ''
                inputFileType: ''
            options:
                sourceQuery: null
                collections:
                    - default-ingest
                    - Flow04IngestStep
                outputFormat: json
                permissions: 'rest-reader,read,rest-writer,update'
                targetDatabase: data-hub-STAGING
    matchingArtifact:
        type: object
        required:
            - name
            - targetEntity
            - selectedSource
        properties:
            name:
                type: string
            targetEntity:
                type: string
                description: Entity Type of the mapped data that will be matched
            selectedSource:
                type: string
            sourceQuery:
                type: string
                description: Query for matching
    mappingArtifact:
        type: object
        required:
            - name
            - targetEntity
            - selectedSource
        properties:
            name:
                type: string
            targetEntity:
                type: string
                description: Entity Type the input data will be mapped to
            selectedSource:
                type: string
            sourceQuery:
                type: string
                description: Query for mapping input
            properties:
                $ref: '#/definitions/mappingArtifactProperties'
    mappingArtifactProperties:
        type: object
        required:
            - sourcedFrom
        properties:
            entityProperty1:
                $ref: '#/definitions/mappingArtifactProperty'
            entityProperty2:
                $ref: '#/definitions/mappingArtifactProperty'
    mappingArtifactProperty:
        type: object
        properties:
            sourcedFrom:
                type: string
                description: >-
                    XPath expression that generates the value for the property or provides
                    dataset for child expression
            targetEntity:
                type: string
                description: Entity Type the input data will be mapped to
            properties:
                $ref: '#/definitions/mappingArtifactProperties'
    job:
        type: object
        required:
            - jobId
        properties:
            jobId:
                type: string
                description: Id of the job
            flowId:
                type: string
                description: Id of the flow for this job
            startTime:
                type: string
                format: date-time
                description: Timestamp job started
            endTime:
                type: string
                format: date-time
                description: Timestamp job started
            steps:
                type: array
                description: Array of Step output info
                items:
                    type: object
            user:
                type: string
                description: User that started the job
            flow:
                type: string
                description: Name of the flow being processed
            lastAttemptedStep:
                type: integer
                format: int64
                description: last step that was attempted to run
            lastCompletedStep:
                type: integer
                format: int64
                description: last step that was completed
            status:
                type: string
                description: Status of the job
                enum:
                    - canceled
                    - failed
                    - running
                    - finished-with-errors
                    - completed
            successfulEvents:
                type: integer
                format: int64
                description: '# of documents successfully processed'
                minimum: 0
            failedEvents:
                type: integer
                format: int64
                description: '# of documents that failed to process'
                minimum: 0
        example:
            user: admin
            failedEvents: 0
            successfulEvents: 0
            flow: Flow 01
            steps: []
            lastAttemptedStep: 0
            lastCompletedStep: 0
            startTime: '2000-01-23T04:56:07.000+00:00'
            jobId: job-id
            flowId: flow-id
            endTime: '2000-01-23T04:56:07.000+00:00'
            status: canceled
    error:
        type: object
        properties:
            code:
                type: integer
                format: int64
            message:
                type: string
            timestamp:
                type: string
                format: date-time
externalDocs:
    description: Find out more about MarkLogic Data Hub
    url: 'https://github.com/marklogic/marklogic-data-hub'
